@model CampusV4.Models.EstimateReplyInputViewModel

<div>
    <div class="page-title">
        <div class="title_left">
            <h3>見積回答入力（原価）</h3>
        </div>
    </div>
    <div class="clearfix"></div>
    <div class="row">
        <div class="col-md-12">
            <div class="x_panel">
                @using (Html.BeginForm("PartsListCEstimateReplyInput", "PartsListCEstimateReplyInput", FormMethod.Post, new { @class = "form-horizontal", role = "form", defaultbutton = "dummySubmit" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="form-group">
                        <label class="col-md-1 control-label text-nowrap lavel-functionkey" id="lbl_EstimateReplyNo" for="Text1">見積回答番号</label>
                        <div class="col-md-2">
                            @Html.TextBoxFor(model => model.EstimateReplyNo, new { @class = "form-control", @placeholder = "(必須)", @id = "txtEstimateReplyNo" })
                        </div>
                        <label class="col-md-1 control-label text-nowrap lavel-functionkey" id="lbl_EstimateRequestNo" for="Text2">見積依頼番号</label>
                        <div class="col-md-2">
                            @Html.TextBoxFor(model => model.EstimateRequestNo, new { @class = "form-control", @placeholder = "(必須)", @id = "txtEstimateRequestNo" })
                        </div>
                        <label class="col-md-1 control-label text-nowrap" id="lbl_EstimateReplyDate" for="Text3">見積回答日</label>
                        <div class="col-md-2">
                            @Html.C1().InputDateFor(m => m.EstimateReplyDate)
                        </div>
                    </div>

                    <div class="ln_solid"></div>

                    <div class="form-group">
                        <label class="col-md-1 control-label text-nowrap" id="lbl_InquiryNo" for="Text4">引合番号</label>
                        <div class="col-md-2">
                            @Html.TextBoxFor(model => model.InquiryNumber, new { @class = "form-control", @placeholder = "(必須)", @id = "txtInquiryNumber" })
                        </div>
                        <label class="col-md-1 control-label text-nowrap" id="lbl_GroupingMark" for="Text5">分類記号</label>
                        <div class="col-md-1">
                            @(Html.C1().ComboBoxFor(model => model.GroupingMark).Id("cmbGroupingMark")
                                .Bind(Model.GroupingMarkList)
                                .DisplayMemberPath("GroupingMarkName")
                                .SelectedValuePath("GroupingMarkCode")
                                .CssStyle( "width" , "auto" ).SelectedValue(Model.GroupingMark)
                                .IsRequired(false))
                        </div>
                        <div class="col-md-1"></div>
                        <label class="col-md-1 control-label text-nowrap lavel-functionkey" id="lbl_ProductionNumber" for="Text6">製番</label>
                        <div class="col-md-2">
                            @Html.TextBoxFor(model => model.ProductionNumber, new { @class = "form-control", @placeholder = "(必須)", @id = "txtProductionNumber" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="col-md-1 control-label text-nowrap" id="lbl_Subject" for="Text7">件名</label>
                        <div class="col-md-5">
                            @Html.TextBoxFor(model => model.Subject, new { @class = "form-control" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="col-md-1 control-label text-nowrap lavel-functionkey" id="lbl_VarietyCode" for="Test8">品種</label>
                        <div class="col-md-2">
                            @Html.TextBoxFor(model => model.VarietyCode, new { @class = "form-control" })
                        </div>
                        <label class="col-md-1 control-label text-nowrap" id="lbl_ProductName" for="Text9">品名</label>
                        <div class="col-md-4">
                            @Html.TextBoxFor(model => model.ProductName, new { @class = "form-control" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="col-md-1 control-label text-nowrap" id="lbl_DesignEmployeeCode" for="Select1">設計担当者</label>
                        <div class="col-md-2">
                            @(Html.C1().ComboBoxFor(model => model.DesignEmployeeCode)
                                .Id("cmbDesignEmployeeData")
                                .Bind(Model.EmployeeDataList)
                                .DisplayMemberPath("EmployeeCode")
                                .SelectedValuePath("EmployeeCode")
                                .HeaderPath("EmployeeCode")
                                .CssStyle( "width" , "auto" )
                                .SelectedValue(Model.DesignEmployeeCode)
                                .IsRequired(false))
                        </div>
                        <div class="col-md-2">
                            @Html.TextBoxFor(model => model.DesignEmployeeName, new { @id = "selectedDesignEmployee", @class = "form-control", @disabled = "true" })

                        </div>
                    </div>

                    <div class="form-group">
                        <label class="col-md-1 control-label text-nowrap" id="lbl_RequestDate" for="Text10">依頼日</label>
                        <div class="col-md-2">
                            @Html.C1().InputDateFor(m => m.RequestDate)
                        </div>
                        <label class="col-md-1 control-label text-nowrap" id="lbl_RequestedShippingDate" for="Text11">納入希望日</label>
                        <div class="col-md-2">
                            @Html.C1().InputDateFor(m => m.RequestedShippingDate)
                        </div>
                        <label class="col-md-1 control-label text-nowrap" id="lbl_QuotationBy" for="Text12">見積回答希望日</label>
                        <div class="col-md-2">
                            @Html.C1().InputDateFor(m => m.QuotationBy)
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="col-md-1 control-label text-nowrap lavel-functionkey" id="lbl_CampusId" for="Text13">CAMPUS-ID</label>
                        <div class="col-md-2">
                            <div class="input-group">
                                @Html.TextBoxFor(model => model.CampusId, new { @id = "CampusId", @class = "form-control" })
                                <span class="input-group-btn">
                                    <button type="button" class="btn btn-info" id="btnSearchJuchu"><i class="fa fa-search"></i></button>
                                </span>
                            </div>
                        </div>
                        <div class="col-md-3">
                            @Html.TextBoxFor(model => model.CompanyName, new { @id = "CompanyName", @class = "form-control", @placeholder = "(必須)" })
                        </div>
                    </div>

                    <div class="ln_solid"></div>

                    <div class="form-group">
                        <label class="col-md-1 control-label text-nowrap lavel-functionkey" id="lbl_SuppliersName" for="Text14">ご担当者様名</label>
                        <div class="col-md-2">
                            <div class="input-group">
                                @Html.TextBoxFor(model => model.SuppliersName, new { @id = "SuppliersName", @class = "form-control" })
                                <span class="input-group-btn">
                                    <button type="button" class="btn btn-info" id="btnSearchSupplier"><i class="fa fa-search"></i></button>
                                </span>
                            </div>
                        </div>
                        <label class="col-md-1 control-label text-nowrap" id="lbl_DepartmentName" for="Text15">部署名</label>
                        <div class="col-md-2">
                            @Html.TextBoxFor(model => model.DepartmentName, new { @id = "DepartmentName", @class = "form-control", @disabled = "true" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="col-md-1 control-label text-nowrap" id="lbl_PhoneNumber" for="Text16">連絡先</label>
                        <div class="col-md-2">
                            @Html.TextBoxFor(model => model.PhoneNumber, new { @class = "form-control", @placeholder = "(必須)" })
                        </div>
                        <label class="col-md-1 control-label text-nowrap" id="lbl_Email" for="Text17">E-Mail</label>
                        <div class="col-md-2">
                            @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @placeholder = "(必須)" })
                        </div>

                    </div>
                    <div class="form-group">
                        <label class="col-md-1 control-label text-nowrap" id="lbl_Notes" for="Text18">備考</label>
                        <div class="col-md-4">
                            @Html.TextAreaFor(model => model.Notes, new { @class = "form-control", @style = "height:100px;" })
                        </div>
                        <label class="col-md-1 control-label text-nowrap lavel-functionkey" id="lbl_FileName" for="Text19">資料添付</label>
                        <div class="col-md-6">
                            <div class="dropzone dz-clickable" id="myDrop">
                                <div class="dz-default dz-message" data-dz-message="">
                                    <span>ファイルをドラッグ＆ドロップしてしてください。<br>またはここをクリック(タップ)して選択してください。</span>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-md-offset-5 col-md-1 control-label text-nowrap" id="lbl_PhoneNumber" for="Text16">依頼時添付資料</label>
                        <label class="col-md-1 control-label text-nowrap" id="lbl_Notes" for="Text100"><a href="#">・https://drive.google.com/xxxx/folders/xxxxxxxxxxxxx</a><br><a href="#">・https://drive.google.com/yyyy/folders/yyyyyyyyyy</a></label>
                    </div>
                    <div class="form-group">
                        <div class="col-md-4">
                            <label class="control-label text-nowrap" id="lbl_RfqClassification" for="Text13"> </label>
                            <label class="control-label" for="Text14" style="text-align:left;">
                                @Html.RadioButtonFor(model => model.RfqClassification, 1)概算または出図前見積　
                                @Html.RadioButtonFor(model => model.RfqClassification, 2) 正式見積
                            </label>
                        </div>
                    </div>
                    <div class="form-group">
                        @(Html.C1().FlexGrid()
                            .AutoGenerateColumns(false).IsReadOnly(false).Height("450px").Id("flexgrid").AllowAddNew(true)
                            .Bind(Model.GridDataList)
                            .Columns(b1 =>
                            {
                                b1.Add(cb => cb.Binding("RowNumber").Width("50").Header("行").WordWrap(true).DataType(DataType.Number).IsReadOnly(true));
                                b1.Add(cb => cb.Binding("Decline").Width("80").Header("辞退"));
                                b1.Add(cb => cb.Binding("PartsCode").Width("80").Header("部品分類").WordWrap(true));
                                b1.Add(cb => cb.Binding("PartsName").Width("250").Header("部品名").WordWrap(true));
                                b1.Add(cb => cb.Binding("DrawingNumber").Width("150").Header("図面番号/型式").WordWrap(true));
                                b1.Add(cb => cb.Binding("IriSu").Width("80").Header("入数").WordWrap(true).DataType(DataType.Number));
                                b1.Add(cb => cb.Binding("Quantity").Width("80").Header("個数").WordWrap(true).DataType(DataType.Number));
                                b1.Add(cb => cb.Binding("Unit").Width("80").Header("単位").WordWrap(true).DataType(DataType.Number));
                                b1.Add(cb => cb.Binding("SurfaceTreatment").Width("80").Header("表面処理").WordWrap(true));
                                b1.Add(cb => cb.Binding("SurfaceTreatmentName").Width("200").Header("表面処理").WordWrap(true));
                                b1.Add(cb => cb.Binding("Unitprice").Width("80").Header("単価").WordWrap(true).DataType(DataType.Number));
                                b1.Add(cb => cb.Binding("Price").Width("80").Header("金額").WordWrap(true).DataType(DataType.Number));
                                b1.Add(cb => cb.Binding("ShippingDate").Width("150").Header("納期").WordWrap(true).DataType(DataType.Date));
                            }))
                    </div>

                    <div class="ln_solid"></div>
                    <div class="form-group">
                        <div class="col-md-12" style="text-align: right">
                            <input type="submit" id="dummySubmit" value="Dummy" class="btn btn-primary" name="submitBtn" style="display:none;" onclick="return false;" />
                            <a href="/InquiryList/InquiryList" class="btn btn-primary" id="btnback">戻る</a>
                            <a href="/EstimateReplyInput/SplitDelivery?EstimateReplyNo=0001&Quantity=0&Unit=aaa&Unitprice=0&Price=0" class="btn btn-primary">分納</a>
                            <a href="#" class="btn btn-primary" id="btnInsert">登録</a>
                            <label>
                                <input type="checkbox" name="Check1" value="Confirm" /> 確認
                            </label>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@* 処理終了後のメッセージ表示 *@
<div id="dialog" style="width: 600px; height: 200px;">
    <div class="wj-dialog-header">
        @Html.Raw("メッセージ")
    </div>
    <div class="wj-dialog-body">
        <p>
            @Html.Raw("登録が完了しました")
        </p>
    </div>
    <div class="wj-dialog-footer">
        <button class="btn btn-default wj-hide-ok">OK</button>
    </div>
</div>

@Html.C1().Popup("#dialog")

@Html.Partial("../Common/MasterSearch")
@Html.Partial("../Common/SupplierSearchAdd")

@section scripts{
    <script>

        // ラベルツールチップ設定
        var tt = new wijmo.Tooltip();
        tt.setTooltip('#lbl_EstimateReplyNo', '見積回答番号<br><b>F2:検索 F5:クリア F9:終了</b>');
        tt.setTooltip('#lbl_EstimateRequestNo', '見積依頼番号<br><b>F2:検索 F5:クリア</b>');
        tt.setTooltip('#lbl_EstimateReplyDate', '見積回答日');

        tt.setTooltip('#lbl_InquiryNo', '引合番号');
        tt.setTooltip('#lbl_GroupingMark', '分類記号');
        tt.setTooltip('#lbl_ProductionNumber', '製番');

        tt.setTooltip('#lbl_Subject', '件名');

        tt.setTooltip('#lbl_VarietyCode', '品種<br><b>F2:検索</b>');
        tt.setTooltip('#lbl_ProductName', '品名');

        tt.setTooltip('#lbl_DesignEmployeeCode', '設計担当者コード');

        tt.setTooltip('#lbl_RequestDate', '依頼日');
        tt.setTooltip('#lbl_RequestedShippingDate', '納入希望日');
        tt.setTooltip('#lbl_QuotationBy', '見積回答希望日');


        tt.setTooltip('#lbl_CampusId', 'CAMPUS-ID<br><b>F2:検索</b>');

        tt.setTooltip('#lbl_SuppliersName', 'ご担当者様名<br><b>F2:検索</b>');
        tt.setTooltip('#lbl_DepartmentName', '部署名');

        tt.setTooltip('#lbl_PhoneNumber', '連絡先');
        tt.setTooltip('#lbl_Email', 'E-Mail');


        tt.setTooltip('#lbl_Notes', '備考');
        tt.setTooltip('#lbl_FileName', '資料添付<br><b>F10:参照</b>');


        //FlexGrid　ヘッダ設定
        c1.documentReady(function () {
            var theGrid = wijmo.Control.getControl('#flexgrid');
            theGrid.allowMerging = wijmo.grid.AllowMerging.ColumnHeaders;

            // add extra header row to the grid
            var panel = theGrid.columnHeaders;
            panel.rows[0].allowMerging = true;

            // populate the extra header row
            for (col = 8; col <= 9; col++) {
                panel.setCellData(0, col, '表面処理');
            }
        });

        // 検索（F2）
        var dlgMasterSearch = wijmo.Control.getControl('#dlgMasterSearch');
        c1.documentReady(function () {
            //CAMPUS-ID
            document.getElementById('btnSearchJuchu').addEventListener('click', function () {
                loadMasterData();

                dlgMasterSearch.show(true, function (sender) {
                    if (sender.dialogResult == 'wj-hide-ok') {
                        document.getElementById('CampusId').setAttribute('value', masterSelected.code);
                        document.getElementById('CompanyName').setAttribute('value', masterSelected.name);
                    }
                });
            });
            document.getElementById('CampusId').addEventListener('keydown', CampusIdKeyDownEvent);
            function CampusIdKeyDownEvent(e) {
                if (e.keyCode == 113) {
                    let target = document.getElementById('btnSearchJuchu');
                    let clickEvent = new Event('click', { "bubbles": true, "cancelable": true });
                    target.dispatchEvent(clickEvent);
                }
            }
        });

        //担当者イベント
        var theDesignEmployeeCode = wijmo.Control.getControl('#cmbDesignEmployeeData');
        var templateDesignEmployee = '<table><tr>' +
            '<td>{EmployeeCode}</td>' +
            '<td title="EmployeeName">　{EmployeeName}</td>' +
            '</tr></table>';
        theDesignEmployeeCode.formatItem.addHandler(function (s, e) {
            var html = wijmo.format(templateDesignEmployee, e.data);
            e.item.innerHTML = html;
        });
        theDesignEmployeeCode.selectedIndexChanged.addHandler(function (s, e) {
            document.getElementById('selectedDesignEmployee').value = s.selectedItem.EmployeeName;
        });

        
        //ご担当者様名
        var dlgSupplierSearchAdd = wijmo.Control.getControl('#dlgSupplierSearchAdd');
        c1.documentReady(function () {
            document.getElementById('btnSearchSupplier').addEventListener('click', function () {
                //loadbtnSupplierData();

                dlgSupplierSearchAdd.show(true, function (sender) {
                    if (sender.dialogResult == 'wj-hide-ok') {
                        document.getElementById('SuppliersName').setAttribute('value', SupplierSelected.supplierName);
                        document.getElementById('DepartmentName').setAttribute('value', SupplierSelected.departmentName);
                    }
                });
            });
            document.getElementById('SuppliersName').addEventListener('keydown', SuppliersNameKeyDownEvent);
            function SuppliersNameKeyDownEvent(e) {
                if (e.keyCode == 113) {
                    let target = document.getElementById('btnSearchSupplier');
                    let clickEvent = new Event('click', { "bubbles": true, "cancelable": true });
                    target.dispatchEvent(clickEvent);
                }
            }
        });

        //ファイル選択
        // ファイル添付（ドロップ対応）
        Dropzone.autoDiscover = false;
        var myDropzone = new Dropzone("div#myDrop", {
            addRemoveLinks: true,
            dictCancelUpload: "キャンセル",
            dictCancelUploadConfirmation: "本当にアップロードしたファイルをキャンセルしますか？",
            dictRemoveFile: "削除",
            url: "/Inquiry/FileUpload",
            removedfile: function (file) {
                var name = file.name;
                $.ajax({
                    type: 'POST',
                    url: "/Inquiry/FileDelete",
                    data: { name: name },
                    success: function (data) {
                        console.log(data);
                    }
                });
                file.previewElement.remove();
            }
        });


        //行番号設定
        var grid = wijmo.Control.getControl('#flexgrid');
        grid.cellEditEnding.addHandler(function (s, e) {
            var col = s.columns[e.col];
            var item = s.rows[e.row].dataItem;
            if (item.RowNumber == null) {
                s.rows[e.row].dataItem.RowNumber = e.row + 1;
            }
        });

        // 登録ボタンイベント
        var dialog = wijmo.Control.getControl('#dialog');
        document.getElementById('btnInsert').addEventListener('click', function (e) {
            // show the dialog (modal window)
            dialog.show(true, function (sender) { });
        });

    </script>
}