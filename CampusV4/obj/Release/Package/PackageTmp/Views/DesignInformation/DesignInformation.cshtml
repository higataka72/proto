@model CampusV4.Models.DesignInformationViewModel

<div>
    <div class="page-title">
        <div class="title_left">
            <h3>設計情報入力</h3>
        </div>
    </div>
    <div class="clearfix"></div>
    <div class="row">
        <div class="col-md-12">
            <div class="x_panel">
                @using (Html.BeginForm("DesignInformation", "DesignInformation", FormMethod.Post, new { @class = "form-horizontal", role = "form", defaultbutton = "dummySubmit" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="form-group">
                        <label class="col-md-1 control-label text-nowrap lavel-functionkey" id="lbl_InquiryNo">引合番号</label>
                        <div class="col-md-2">
                            @Html.TextBoxFor(model => model.InquiryNo2, new { @class = "form-control",@placeholder = "(必須)", @id = "txtInquiryNo2" })
                        </div>
                        <label class="col-md-1 control-label text-nowrap" id="lbl_GroupingMark">分類記号</label>
                        <div class="col-md-1">
                            @(Html.C1().ComboBoxFor(model => model.GroupingMark).Id("cmbGroupingMark")
                                .Bind(Model.GroupingMarkList)
                                .DisplayMemberPath("GroupingMarkName")
                                .SelectedValuePath("GroupingMarkCode")
                                .CssStyle( "width" , "auto" ).SelectedValue(Model.GroupingMark)
                                .IsRequired(false)
                                .Placeholder("(必須)"))
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-md-1 control-label text-nowrap" id="lbl_Subject">件名</label>
                        <div class="col-md-4">
                            @Html.TextBoxFor(model => model.Subject2, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-md-1 control-label text-nowrap" id="lbl_EmployeeData">設計担当者　主</label>
                        <div class="col-md-2">
                            @(Html.C1()
                                .ComboBoxFor(model => model.Manager1Code).Id("cmbEmployeeData")
                                .Bind(Model.EmployeeDataList)
                                .HeaderPath("EmployeeCode")
                                .DisplayMemberPath("EmployeeCode")
                                .SelectedValuePath("EmployeeCode")
                                .CssStyle( "width" , "auto" )
                                .SelectedValue(Model.Manager1Code)
                                .IsRequired(false)
                                .Placeholder("(必須)")
                                )


                        </div>
                        <div class="col-md-3">
                            @Html.TextBoxFor(model => model.Manager1Name, new { @id = "selectedEmployee", @class = "form-control", @disabled = "true" })

                        </div>
                        <label class="col-md-1 control-label text-nowrap" id="lbl_DrawingScheduleDate">出図予定日</label>
                        <div class="col-md-2">
                            @Html.C1().InputDateFor(m => m.DrawingScheduleDate).Placeholder("(必須)")
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-md-1 control-label text-nowrap" id="lbl_EmployeeData2">　　　　　従</label>
                        <div class="col-md-2">
                            @(Html.C1()
                                .ComboBoxFor(model => model.Manager2Code).Id("cmbEmployeeData2")
                                .Bind(Model.EmployeeDataList)
                                .HeaderPath("EmployeeCode")
                                .DisplayMemberPath("EmployeeCode")
                                .SelectedValuePath("EmployeeCode")
                                .CssStyle( "width" , "auto" )
                                .SelectedValue(Model.Manager2Code)
                                .IsRequired(false)
                                .Placeholder("(必須)")
                                )


                        </div>
                        <div class="col-md-3">
                            @Html.TextBoxFor(model => model.Manager2Name, new { @id = "selectedEmployee2", @class = "form-control", @disabled = "true" })

                        </div>
                        <label class="col-md-1 control-label text-nowrap" id="lbl_DrawingDate">出図日</label>
                        <div class="col-md-2">
                            @Html.C1().InputDateFor(m => m.DrawingDate).Placeholder("(必須)")
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-md-1 control-label text-nowrap" id="lbl_EmployeeData3">検図担当者</label>
                        <div class="col-md-2">
                            @(Html.C1()
                                .ComboBoxFor(model => model.Manager3Code).Id("cmbEmployeeData3")
                                .Bind(Model.EmployeeDataList)
                                .HeaderPath("EmployeeCode")
                                .DisplayMemberPath("EmployeeCode")
                                .SelectedValuePath("EmployeeCode")
                                .CssStyle( "width" , "auto" )
                                .SelectedValue(Model.Manager3Code)
                                .IsRequired(false)
                                .Placeholder("(必須)")
                                )


                        </div>
                        <div class="col-md-3">
                            @Html.TextBoxFor(model => model.Manager3Name, new { @id = "selectedEmployee3", @class = "form-control", @disabled = "true" })
                        </div>
                        <label class="col-md-1 control-label text-nowrap" id="lbl_LastUpdateDate">検図日</label>
                        <div class="col-md-2">
                            @Html.C1().InputDateFor(m => m.InspectionDate).Placeholder("(必須)")
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-md-1 control-label text-nowrap" id="lbl_EmployeeData4">原価資料担当者</label>
                        <div class="col-md-2">
                            @(Html.C1()
                                .ComboBoxFor(model => model.Manager4Code).Id("cmbEmployeeData4")
                                .Bind(Model.EmployeeDataList)
                                .HeaderPath("EmployeeCode")
                                .DisplayMemberPath("EmployeeCode")
                                .SelectedValuePath("EmployeeCode")
                                .CssStyle( "width" , "auto" )
                                .SelectedValue(Model.Manager4Code)
                                .IsRequired(false)
                                .Placeholder("(必須)")
                                )
                        </div>
                        <div class="col-md-3">
                            @Html.TextBoxFor(model => model.Manager4Name, new { @id = "selectedEmployee4", @class = "form-control", @disabled = "true" })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-md-1 control-label text-nowrap" id="lbl_CreateScheduleDate">作成予定日</label>
                        <div class="col-md-2">
                            @Html.C1().InputDateFor(m => m.CreateScheduleDate).Placeholder("(必須)")
                        </div>
                        <label class="col-md-1 control-label text-nowrap" id="lbl_CreateDate">作成日</label>
                        <div class="col-md-2">
                            @Html.C1().InputDateFor(m => m.CreateDate).Placeholder("(必須)")
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-md-1 control-label text-nowrap lavel-functionkey" id="lbl_FileName">原価資料</label>
                        <div class="col-md-6">
                            <div class="dropzone dz-clickable" id="myDrop">
                                <div class="dz-default dz-message" data-dz-message="">
                                    <span>ファイルをドラッグ＆ドロップしてしてください。<br>またはここをクリック(タップ)して選択してください。</span>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="ln_solid"></div>
                    <div class="form-group">
                        <div class="col-md-9" style="text-align: right">
                            <a href="#" class="btn btn-primary">設計図書</a>
                            <a href="#" class="btn btn-primary" id="btnInsert">登録</a>
                        </div>
                        <div class="col-md-1">
                            <input type="submit" value="検索" name="ShowSearchBtn" class="btn btn-primary" id="ShowSearchBtn" style="display:none;" />
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@* 処理終了後のメッセージ表示 *@
<div id="dialog" style="width: 600px; height: 200px;">
    <div class="wj-dialog-header">
        @Html.Raw("メッセージ")
    </div>
    <div class="wj-dialog-body">
        <p>
            @Html.Raw("登録が完了しました")
        </p>
    </div>
    <div class="wj-dialog-footer">
        <button class="btn btn-default wj-hide-ok">OK</button>
    </div>
</div>

@Html.C1().Popup("#dialog")


@section scripts{
    <script>

        // ラベルツールチップ設定
        var tt = new wijmo.Tooltip();
        tt.setTooltip('#lbl_InquiryNo', '引合番号<br><b>F2:検索 F5:クリア F9:終了</b>');
        tt.setTooltip('#lbl_GroupingMark', '分類記号');
        tt.setTooltip('#lbl_Subject', '件名');
        tt.setTooltip('#lbl_EmployeeData', '設計担当者　主');
        tt.setTooltip('#lbl_DrawingScheduleDate', '出図予定日');
        tt.setTooltip('#lbl_EmployeeData2', '設計担当者　従');
        tt.setTooltip('#lbl_DrawingScheduleDate', '出図予定日');
        tt.setTooltip('#lbl_DrawingDate', '出図日');
        tt.setTooltip('#lbl_EmployeeData3', '検図担当者');
        tt.setTooltip('#lbl_LastUpdateDate', '検図日');
        tt.setTooltip('#lbl_EmployeeData4', '原価資料担当者');
        tt.setTooltip('#lbl_CreateScheduleDate', '作成予定日');
        tt.setTooltip('#lbl_CreateDate', '作成日');
        tt.setTooltip('#lbl_FileName', '原価資料<br><b>F10:参照</b>');

        //ファイル選択
        // ファイル添付（ドロップ対応）
        Dropzone.autoDiscover = false;
        var myDropzone = new Dropzone("div#myDrop", {
            addRemoveLinks: true,
            dictCancelUpload: "キャンセル",
            dictCancelUploadConfirmation: "本当にアップロードしたファイルをキャンセルしますか？",
            dictRemoveFile: "削除",
            url: "/Inquiry/FileUpload",
            removedfile: function (file) {
                var name = file.name;
                $.ajax({
                    type: 'POST',
                    url: "/Inquiry/FileDelete",
                    data: { name: name },
                    success: function (data) {
                        console.log(data);
                    }
                });
                file.previewElement.remove();
            }
        });

        //設計担当者(主)イベント
        var theEmployeeCode = wijmo.Control.getControl('#cmbEmployeeData');
        var template = '<table><tr>' +
            '<td>{EmployeeCode}</td>' +
            '<td title="EmployeeName">　{EmployeeName}</td>' +
            '</tr></table>';
        theEmployeeCode.formatItem.addHandler(function (s, e) {
            var html = wijmo.format(template, e.data);
            e.item.innerHTML = html;
        });
        theEmployeeCode.selectedIndexChanged.addHandler(function (s, e) {
            setSelectedEmployee(s);
        });

        function setSelectedEmployee(s) {
            setText('selectedEmployee', s.selectedItem.EmployeeName);
        }

        //設計担当者(従)イベント
        var theEmployeeCode2 = wijmo.Control.getControl('#cmbEmployeeData2');
        var template2 = '<table><tr>' +
            '<td>{EmployeeCode}</td>' +
            '<td title="EmployeeName">　{EmployeeName}</td>' +
            '</tr></table>';
        theEmployeeCode2.formatItem.addHandler(function (s, e) {
            var html = wijmo.format(template2, e.data);
            e.item.innerHTML = html;
        });
        theEmployeeCode2.selectedIndexChanged.addHandler(function (s, e) {
            setSelectedEmployee2(s);
        });
        function setSelectedEmployee2(s) {
            setText('selectedEmployee2', s.selectedItem.EmployeeName);
        }

        //出図担当者イベント
        var theEmployeeCode3 = wijmo.Control.getControl('#cmbEmployeeData3');
        var template3 = '<table><tr>' +
            '<td>{EmployeeCode}</td>' +
            '<td title="EmployeeName">　{EmployeeName}</td>' +
            '</tr></table>';
        theEmployeeCode3.formatItem.addHandler(function (s, e) {
            var html = wijmo.format(template3, e.data);
            e.item.innerHTML = html;
        });
        theEmployeeCode3.selectedIndexChanged.addHandler(function (s, e) {
            setSelectedEmployee3(s);
        });
        function setSelectedEmployee3(s) {
            setText('selectedEmployee3', s.selectedItem.EmployeeName);
        }

        //原価資料担当者イベント
        var theEmployeeCode4 = wijmo.Control.getControl('#cmbEmployeeData4');
        var template4 = '<table><tr>' +
            '<td>{EmployeeCode}</td>' +
            '<td title="EmployeeName">　{EmployeeName}</td>' +
            '</tr></table>';
        theEmployeeCode4.formatItem.addHandler(function (s, e) {
            var html = wijmo.format(template4, e.data);
            e.item.innerHTML = html;
        });
        theEmployeeCode4.selectedIndexChanged.addHandler(function (s, e) {
            setSelectedEmployee4(s);
        });
        function setSelectedEmployee4(s) {
            setText('selectedEmployee4', s.selectedItem.EmployeeName);
        }

        function setText(id, value) {
            document.getElementById(id).value = value;
        }

        // 登録ボタンイベント
        var dialog = wijmo.Control.getControl('#dialog');
        document.getElementById('btnInsert').addEventListener('click', function (e) {
            // show the dialog (modal window)
            dialog.show(true, function (sender) { });
        });

        //引合番号イベント(F2)
        var ObInquiryNo = document.getElementById('txtInquiryNo2');
        //F2押下
        ObInquiryNo.addEventListener('keydown', PurchasingNumberF2_event);
        function PurchasingNumberF2_event(e) {
            if (e.keyCode === 113) {
                var ShowSubmitBtnObj = document.getElementById('ShowSearchBtn');
                ShowSubmitBtnObj.click();
            }
            return false;
        };

    </script>
}

