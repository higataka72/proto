@model CampusV4.Models.EstimateReplyInputViewModel
<div id="SplitDelivery">
    <div style="transform-origin: left top;">
        <div class="page-title">
            <div class="title_left">
                <ol class="breadcrumb">
                    <li><a href="/EstimateReplyInput/EstimateReplyInput?InquiryNumber=0001&CampusId=A001">見積回答入力（原価） <i class="fa fa-arrow-circle-left"></i></a></li>
                    <li class="active">分納</li>
                </ol>
            </div>
        </div>
        <div class="clearfix"></div>
        <div class="row">
            <div class="col-md-12">
                <div class="x_panel">
                    @using (Html.BeginForm("SplitDelivery", "EstimateReplyInput", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                    {
                        @Html.AntiForgeryToken()
                        <div class="form-group">　</div>

                        <div class="form-group">
                            @(Html.C1().FlexGrid()
                            .AutoGenerateColumns(true).IsReadOnly(false).Height("450px").Width("620px").Id("flexgrid").AllowAddNew(true)
                            .Bind(Model.SplitDeliveryList)
                            .Columns(b1 =>
                            {
                                b1.Add(cb => cb.Binding("RowNumber").Width("50").Header("回").WordWrap(true).DataType(DataType.Number).IsReadOnly(true));
                                b1.Add(cb => cb.Binding("Quantity").Width("100").Header("数量").WordWrap(true).DataType(DataType.Number));
                                b1.Add(cb => cb.Binding("Unitprice").Width("120").Header("単価").WordWrap(true).DataType(DataType.Number));
                                b1.Add(cb => cb.Binding("Price").Width("120").Header("金額").WordWrap(true).DataType(DataType.Number));
                                b1.Add(cb => cb.Binding("ShippingDate").Width("150").Header("納期").WordWrap(true).DataType(DataType.Date));

                            }))
                        </div>

                        <div class="ln_solid"></div>
                        <div class="form-group">
                            <div style="width:620px;text-align:right">
                                <a href="#" class="btn btn-primary" id="btnInsert">登録</a>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@* 処理終了後のメッセージ表示 *@
<div id="dialog" style="width: 600px; height: 200px;">
    <div class="wj-dialog-header">
        @Html.Raw("メッセージ")
    </div>
    <div class="wj-dialog-body">
        <p>
            @Html.Raw("登録が完了しました")
        </p>
    </div>
    <div class="wj-dialog-footer">
        <button class="btn btn-default wj-hide-ok">OK</button>
    </div>
</div>
@Html.C1().Popup("#dialog")

@section scripts{
    <script>
        // 完了メッセージ
        var dialog = wijmo.Control.getControl('#dialog');
        document.getElementById('btnInsert').addEventListener('click', function (e) {
            // show the dialog (modal window)
            dialog.show(true, function (sender) { });
        });

        //行番号設定
        var grid = wijmo.Control.getControl('#flexgrid');
        grid.cellEditEnding.addHandler(function (s, e) {
            var col = s.columns[e.col];
            var item = s.rows[e.row].dataItem;
            if (item.RowNumber == null) {
                s.rows[e.row].dataItem.RowNumber = e.row + 1;
            }
        });

    </script>
}