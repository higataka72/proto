@model CampusV4.Models.AccountantAlignmentDataOutputDataViewModel
<div>
    <div class="page-title">
        <ol class="breadcrumb">
            <li class="active">会計連携データ出力</li>
        </ol>
    </div>
    <div class="clearfix"></div>
    <div class="row">
        <div class="col-md-12">
            <div class="x_panel">
                @using (Html.BeginForm("Execution", "AccountantAlignmentDataOutput", FormMethod.Post, new { @class = "form-horizontal", role = "form", defaultbutton = "dummySubmit" }))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-group">
                        <label class="col-md-1 control-label text-nowrap" id="lbl_ProcessKbn">処理区分</label>
                        <label class="col-md-1 control-label text-nowrap " style="text-align:left;">
                            @Html.RadioButtonFor(model => model.ProcessKbn, 1 ,new { @id = "rdoProcessKbnOutput" }) 出力　
                        </label>
                        <label class="col-md-1 control-label text-nowrap " style="text-align:left;">
                            @Html.RadioButtonFor(model => model.ProcessKbn, 2, new { @id = "rdoProcessKbnDel" }) 削除　
                        </label>

                    </div>

                    <div class="form-group">
                        <label class="col-md-1 control-label text-nowrap" id="lbl_SlipKbnOrder" for="Text1">対象伝票</label>
                        <div class="col-md-1">
                            <label class="control-label text-nowrap" id="lbl_SlipKbnPurchase">
                                @Html.CheckBoxFor(model => model.SlipKbnPurchase) 仕入
                            </label>
                        </div>
                        <div class="col-md-1">
                            <label class="control-label text-nowrap" id="lbl_SlipKbnUsage">
                                @Html.CheckBoxFor(model => model.SlipKbnUsage) 利用料
                            </label>
                        </div>
                        <div class="col-md-1">
                            <label class="control-label text-nowrap" id="lbl_SlipKbnEarnings">
                                @Html.CheckBoxFor(model => model.SlipKbnEarnings) 売上
                            </label>
                        </div>

                    </div>

                    <div class="form-group">
                        <label class="col-md-1 control-label text-nowrap" id="lbl_OutputDate" for="OutputDate">出力日付</label>
                        <div class="col-md-2">
                            @Html.C1().InputDate().Id("OutputDate").Value(Model.OutputDate).Placeholder("(必須)")
                        </div>
                    </div>


                    <div class="form-group">
                        <label class="col-md-1 control-label text-nowrap" id="lbl_cmbEmployeeCode" for="cmbEmployeeCode">担当者</label>
                        <div class="col-md-2">
                            @(Html.C1().ComboBoxFor(model => model.EmployeeCode)
                                .Id("cmbEmployeeCode")
                                .Bind(Model.EmployeeDataList)
                                .DisplayMemberPath("EmployeeCode")
                                .SelectedValuePath("EmployeeCode")
                                .HeaderPath("EmployeeCode")
                                .CssStyle( "width" , "auto" )
                                .SelectedValue(Model.EmployeeCode)
                                .IsRequired(false))
                        </div>
                        <div class="col-md-3">
                            @Html.TextBoxFor(model => model.EmployeeName, new { @id = "selectedEmployeeName", @class = "form-control", @disabled = "true", @placeholder = "(必須)" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="col-md-1 control-label text-nowrap" id="lbl_SlipDate" for="SlipDateFrom">伝票日付</label>
                        <div class="col-md-2">
                            @Html.C1().InputDate().Id("SlipDateFrom").Value(Model.SlipDateFrom).Placeholder("(必須)")
                        </div>
                        <label class="col-md-1 control-label text-nowrap" id="lbl_SlipDateRange" for="Text7" style="text-align:center">～</label>
                        <div class="col-md-2">
                            @Html.C1().InputDate().Id("SlipDateTo").Value(Model.SlipDateTo).Placeholder("(必須)")
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="col-md-1 control-label text-nowrap" id="lbl_SlipNo" for="SlipNoFrom">伝票№</label>
                        <div class="col-md-2">
                            @Html.TextBoxFor(model => model.SlipNoFrom, new { @class = "form-control", @id = "SlipNoFrom", @placeholder = "(必須)" })
                        </div>
                        <label class="col-md-1 control-label text-nowrap" id="lbl_SlipNoRange" style="text-align:center">～</label>
                        <div class="col-md-2">
                            @Html.TextBoxFor(model => model.SlipNoTo, new { @class = "form-control", @id = "SlipNoTo", @placeholder = "(必須)" })
                        </div>
                    </div>

                    <div class="ln_solid"></div>

                    <div class="form-group">
                        <div class="col-md-9" style="text-align: right">
                            <div class="col-md-1">
                                <input type="submit" id="dummySubmit" value="Dummy" class="btn btn-primary" name="submitBtn" style="display:none;" onclick="return false;" />
                            </div>
                            <a href="#" id="btnExec" class="btn btn-primary">実行</a>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>


@* 処理終了後のメッセージ表示 *@
<div id="dialog" style="width: 600px; height: 200px;">
    <div class="wj-dialog-header">
        @Html.Raw("メッセージ")
    </div>
    <div class="wj-dialog-body">
        <p>
            @Html.Raw("登録が完了しました")
        </p>
    </div>
    <div class="wj-dialog-footer">
        <button class="btn btn-default wj-hide-ok">OK</button>
    </div>
</div>

@Html.C1().Popup("#dialog")
@Html.Partial("AccountantAlignmentDataOutputDelete")

@section scripts{
    <script>
        c1.documentReady(function () {
            // ラベルツールチップ設定
            var tt = new wijmo.Tooltip();
            tt.setTooltip('#lbl_ProcessKbn', '処理区分');
            tt.setTooltip('#lbl_SlipKbnOrder', '対象伝票');
            tt.setTooltip('#lbl_SlipKbnPurchase', '仕入');
            tt.setTooltip('#lbl_SlipKbnUsage', '利用料');
            tt.setTooltip('#lbl_SlipKbnEarnings', '売上');
            tt.setTooltip('#lbl_OutputDate', '出力日付');
            tt.setTooltip('#lbl_cmbEmployeeCode', '担当者');
            tt.setTooltip('#lbl_SlipDate', '伝票日付');
            tt.setTooltip('#lbl_SlipNo', '伝票№');

            var dlgAccountantAlignmentDataOutputDelete = wijmo.Control.getControl('#dlgAccountantAlignmentDataOutputDelete');

            //担当者イベント
            var theEmployeeCode = wijmo.Control.getControl('#cmbEmployeeCode');
            var templateEmployeeCode = '<table><tr>' +
                '<td>{EmployeeCode}</td>' +
                '<td title="EmployeeName">　{EmployeeName}</td>' +
                '</tr></table>';
            theEmployeeCode.formatItem.addHandler(function (s, e) {
                var html = wijmo.format(templateEmployeeCode, e.data);
                e.item.innerHTML = html;
            });
            theEmployeeCode.selectedIndexChanged.addHandler(function (s, e) {
                document.getElementById('selectedEmployeeName').value = s.selectedItem.EmployeeName;
            });

            // show forms
            document.getElementById('rdoProcessKbnDel').addEventListener('change', function () {
                loadAccountantAlignmentDataOutputDelete();
                dlgAccountantAlignmentDataOutputDelete.show(true, function (sender) {
                    switch (sender.dialogResult) {
                        case 'submit':
                            alert('form submitted');
                            break;
                        case 'wj-hide-create':
                            break;
                    }
                });
            });

            // 完了メッセージ
            var dialog = wijmo.Control.getControl('#dialog');
            document.getElementById('btnExec').addEventListener('click', function (e) {
                // show the dialog (modal window)
                dialog.show(true, function (sender) { });
            });

        });
        
        
    </script>
}