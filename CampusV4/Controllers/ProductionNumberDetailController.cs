using System;
using System.Collections.Generic;
using System.Linq;
using C1.Web.Mvc;
using C1.Web.Mvc.Serialization;
using System.Web;
using System.Data;
using System.Web.Mvc;
using System.Data.Entity;
using CampusV4.Models;
using System.Web.Script.Serialization;

// This code was generated by C1 Scaffolder.

namespace CampusV4.Controllers.ProductionNumberDetail
{
    public partial class ProductionNumberDetailController : Controller
    {
       
        public ActionResult ProductionNumberDetail()
        {
            ProductionNumberDetailModel model = new ProductionNumberDetailModel();
            GetComboDataList(ref model);
            GetProductionSpecificationList(ref model);
            return View(model);
        }

        [HttpPost]
        public ActionResult ProductionNumberDetail(ProductionNumberDetailModel model)
        {

            GetComboDataList(ref model);
            GetProductionNumberDeta(ref model);
            GetProductionSpecificationList(ref model);
            return View(model);
        }

        //製番明細データ取得
        [HttpPost]
        public JsonResult GetProductionNumberDetail(string SummaryProductionNumber)
        {
            JavaScriptSerializer sz = new JavaScriptSerializer();
            var dataList = new List<ProductionNumberDetailListData>();

            dataList.Add(new ProductionNumberDetailListData("000012345A01", 1, 10, 10, DateTime.Parse("2023/01/01").ToString("yyyy/MM/dd"), DateTime.Parse("2023 /01/10").ToString("yyyy/MM/dd"), "0000100001" ,DateTime.Parse("2023/02/01").ToString("yyyy/MM/dd"),DateTime.Parse("2023/02/10").ToString("yyyy/MM/dd")));
            dataList.Add(new ProductionNumberDetailListData("000012345A02", 2, 20, 40, DateTime.Parse("2023/01/02").ToString("yyyy/MM/dd"), DateTime.Parse("2023 /01/11").ToString("yyyy/MM/dd"), "0000100002", DateTime.Parse("2023/02/02").ToString("yyyy/MM/dd"), DateTime.Parse("2023/02/11").ToString("yyyy/MM/dd")));
            dataList.Add(new ProductionNumberDetailListData("000012345A03", 3, 30, 90, DateTime.Parse("2023/01/03").ToString("yyyy/MM/dd"), DateTime.Parse("2023 /01/12").ToString("yyyy/MM/dd"), "0000100003", DateTime.Parse("2023/02/03").ToString("yyyy/MM/dd"), DateTime.Parse("2023/02/12").ToString("yyyy/MM/dd")));
            string resultJson = "";

            resultJson = sz.Serialize(dataList);

            return Json(resultJson);
        }

        //発注明細データ取得
        [HttpPost]
        public JsonResult GetOrderDetail(string SummaryProductionNumber)
        {
            JavaScriptSerializer sz = new JavaScriptSerializer();
            var dataList = new List<OrderDetailListData>();

            dataList.Add(new OrderDetailListData("000012345A01", "0000100001", "工場A", "部品A", 10, 10, DateTime.Parse("2023/01/01").ToString("yyyy/MM/dd"), DateTime.Parse("2023 /01/10").ToString("yyyy/MM/dd"), true));
            dataList.Add(new OrderDetailListData("000012345A02", "0000100002", "工場B", "部品B", 20, 40, DateTime.Parse("2023/01/02").ToString("yyyy/MM/dd"), DateTime.Parse("2023 /01/11").ToString("yyyy/MM/dd"), false));
            dataList.Add(new OrderDetailListData("000012345A03", "0000100003", "工場C", "部品C", 30, 90, DateTime.Parse("2023/01/03").ToString("yyyy/MM/dd"), DateTime.Parse("2023 /01/12").ToString("yyyy/MM/dd"), true));

            string resultJson = "";

            resultJson = sz.Serialize(dataList);

            return Json(resultJson);
        }

        //連絡確認データ取得
        [HttpPost]
        public JsonResult GetContactConfirm(string SummaryProductionNumber)
        {
            JavaScriptSerializer sz = new JavaScriptSerializer();
            var dataList = new List<ContactConfirmListData>();

            dataList.Add(new ContactConfirmListData(DateTime.Parse("2023/01/01").ToString("yyyy/MM/dd"), "入力内容1", "田中　一郎"));
            dataList.Add(new ContactConfirmListData(DateTime.Parse("2023/01/02").ToString("yyyy/MM/dd"), "入力内容2", "田中　次郎"));
            dataList.Add(new ContactConfirmListData(DateTime.Parse("2023/01/03").ToString("yyyy/MM/dd"), "入力内容3", "田中　三郎"));
            string resultJson = "";

            resultJson = sz.Serialize(dataList);

            return Json(resultJson);
        }

        //分納明細データ取得
        [HttpPost]
        public JsonResult GetSplitdeliveryDetailData()
        {
            JavaScriptSerializer sz = new JavaScriptSerializer();
            var dataList = new List<SplitDeliveryListData_Pn>();

            dataList.Add(new SplitDeliveryListData_Pn(1, 1, 10, 10, DateTime.Parse("2023/01/01").ToString("yyyy/MM/dd"), true));
            dataList.Add(new SplitDeliveryListData_Pn(2, 2, 20, 40, DateTime.Parse("2023/01/02").ToString("yyyy/MM/dd"), false));
            dataList.Add(new SplitDeliveryListData_Pn(3, 3, 30, 90, DateTime.Parse("2023/01/03").ToString("yyyy/MM/dd"), true));

            string resultJson = "";

            resultJson = sz.Serialize(dataList);

            return Json(resultJson);
        }

        //リストボックス値取得
        private void GetComboDataList(ref ProductionNumberDetailModel model)
        {
            // 部品記号を取得
            var GroupingMarkDataList = new List<MasterData>();
            GroupingMarkDataList.Add(new MasterData("　", ""));
            GroupingMarkDataList.Add(new MasterData("A", "A"));
            GroupingMarkDataList.Add(new MasterData("B", "B"));
            GroupingMarkDataList.Add(new MasterData("C", "C"));
            GroupingMarkDataList.Add(new MasterData("D", "D"));
            GroupingMarkDataList.Add(new MasterData("E", "E"));
            model.GroupingMarkList = GroupingMarkDataList;

            // 受注角度を取得
            var StatusDataList = new List<MasterData>();
            StatusDataList.Add(new MasterData("　", ""));
            StatusDataList.Add(new MasterData("A", "受注角度A"));
            StatusDataList.Add(new MasterData("B", "受注角度B"));
            StatusDataList.Add(new MasterData("C", "受注角度C"));
            StatusDataList.Add(new MasterData("D", "受注角度D"));
            StatusDataList.Add(new MasterData("E", "受注角度E"));
            model.OrderProbabilityList = StatusDataList;


        }

        private void GetProductionNumberDeta(ref ProductionNumberDetailModel model)
        {
            //件名
            model.Subject = "サンプル製番詳細";
            //CAMPUS-ID
            model.CampusId = "A001";
            //会社名
            model.CompanyName = "株式会社 A社";
            //品種コード
            model.VarietyCode = "A";
            //品名
            model.ProductName = "サンプル品名";
            //見積提出日
            model.EstimatedSubmitDate = DateTime.Parse("2023/01/01");
            //営業担当者コード
            model.SalesEmployeeCode = "USR00001";
            //営業担当者名
            model.SalesEmployeeName = "佐藤　一郎";
            //受注確度
            model.OrderProbability = "A";
            //受注日
            model.OrderDate = DateTime.Parse("2023/02/01"); ;
            //失注日
            model.LostOrderDate = DateTime.Parse("2023/02/10"); ;
            //キャンセル日
            model.CancelDate = DateTime.Parse("2023/02/05"); ;
            //納期
            model.ShippingDate = DateTime.Parse("2023/03/01"); ;
            //調達担当者コード
            model.ProcurementPersonCode = "USR00002";
            //調達担当者名
            model.ProcurementPersonName = "佐藤　次郎";
            //数量
            model.Quantity = 1000;
            //単位
            model.Unit = "ロット";
            //レート
            model.Rate = 1500;
            //受注額（内貨）
            model.LocalOrdeReceived = 3000;
            //受注額（外貨）
            model.OutsideOrdeReceived = 4000;
            //設計担当者（主）コード
            model.MainDesignEmployeeCode = "USR00003";
            //設計担当者（主）名
            model.MainDesignEmployeeName = "佐藤　三郎";
            //提案日
            model.ProposedDate = DateTime.Parse("2023/01/10"); ;
            //設計担当者（従）コード
            model.SubDesignEmployeeCode = "USR00004";
            //設計担当者（従）名
            model.SubDesignEmployeeName = "佐藤　四朗";
            //出図日
            model.DrawingDate = DateTime.Parse("2023/01/15"); ;
            //検査組立担当者コード
            model.TestAssemblyEmployeeCode = "USR00005";
            //検査組立担当者名
            model.TestAssemblyEmployeeName = "佐藤　五郎";
            //正式原価確認担当者コード
            model.CostConfirmationEmployeeCode = "USR00006";
            //正式原価確認担当者名
            model.CostConfirmationEmployeeName = "佐藤　六郎";
            //検査成績書
            model.InspectionEeport = "1";
            //発注件数
            model.OrderCount = 10;
            //発注金額
            model.OrderPrice = 1000;
            //発注加工比率
            model.OrderProcessingRatio = 50;
            //発注発注残金額
            model.OrderBalance = 10000;
            //仕入件数
            model.PurchaseCount = 20;
            //仕入金額
            model.PurchasePrice = 2000;
            //仕入加工比率
            model.PurchaseProcessingRatio = 40;
            //総仕入額
            model.TotalPurchasePrice = 40000;
            //予想加工比率
            model.ForecastProcessingRatio = 55;
        }

        private void GetProductionSpecificationList(ref ProductionNumberDetailModel model)
        {
            var dataList = new List<ProductionSpecificationListData>();
            var MasterDataList = new List<MasterData>();
            MasterDataList.Add(new MasterData("　", ""));
            MasterDataList.Add(new MasterData("A", "品種A"));
            MasterDataList.Add(new MasterData("B", "品種B"));
            MasterDataList.Add(new MasterData("C", "品種C"));
            MasterDataList.Add(new MasterData("D", "品種D"));
            MasterDataList.Add(new MasterData("E", "品種E"));

            dataList.Add(new ProductionSpecificationListData("品種", "A","3",1, MasterDataList));
            dataList.Add(new ProductionSpecificationListData("PKG数連", "100","2",10,null));
            dataList.Add(new ProductionSpecificationListData("PKG数列", "200", "2", 10, null));
            dataList.Add(new ProductionSpecificationListData("CAV/Frame", "CAV/Frameの値", "1", 10, null));
            dataList.Add(new ProductionSpecificationListData("PKGサイズ幅", "400", "2", 10, null));
            dataList.Add(new ProductionSpecificationListData("PKGサイズ長", "500", "2", 10, null));
            dataList.Add(new ProductionSpecificationListData("PKGサイズ厚", "600", "2", 10, null));

            model.ProductionSpecificationList = dataList;
        }


    }
}