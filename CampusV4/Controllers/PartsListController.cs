using System;
using System.Collections.Generic;
using System.Web.Mvc;
using CampusV4.Models;
using Microsoft.Ajax.Utilities;

// This code was generated by C1 Scaffolder.

namespace CampusV4.Controllers.PartsList
{
    public partial class PartsListController : Controller
    {
        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult Index(PartsListViewModel model)
        {
            {
                return View(model);
            }

        }


        public ActionResult PartsListDataList()
        {
            var model = new PartsListViewModel();

            model.Quantity = 0;
            model.RegistDate = DateTime.Now;
            model.ShippingDate = DateTime.Now;
            model.LastUpdateDate = DateTime.Now;
            GetCompDataList(ref model,true);

            return View(model);
        }

        [HttpPost]
        public ActionResult PartsListDataList(PartsListViewModel model)
        {

            if (model.InquiryNo.IsNullOrWhiteSpace())
            {
                ModelState.Clear();
                model = new PartsListViewModel();
                model.Quantity = 0;
                model.RegistDate = DateTime.Now;
                model.ShippingDate = DateTime.Now;
                model.LastUpdateDate = DateTime.Now;
                GetCompDataList(ref model, true);
            }
            else
            {
                ModelState.Clear();
                model.InquiryNo = model.InquiryNo.PadLeft(9, '0');
                model.ProductionNumber = model.InquiryNo.PadLeft(9,'0') + model.GroupingMark + "-01";
                model.RegistDate = DateTime.Parse("2023/01/02");
                model.Subject = "サンプル部品リスト";
                model.Quantity = 100;
                model.Unit = "ロット";
                model.ShippingDate = DateTime.Parse("2023/01/30");
                model.VarietyCode = "ZX-A001";
                model.ProductName = "金型A図枠組み";
                model.EmployeeCode = "USR00001";
                model.EmployeeName = "佐藤　一郎";
                model.Notice = "1.購入品ボルトの強度区分は12.9以上とし、適応外品は10.9以上の黒ボルトを選択のこと。\n" +
                               "2.Main Cavity Blockは、上下AS状態で、枝番-1を左側、-2を右側にASすること。";
                model.Attached1 = "設計書1.xlsx";
                model.Attached2 = "設計書1.pdf";
                GetCompDataList(ref model, false);

            }

            return View(model);
        }
        //リストボックス値取得
        private void GetCompDataList(ref PartsListViewModel model, Boolean flgInitList)
        {
            // 共通項目
            // 品種情報を取得
            var HinshudataList = new List<HinshuData>();
            HinshudataList.Add(new HinshuData("　", ""));
            HinshudataList.Add(new HinshuData("ZX-A001", "金型A図枠組み"));
            HinshudataList.Add(new HinshuData("ZX-B001", "金型B図枠組み"));
            HinshudataList.Add(new HinshuData("ZX-C001", "金型C図枠組み"));
            HinshudataList.Add(new HinshuData("ZX-D001", "金型D図枠組み"));
            HinshudataList.Add(new HinshuData("ZX-E001", "金型E図枠組み"));
            HinshudataList.Add(new HinshuData("ZX-F001", "金型F図枠組み"));
            HinshudataList.Add(new HinshuData("ZX-G001", "金型G図枠組み"));
            model.VarietyCodeList = HinshudataList;

            // 営業担当者情報を取得
            var TantoshaData = new List<EmployeeData>();
            TantoshaData.Add(new EmployeeData("　", ""));
            TantoshaData.Add(new EmployeeData("USR00001", "佐藤　一郎"));
            TantoshaData.Add(new EmployeeData("USR00002", "佐藤　次郎"));
            TantoshaData.Add(new EmployeeData("USR00003", "佐藤　三郎"));
            TantoshaData.Add(new EmployeeData("USR00004", "佐藤　四朗"));
            TantoshaData.Add(new EmployeeData("USR00005", "佐藤　五郎"));
            model.EmployeeDataList = TantoshaData;

            // 部品記号を取得
            var GroupingMarkDataList = new List<GroupingMarkData>();
            GroupingMarkDataList.Add(new GroupingMarkData("　", ""));
            GroupingMarkDataList.Add(new GroupingMarkData("A", "A"));
            GroupingMarkDataList.Add(new GroupingMarkData("B", "B"));
            GroupingMarkDataList.Add(new GroupingMarkData("C", "C"));
            GroupingMarkDataList.Add(new GroupingMarkData("D", "D"));
            GroupingMarkDataList.Add(new GroupingMarkData("E", "E"));
            model.GroupingMarkList = GroupingMarkDataList;

            // 部品選択用リスト
            var partsFileSettingListData = new List<Parts_FileSettingListData>();
            partsFileSettingListData.Add(new Parts_FileSettingListData("1", "//srv/SERVER01/設計部/DESIGN/MOLD DIE/C0001/000012345A01/02.Output Doc/1.Dwg/1.Chase/10.最新"));
            partsFileSettingListData.Add(new Parts_FileSettingListData("2", "//srv/SERVER01/設計部/DESIGN/MOLD DIE/C0001/000012345A01/02.Output Doc/1.Dwg/2.Unit/10.最新"));
            partsFileSettingListData.Add(new Parts_FileSettingListData("3", "//srv/SERVER01/設計部/DESIGN/MOLD DIE/C0001/000012345A01/02.Output Doc/1.Dwg/3.Tab JIG/10.最新"));
            model.GridFileSettingDataList = partsFileSettingListData;

            var dataList = new List<PartsListData>();
            if (flgInitList == true)
            {
                //空行追加


            }else {
                PartsListData partsListData = new PartsListData();
                //図面チェック
                partsListData.RowCheck = true;
                //No
                partsListData.RowNumber = 1;
                //行No
                partsListData.RowNo = 1;
                //List Rev
                partsListData.ListRev = "1";
                //部品分類
                partsListData.PartsCode = "A";
                //部品名
                partsListData.PartsName = "Upper Main Cavity";
                //図面番号/型式
                partsListData.DrawingNumber = "001602-A-B001";
                //DWG/Rev
                partsListData.DwgRev = "D";
                //入数
                partsListData.IriSu = 2;
                //個数
                partsListData.Kosu = 2;
                //注記
                partsListData.Notice = "穴座標表有";
                //メーカー
                partsListData.Maker = "";
                //原価見積番号
                partsListData.CostEstimateNumber =　"0001-A-001";

                dataList.Add(partsListData);

                PartsListData partsListData1 = new PartsListData();
                //図面チェック
                partsListData1.RowCheck = false;
                //No
                partsListData1.RowNumber = 2;
                //行No
                partsListData1.RowNo = 2;
                //List Rev
                partsListData1.ListRev = "1";
                //部品分類
                partsListData1.PartsCode = "B";
                //部品名
                partsListData1.PartsName = "Upper Cull Block";
                //図面番号/型式
                partsListData1.DrawingNumber = "001602-A-B002";
                //DWG/Rev
                partsListData1.DwgRev = "A";
                //入数
                partsListData1.IriSu = 1;
                //個数
                partsListData1.Kosu = 2;
                //注記
                partsListData1.Notice = "穴座標表有";
                //メーカー
                partsListData1.Maker = "MASK";
                //原価見積番号
                partsListData1.CostEstimateNumber = "0001-A-001";

                dataList.Add(partsListData1);
                
            }
            model.GridDataList = dataList;

            
        }
    }
}