<?xml version="1.0" encoding="utf-8"?>
<doc>
    <assembly>
        <name>C1.Web.Mvc</name>
    </assembly>
    <members>
        <member name="T:C1.Util.Licensing.BaseLicenseDetector">
            <summary>ライセンスを検出するためのクラスを定義します。</summary>
        </member>
        <member name="M:C1.Util.Licensing.BaseLicenseDetector.#ctor">
            <summary>コンストラクタ。</summary>
        </member>
        <member name="T:C1.Util.Licensing.ProviderInfo">
            <summary>
                <para>ライセンスされるクラスのコンストラクタから呼び出される静的 
            <see cref="M:C1.Util.Licensing.ProviderInfo.Validate(System.Type,System.Object)" /> メソッドを提供します。</para>
                <para>バージョン情報ダイアログボックスに製品とライセンスの情報を表示するために呼び出される 
            静的 <see cref="M:C1.Util.Licensing.ProviderInfo.ShowAboutBox(System.Object)" /> メソッドも提供します。</para>
            </summary>
        </member>
        <member name="M:C1.Util.Licensing.ProviderInfo.Validate(System.Type,System.Object)">
            <summary>ライセンス検証を実行します。ライセンスされるオブジェクトのコンストラクタから 
            このメソッドを呼び出して、設計時にはライセンスキーを保存し、実行時にはライセンスキーを検証し、
            有効なライセンスが見つからない場合は登録の勧誘ダイアログを表示します。</summary>
            <param name="type">ライセンスされるオブジェクトの型（GetType() ではなく typeof() を使用します）。</param>
            <param name="instance">ライセンスされるオブジェクトへの参照（現在使用されていません）。</param>
            <returns>ライセンスに関する情報を含む <see cref="T:C1.Util.Licensing.LicenseInfo" /> オブジェクト。</returns>
            <remarks>
                <para>返される <see cref="T:C1.Util.Licensing.LicenseInfo" /> の <b>ShouldNag</b> プロパティをチェックして、
            ライセンスされるクラスから登録の勧誘メッセージを表示する必要があるかどうかを確認してください。有効なライセンスが見つからなかったが、
            登録の勧誘ダイアログを表示できなかった場合、
            この値は true に設定されます。このような場合、ライセンスされるクラスは、
            他の方法（ウォーターマークを使用するなど）で登録の勧誘メッセージを表示する必要があります。</para>
            </remarks>
        </member>
        <member name="M:C1.Util.Licensing.ProviderInfo.Validate(System.Type,System.Object,System.Boolean)">
            <summary>ライセンス検証を実行します。ライセンスされるオブジェクトのコンストラクタから 
            このメソッドを呼び出して、設計時にはライセンスキーを保存し、実行時にはライセンスキーを検証し、
            有効なライセンスが見つからない場合は登録の勧誘ダイアログを表示します。</summary>
            <param name="type">ライセンスされるオブジェクトの型（GetType() ではなく typeof() を使用します）。</param>
            <param name="instance">ライセンスされるオブジェクトへの参照（現在使用されていません）。</param>
            <param name="showNagDialog">有効なライセンスが見つからない場合に登録の勧誘ダイアログを表示するかどうか。</param>
            <returns>ライセンスに関する情報を含む <see cref="T:C1.Util.Licensing.LicenseInfo" /> オブジェクト。</returns>
            <remarks>
                <para>このオーバーロードメソッドは WPF で使用するために作成されました。ライセンスの永続性を正しくサポートするには、
            これをコントロールのコンストラクタで呼び出す必要があります。ただし、コントロールが完全に読み込まれるまで、登録の勧誘ダイアログを
            表示しないでください。そうしないと、VS デザイナが空白のまま残る可能性があります。</para>
                <para>そのための方法を以下に示します。</para>
                <code>
            LicenseInfo _licInfo;
            public LicensedControl()
            {
              // ライセンスをチェックしますが、まだ登録の勧誘メッセージは表示しません
              _licInfo = ProviderInfo.Validate(typeof(LicensedControl), this, false);
              
              // コントロールが完全に読み込まれてから、ライセンスの検証を実行します
              Loaded += LicensedControl_Loaded;
            }
            void LicensedControl_Loaded(object sender, RoutedEventArgs e)
            {
              // 読み込みが終了したら、登録の勧誘メッセージを表示します
              if (_licInfo.ShouldNag)
              {
                ProviderInfo.ShowAboutBox(this);
              }
            }
            </code>
            </remarks>
        </member>
        <member name="M:C1.Util.Licensing.ProviderInfo.Nag(System.Type,C1.Util.Licensing.LicenseInfo,System.Boolean)">
            <summary>AboutBox にライセンス情報を表示して、登録の勧誘を行います。
            アセンブリごとに１日に一度だけメッセージを表示します。</summary>
            <param name="type">ライセンスされるオブジェクトの型（GetType() ではなく typeof() を使用します）。</param>
            <param name="li">ライセンスに関する情報を含む <see cref="T:C1.Util.Licensing.LicenseInfo" /> オブジェクト。</param>
            <param name="designTime">設計時と実行時のどちらか。</param>
        </member>
        <member name="M:C1.Util.Licensing.ProviderInfo.Validate(System.Type,System.Object,System.Reflection.Assembly,System.String)">
            <summary>実行時キーを受け取るコンストラクタによって使用される Validate のバージョン。</summary>
            <param name="type">ライセンスされるオブジェクトの型（GetType() ではなく typeof() を使用します）。</param>
            <param name="instance">ライセンスされるオブジェクトへの参照。</param>
            <param name="callingAsm">ライセンスされるオーナーコントロールを保持するアセンブリ。</param>
            <param name="runtimeKey">任意の有効な C1 実行時キー。</param>
            <returns>実行時キーに関する情報を含む <see cref="T:C1.Util.Licensing.LicenseInfo" />。</returns>
            <remarks>
                <para>これを使用して、ライセンスされる C1 クラスは、
            子オブジェクトのライセンス検証をバイパスする別の C1 オブジェクトを作成できます。</para>
                <para>さらなる安全のために、オーナーオブジェクトが "C1ProductInfo" 属性を含む
            アセンブリで定義されていることをチェックしています。</para>
            </remarks>
        </member>
        <member name="M:C1.Util.Licensing.ProviderInfo.ValidateDesigntime(System.Type,System.ComponentModel.LicenseContext)">
            <summary>設計時の検証。レジストリでライセンスを検索し、
            それを提供された <see cref="T:System.ComponentModel.LicenseContext" /> に保存します。</summary>
            <param name="type">ライセンスされるオブジェクトの型（GetType() ではなく typeof() を使用します）。</param>
            <param name="context">実行時キーが格納される <see cref="T:System.ComponentModel.LicenseContext" />。</param>
            <returns>ライセンスに関する情報を含む <see cref="T:C1.Util.Licensing.LicenseInfo" />。</returns>
            <remarks>（レジストリにライセンスをインストールすることを常に必要とする）アプリケーションタイプ
            の製品からこのメソッドを呼び出します。この例では、<paramref name="context" /> パラメータを  
            null に設定する必要があります。</remarks>
        </member>
        <member name="M:C1.Util.Licensing.ProviderInfo.ValidateRuntime(System.Type,System.ComponentModel.LicenseContext)">
            <summary>実行時検証。
            現在のアプリケーションのリソースに格納されている実行時キーを検索します。</summary>
            <param name="type">ライセンスされるオブジェクトの型（GetType() ではなく typeof() を使用します）。</param>
            <param name="context">実行時キーが格納される <see cref="T:System.ComponentModel.LicenseContext" />。</param>
            <returns>ライセンスに関する情報を含む <see cref="T:C1.Util.Licensing.LicenseInfo" />。</returns>
        </member>
        <member name="M:C1.Util.Licensing.ProviderInfo.ShowAboutBox(System.Object)">
            <summary>C1 製品のインスタンスのバージョン情報ダイアログボックスを表示します。</summary>
        </member>
        <member name="M:C1.Util.Licensing.ProviderInfo.GetC1Type(System.Object)">
            <summary>そのアセンブリに "C1ProductInfoAttribute" が含まれている型を取得します。</summary>
            <param name="instance">その型をチェックするオブジェクトのインスタンス。</param>
            <returns>そのアセンブリに "C1ProductInfoAttribute" が含まれている型</returns>
        </member>
        <member name="T:C1.Util.Licensing.LicenseInfo">
            <summary>アプリケーションに格納されているライセンスに関する情報を保持します。</summary>
        </member>
        <member name="M:C1.Util.Licensing.LicenseInfo.#ctor(System.Type,C1.Util.Licensing.LicenseStatus,C1.Util.Licensing.ProductLicense)">
            <summary>
                <see cref="T:C1.Util.Licensing.LicenseInfo" /> クラスの新しいインスタンスを初期化します。</summary>
        </member>
        <member name="M:C1.Util.Licensing.LicenseInfo.#ctor(System.Type,C1.Util.Licensing.LicenseStatus)">
            <summary>
                <see cref="T:C1.Util.Licensing.LicenseInfo" /> クラスの新しいインスタンスを初期化します。</summary>
        </member>
        <member name="P:C1.Util.Licensing.LicenseInfo.LicenseStatus">
            <summary>このライセンスの状態（有効、有効期限切れ、ライセンスなし）を取得または設定します。</summary>
        </member>
        <member name="P:C1.Util.Licensing.LicenseInfo.License">
            <summary>このライセンスに関連付けられた <see cref="T:C1.Util.Licensing.ProductLicense" /> を取得または設定します。</summary>
        </member>
        <member name="P:C1.Util.Licensing.LicenseInfo.Type">
            <summary>このライセンスに関連付けられた <see cref="P:C1.Util.Licensing.LicenseInfo.Type" /> を取得または設定します。</summary>
        </member>
        <member name="P:C1.Util.Licensing.LicenseInfo.EvaluationDaysElapsed">
            <summary>経過した評価日数を取得します。
            有効なライセンスの場合は -1 を返します。</summary>
        </member>
        <member name="P:C1.Util.Licensing.LicenseInfo.EvaluationDaysLeft">
            <summary>残りの評価日数を取得します。</summary>
        </member>
        <member name="P:C1.Util.Licensing.LicenseInfo.ShouldNag">
            <summary>呼び出し元がユーザーに登録の勧誘メッセージを表示するかどうかを
            判定する値を取得または設定します。コンポーネント/コントロールがライセンスされておらず、
            さらに対話モードで実行されていない場合は、ダイアログを表示できないため、
            呼び出し元が他の方法（通常は UI または出力にウォーターマークを
            追加する）で登録の勧誘メッセージを表示する必要があります。</summary>
        </member>
        <member name="P:C1.Util.Licensing.LicenseInfo.IsValid">
            <summary>見つかったライセンスが有効であるかどうかを判定する値を取得します。</summary>
        </member>
        <member name="P:C1.Util.Licensing.LicenseInfo.IsExpired">
            <summary>見つかったライセンスの有効期限が切れているかどうかを判定する値を取得します。</summary>
        </member>
        <member name="P:C1.Util.Licensing.LicenseInfo.IsLocalHost">
            <summary>コンポーネントが localhost で実行中なので、勧誘の登録ダイアログを
            ユーザーに表示する必要がないかどうかを判定する値を取得します。</summary>
        </member>
        <member name="T:C1.Util.Licensing.SafeLicenseContext">
            <summary>特別な権限を必要としない GetSavedLicenseKey のバージョンを
            提供します。
            
            このコードは通常、.NET Framework からコピーされてから、
            必要な権限が少し（アセンブリ名、ファイル IO など）で済むように 
            数箇所が変更されて使用されていました。
            
            主な変更点は、カスタムデシリアライザを使用して、いくつかの権限を必要とする 
            元の BinaryFormatter の代わりに Hashtable オブジェクトを
            読み取るようにしたことです。</summary>
        </member>
        <member name="T:C1.Util.Licensing.C1AboutNameAttribute">
            <summary>バージョン情報ダイアログボックスに表示される製品名を指定するために使用する属性。</summary>
        </member>
        <member name="T:C1.Util.Licensing.C1ProductInfoAttribute">
            <summary>アセンブリにライセンス/製品情報をアタッチするために使用する属性。</summary>
        </member>
        <member name="T:C1.Util.Licensing.ProductLicense">
            <summary>製品（C1BarCode、C1Studio Enterprise など）のライセンスを表します。
            
            次のためのメソッドを提供します。
            - 新しいライセンスキーを生成する（管理タスク）
            - ライセンスキーの有効性をチェックする（インストーラと製品で使用）
            - 実行時キーを生成およびチェックする（製品で使用）
            - ライセンスをインストール/アンインストールする（インストーラで使用）
            
            インストール/アンインストールのコードは、引き上げられた権限を必要とし、
            セットアップとユーティリティでのみ使用されます（コントロールでは使用されません）。このコードは、
            ProductLicense.Installer.cs で実装されます。コントロールには
            使用されないため、コントロールには入れないでください。
            
            製品の販売時にユーザーにライセンスキーを送信します。
            ユーザーは名前、会社名、およびキーを指定して、コンピュータにライセンス 
            をインストールします。
            
            <see cref="P:C1.Util.Licensing.ProductLicense.Key" /> は、次の書式の文字列です。
            
                AAQYYCC-XX-NNNNNN-DD-DZZZZZZ
                
            ここで、
            
                AA：製品コード（製品カタログにある製品のいずれかに一致する必要があります。
                        ProductInformation.GetProductCatalog() を参照）。
                Q：ライセンスが発行された四半期（１、２、３）。
                YY：ライセンスが発行された年（2010 の場合は 10）。
                CC：注文コード。新規の販売、アップグレード、
                        更新、特別セールなどを２文字で示します。
                XX：キーの有効性を保証するハッシュコード。
                NNNNNN：一意のシリアル番号。
                DDD：３文字のベンダコード。
                ZZZZZZ：一意性を保証する乱数と追加のハッシュの組み合わせ。</summary>
        </member>
        <member name="T:C1.Web.Mvc.ItemsBoundControl`1">
            <summary>項目連結コントロールの基本クラス。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Control">
            <summary>コントロールの基本クラスを定義します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Component">
            <summary>C1 MVC コンポーネントクラスを表します。</summary>
            <summary>C1 MVC コンポーネントクラスを表します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.IComponentContainer">
            <summary>子コンポーネントを持つインタフェースを定義します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.IComponentContainer.Components">
            <summary>子コンポーネントを取得します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Component.#ctor(System.Web.Mvc.HtmlHelper)">
            <summary>HTMLヘルパーを使用して<see cref="T:C1.Web.Mvc.Component" />のインスタンスを作成します。</summary>
            <param name="helper">HTMLヘルパー。</param>
        </member>
        <member name="M:C1.Web.Mvc.Component.SerializeOptions">
            <summary>コントロールを JSON 文字列にシリアライズします。</summary>
            <returns>コントロールの JSON 文字列表現。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Component.EnsureUniqueId">
            <summary>一意 ID の作成を保証します。</summary>
            <remarks>コンポーネントがコールバックをサポートする場合は、
            このコンポーネントが必ず一意の固定 ID を持つように、このメソッドをコンポーネントのコンストラクタで呼び出す必要があります。</remarks>
        </member>
        <member name="M:C1.Web.Mvc.Component.Render(System.Web.UI.HtmlTextWriter)">
            <summary>ライタにコントロールまたはコールバック結果をレンダリングします。</summary>
            <param name="writer">レンダリングに使用される指定されたライタ。</param>
        </member>
        <member name="M:C1.Web.Mvc.Component.OnPreRender">
            <summary>このメソッドは、レンダリングの前に実行されます。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Component.RenderScripts(System.Web.UI.HtmlTextWriter,System.Boolean)">
            <summary>スクリプトをレンダリングします。</summary>
            <param name="writer">ライタ。</param>
            <param name="renderScriptTag">スクリプトタグをレンダリングするかどうかを示すboolean値。</param>
        </member>
        <member name="M:C1.Web.Mvc.Component.RegisterStartupScript(System.Web.UI.HtmlTextWriter)">
            <summary>起動スクリプトを登録します。</summary>
            <param name="writer">ライタ。</param>
        </member>
        <member name="M:C1.Web.Mvc.Component.WriteTo(System.Web.UI.HtmlTextWriter)">
            <summary>現在のインスタンスの処理結果をライタに書き込みます。</summary>
            <param name="writer">ライタ。</param>
        </member>
        <member name="M:C1.Web.Mvc.Component.ToHtmlString">
            <summary>HTML エンコード文字列を返します。</summary>
            <returns>HTML エンコード文字列。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Component.HandleCallBack(C1.Web.Mvc.CallbackManager)">
            <summary>コールバックを処理します。</summary>
            <returns>コールバックが発生し、コンポーネントによって処理された場合は true。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Component.EnsureChildComponents">
            <summary>子コンポーネントの作成を保証します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Component.CreateChildComponents">
            <summary>子コンポーネントを作成します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Component.Id">
            <summary>コンポーネント ID を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Component.UrlHelper">
            <summary>URLヘルパーを取得します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Component.Helper">
            <summary>HtmlHelper オブジェクトを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Component.UniqueId">
            <summary>コントロールの一意 ID を表す値を取得します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Component.Components">
            <summary>子コンポーネントを取得します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Component.ClientComponent">
            <summary>完全な名前空間を持つクライアントコントロールコンストラクタを表す値を取得します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Component.ClientClass">
            <summary>クライアントコンポーネントタイプ。たとえば、FlexGrid。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Component.ClientModule">
            <summary>クライアントモジュール。たとえば、c1.mvc。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Component.ClientSubModule">
            <summary>サブモジュール。たとえば、チャート、グリッド。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Component.HasScripts">
            <summary>現在のコンポーネントにレンダリングが必要なスクリプトがあるかどうかを示すboolean値を取得します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Component.ChildComponentsCreated">
            <summary>子コンポーネントを作成するかどうかを示すブール値を取得または設定します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.ITemplate">
            <summary>テンプレートのインタフェースを定義します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ITemplate.TemplateBindings">
            <summary>テンプレート連結のコレクションを取得します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ITemplate.IsTemplate">
            <summary>このコントロールをテンプレートモードに移行するかどうかを示すブール値を取得または設定します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Control.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>指定された HtmlHelper オブジェクトとセレクタを使用して、
            <see cref="T:C1.Web.Mvc.Control" /> クラスのインスタンスを初期化します。</summary>
            <param name="helper">指定された HtmlHelper オブジェクト。</param>
            <param name="selector">指定されたセレクタ。</param>
        </member>
        <member name="M:C1.Web.Mvc.Control.ToTemplate">
            <summary>テンプレートモードに移動します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Control.GetRenderSelector">
            <summary>設定に従ってセレクタを取得します。
            セレクタと ID が設定されていない場合は、ID を作成し、それをセレクタとして使用します。</summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.Mvc.Control.Render(System.Web.UI.HtmlTextWriter)">
            <summary>ライタにコントロールまたはコールバック結果をレンダリングします。</summary>
            <param name="writer">HTMLライタ。</param>
        </member>
        <member name="M:C1.Web.Mvc.Control.RenderMarkup(System.Web.UI.HtmlTextWriter)">
            <summary>コントロールマークアップをレンダリングします。</summary>
            <param name="writer">マークアップの書き込みに使用される指定されたライタ。</param>
        </member>
        <member name="M:C1.Web.Mvc.Control.RenderEndTag(System.Web.UI.HtmlTextWriter)">
            <summary>コントロールの終了タグをレンダリングします</summary>
            <param name="writer">マークアップの書き込みに使用される指定されたライタ。</param>
        </member>
        <member name="M:C1.Web.Mvc.Control.RenderContent(System.Web.UI.HtmlTextWriter)">
            <summary>コントロールのコンテンツをレンダリングします。</summary>
            <param name="writer">マークアップの書き込みに使用される指定されたライタ。</param>
        </member>
        <member name="M:C1.Web.Mvc.Control.RenderBeginTag(System.Web.UI.HtmlTextWriter)">
            <summary>コントロールの開始タグをレンダリングします。</summary>
            <param name="writer">マークアップの書き込みに使用される指定されたライタ。</param>
        </member>
        <member name="M:C1.Web.Mvc.Control.RenderAttributes(System.Web.UI.HtmlTextWriter)">
            <summary>コントロールの html 属性をレンダリングします。</summary>
            <param name="writer">マークアップの書き込みに使用される指定されたライタ。</param>
        </member>
        <member name="M:C1.Web.Mvc.Control.RenderScripts(System.Web.UI.HtmlTextWriter,System.Boolean)">
            <summary>スクリプトをレンダリングします。</summary>
            <param name="writer">ライタ。</param>
            <param name="renderScriptTag">スクリプトタグをレンダリングするかどうかを示すboolean値。</param>
        </member>
        <member name="M:C1.Web.Mvc.Control.RegisterStartupScript(System.Web.UI.HtmlTextWriter)">
            <summary>起動スクリプトを登録します。</summary>
            <param name="writer">起動スクリプトの書き込みに使用される指定されたライタ。</param>
        </member>
        <member name="M:C1.Web.Mvc.Control.GetWrapperCtorOptions">
            <summary>ラッパーコンストラクタのオプションを取得します。</summary>
            <returns>オプションのJSONテキスト。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Control.OnPreRender">
            <summary>このメソッドは、レンダリングの前に実行されます。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Control.CssClass">
            <summary>コントロールの css クラスを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Control.Width">
            <summary>コントロールの幅を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Control.Height">
            <summary>コントロールの高さを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Control.HtmlAttributes">
            <summary>HTML 属性を取得します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Control.CssStyles">
            <summary>CSS スタイルを取得します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Control.TemplateBindings">
            <summary>テンプレート連結のコレクションを取得します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Control.Selector">
            <summary>セレクタを指定する値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Control.OnClientGotFocus">
            <summary>コントロールがフォーカスを取得すると発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Control.OnClientLostFocus">
            <summary>コントロールがフォーカスを失うと発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Control.IsDisabled">
            <summary>コントロールが無効かどうかを判定する値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Control.IsTemplate">
            <summary>このコントロールをテンプレートモードに移行するかどうかを示すブール値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Control.Disabled">
            <summary>このコントロールが無効かどうかを示すプロパティを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Control.TagKey">
            <summary>この Web サーバーコントロールに対応する System.Web.UI.HtmlTextWriterTag 値を
            取得します。このプロパティは、主にコントロールの開発者によって使用されます。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Control.UniqueId">
            <summary>コントロールの一意IDを表す値を取得します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.IItemsSourceContainer`1">
            <summary>項目ソースを含むインタフェース。</summary>
        </member>
        <member name="P:C1.Web.Mvc.IItemsSourceContainer`1.ItemsSource">
            <summary>ItemsSource 設定を取得または設定します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.ItemsBoundControl`1.RegisterStartupScript(System.Web.UI.HtmlTextWriter)">
            <summary>起動スクリプトを登録します。</summary>
            <param name="writer">起動スクリプトの書き込みに使用される指定されたライタ。</param>
        </member>
        <member name="M:C1.Web.Mvc.ItemsBoundControl`1.CreateChildComponents">
            <summary>子コンポーネントの作成を保証します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.ItemsBoundControl`1.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>１つの ItemsBoundControl インスタンスを作成します。</summary>
            <param name="helper">HTML ヘルパー</param>
            <param name="selector">セレクタ</param>
        </member>
        <member name="M:C1.Web.Mvc.ItemsBoundControl`1.ShouldSerializeItemsSource">
            <summary>ItemsSourceプロパティをシリアライズするかどうかを指定します。</summary>
            <returns>trueの場合、プロパティはシリアライズされます。
            そうでない場合は、シリアライズされません。</returns>
        </member>
        <member name="P:C1.Web.Mvc.ItemsBoundControl`1.ItemsSource">
            <summary>ItemsSource 設定を取得します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ItemsBoundControl`1.ItemsSourceId">
            <summary>この列で使用されるItemsSourceIdを取得または設定し、このコントロールに対してどのCollectionViewServiceを使用するかを指定します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Url">
            <summary>URL を処理する静的クラスを定義します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.ChartAxis`1">
            <summary>チャート軸を表します。</summary>
            <summary>チャート軸を表します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.ChartAxis`1.ShouldSerializePosition">
            <summary>Positionプロパティをシリアライズするかどうかを指定します。</summary>
            <returns>trueの場合、プロパティはシリアライズされます。
            そうでない場合は、シリアライズされません。</returns>
        </member>
        <member name="M:C1.Web.Mvc.ChartAxis`1.ShouldSerializeMajorGrid">
            <summary>MajorGridプロパティをシリアライズするかどうかを指定します。</summary>
            <returns>trueの場合、プロパティはシリアライズされます。
            そうでない場合は、シリアライズされません。</returns>
        </member>
        <member name="M:C1.Web.Mvc.ChartAxis`1.ShouldSerializeMajorTickMarks">
            <summary>MajorTickMarksプロパティをシリアライズするかどうかを指定します。</summary>
            <returns>trueの場合、プロパティはシリアライズされます。
            そうでない場合は、シリアライズされません。</returns>
        </member>
        <member name="M:C1.Web.Mvc.ChartAxis`1.ShouldSerializeAxisLine">
            <summary>AxisLineプロパティをシリアライズするかどうかを指定します。</summary>
            <returns>trueの場合、プロパティはシリアライズされます。
            そうでない場合は、シリアライズされません。</returns>
        </member>
        <member name="M:C1.Web.Mvc.ChartAxis`1.ShouldSerializeItemsSource">
            <summary>ItemsSourceプロパティをシリアライズするかどうかを指定します。</summary>
            <returns>trueの場合、プロパティはシリアライズされます。
            そうでない場合は、シリアライズされません。</returns>
        </member>
        <member name="M:C1.Web.Mvc.ChartAxis`1.#ctor">
            <summary>ChartAxisクラスの新しいインスタンスを初期化します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartAxis`1.Min">
            <summary>軸に表示される最小値を取得または設定します。設定されない場合は、最小値が自動的に計算されます。</summary>
            <remarks>値には、数値またはDateTimeオブジェクト（時間ベースのデータの場合）を使用できます。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.ChartAxis`1.Max">
            <summary>軸に表示される最大値を取得または設定します。設定されない場合は、最大値が自動的に計算されます。</summary>
            <remarks>値には、数値またはDateTimeオブジェクト（時間ベースのデータの場合）を使用できます。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.ChartAxis`1.Reversed">
            <summary>軸を反転（上から下または右から左）するかどうかを示す値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartAxis`1.Position">
            <summary>列挙された軸位置を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartAxis`1.MajorUnit">
            <summary>軸ラベル間の単位数を取得または設定します。軸に日付値が含まれる場合、単位は日数です。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartAxis`1.MinorUnit">
            <summary>軸の小目盛り間の単位数を取得または設定します。軸に日付値が含まれる場合、単位は日数です。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartAxis`1.Name">
            <summary>軸名を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartAxis`1.Title">
            <summary>軸の横に表示されるタイトルテキストを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartAxis`1.Format">
            <summary>軸ラベルに使用される書式文字列を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartAxis`1.MajorGrid">
            <summary>軸にグリッド線を表示するかどうかを示す値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartAxis`1.MajorTickMarks">
            <summary>軸の目盛りマークの場所を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartAxis`1.MinorGrid">
            <summary>軸に副グリッド線を表示するかどうかを示す値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartAxis`1.MinorTickMarks">
            <summary>軸の小目盛りマークの場所を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartAxis`1.AxisLine">
            <summary>軸線が表示されているかどうかを示す値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartAxis`1.Labels">
            <summary>軸ラベルを表示すかどうかを示す値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartAxis`1.LabelAngle">
            <summary>軸ラベルの回転角度を取得または設定します。この角度は、-90 から 90 の有効な値で測定されます。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartAxis`1.Origin">
            <summary>軸が直交軸と交差する位置の値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartAxis`1.OverlappingLabels">
            <summary>重なった軸ラベルの処理方法を示す値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartAxis`1.ItemFormatter">
            <summary>軸ラベルの itemFormatter クライアント側関数名を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartAxis`1.OnClientRangeChanged">
            <summary>軸の範囲が変更されると発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartAxis`1.ItemsSource">
            <summary>軸ラベルの項目ソースを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartAxis`1.Binding">
            <summary>プロパティ "ItemsSource" のカンマ区切りのプロパティ名を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartAxis`1.LogBase">
            <summary>軸の対数の底を取得または設定します。</summary>
            <remarks>底が指定されない場合、軸は標準のスケールを使用します。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.ChartAxis`1.LabelAlign">
            <summary>ラベルの配置を取得または設定します。</summary>
            <remarks>デフォルトでは、ラベルは中央に揃えられます。サポートされている値は、X軸に対してはleftとright、Y軸に対してはtopとbottomです。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.ChartAxis`1.PlotAreaIndex">
            <summary>軸のプロットエリアを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartAxis`1.LabelPadding">
            <summary>ラベルのパディングを取得または設定します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.ChartSeriesBase`1">
            <summary>チャートに表示する一連のデータポイントを表します。</summary>
            <summary>チャートに表示する一連のデータポイントを表します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.ChartSeriesBase`1.ShouldSerializeAxisX">
            <summary>AxisXプロパティをシリアライズするかどうかを指定します。</summary>
            <returns>trueの場合、プロパティはシリアライズされます。
            そうでない場合は、シリアライズされません。</returns>
        </member>
        <member name="M:C1.Web.Mvc.ChartSeriesBase`1.ShouldSerializeAxisY">
            <summary>AxisYプロパティをシリアライズするかどうかを指定します。</summary>
            <returns>trueの場合、プロパティはシリアライズされます。
            そうでない場合は、シリアライズされません。</returns>
        </member>
        <member name="M:C1.Web.Mvc.ChartSeriesBase`1.ShouldSerializeStyle">
            <summary>Styleプロパティをシリアライズするかどうかを指定します。</summary>
            <returns>trueの場合、プロパティはシリアライズされます。
            そうでない場合は、シリアライズされません。</returns>
        </member>
        <member name="M:C1.Web.Mvc.ChartSeriesBase`1.ShouldSerializeSymbolStyle">
            <summary>SymbolStyleプロパティをシリアライズするかどうかを指定します。</summary>
            <returns>trueの場合、プロパティはシリアライズされます。
            そうでない場合は、シリアライズされません。</returns>
        </member>
        <member name="M:C1.Web.Mvc.ChartSeriesBase`1.ShouldSerializeItemsSource">
            <summary>ItemsSourceプロパティをシリアライズするかどうかを指定します。</summary>
            <returns>trueの場合、プロパティはシリアライズされます。
            そうでない場合は、シリアライズされません。</returns>
        </member>
        <member name="M:C1.Web.Mvc.ChartSeriesBase`1.ShouldSerializeAltStyle">
            <summary>AltStyleプロパティをシリアライズするかどうかを指定します。</summary>
            <returns>trueの場合、プロパティはシリアライズされます。
            そうでない場合は、シリアライズされません。</returns>
        </member>
        <member name="M:C1.Web.Mvc.ChartSeriesBase`1.#ctor(C1.Web.Mvc.FlexChartCore{`0})">
            <summary>ChartSeriesBaseクラスの新しいインスタンスを初期化します。</summary>
            <param name="owner">FlexChartCoreから派生したオブジェクト。</param>
        </member>
        <member name="P:C1.Web.Mvc.ChartSeriesBase`1.SymbolSize">
            <summary>この系列をレンダリングするために使用されるシンボルのサイズ（ピクセル単位）を取得または設定します。Scatter、LineSymbols、およびSplineSymbolsチャートタイプに適用されます。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartSeriesBase`1.SymbolMarker">
            <summary>系列の各データポイントで使用するマーカーの形状を取得または設定します。Scatter、LineSymbols、およびSplineSymbolsチャートタイプに適用されます。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartSeriesBase`1.BindingX">
            <summary>系列のX値を含むプロパティの名前を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartSeriesBase`1.Binding">
            <summary>系列のY値を含むプロパティの名前を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartSeriesBase`1.Name">
            <summary>系列名を取得または設定します。系列名はチャートの凡例に表示されます。名前のない系列は凡例に表示されません。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartSeriesBase`1.CssClass">
            <summary>系列のCSSクラスを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartSeriesBase`1.Visibility">
            <summary>系列を表示するかどうかと、表示する場合はどこに表示するかを示す列挙値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartSeriesBase`1.AxisX">
            <summary>系列のx軸を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartSeriesBase`1.AxisY">
            <summary>系列のy軸を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartSeriesBase`1.Style">
            <summary>系列のスタイルを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartSeriesBase`1.SymbolStyle">
            <summary>系列のシンボルスタイルを取得または設定します。Scatter、LineSymbols、およびSplineSymbolsチャートタイプに適用されます。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartSeriesBase`1.ItemsSource">
            <summary>ItemsSource設定を取得または設定します。ItemsBoundControlから継承されます。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartSeriesBase`1.OnClientRendering">
            <summary>系列のレンダリング中に発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartSeriesBase`1.AltStyle">
            <summary>系列の代替スタイルを取得または設定します。このプロパティから得られる値は、横棒グラフ、縦棒グラフ、および散布図での負の値、およびCandlestick、LineBreak、EquiVolumeなど株価チャートタイプの上昇値に使用されます。</summary>
            <remarks>値を指定しない場合は、デフォルトのスタイルが使用されます。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.ChartSeriesBase`1.OnClientRendered">
            <summary>系列がレンダリングされたときに発生します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.BaseCollectionViewService`1">
            <summary>すべてのコレクションビューサービスの基本クラスを定義します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Service">
            <summary>サービスの基本クラスを定義します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Service.#ctor(System.Web.Mvc.HtmlHelper)">
            <summary>
                <see cref="T:C1.Web.Mvc.Service" />のインスタンスを作成します。</summary>
            <param name="helper">HTMLヘルパー。</param>
        </member>
        <member name="M:C1.Web.Mvc.Service.Render(System.Web.UI.HtmlTextWriter)">
            <summary>ライタにコントロールまたはコールバック結果をレンダリングします。</summary>
            <param name="writer">レンダリングに使用される指定されたライタ。</param>
        </member>
        <member name="M:C1.Web.Mvc.Service.RegisterStartupScript(System.Web.UI.HtmlTextWriter)">
            <summary>起動スクリプトを登録します。</summary>
            <param name="writer">ライタ。</param>
        </member>
        <member name="M:C1.Web.Mvc.Service.RenderClientService(System.Web.UI.HtmlTextWriter)">
            <summary>指定されたライタにクライアントサービスをレンダリングします。</summary>
            <param name="writer">指定されたライタ</param>
        </member>
        <member name="M:C1.Web.Mvc.Service.RegisterClientService(System.Web.UI.HtmlTextWriter)">
            <summary>指定されたライタを使用してクライアントサービスを登録します。</summary>
            <param name="writer">指定されたライタ</param>
            <remarks>keyName で指定されたキーが存在する場合は登録されません。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.Service.TemplateBindings">
            <summary>テンプレート連結のコレクションを取得します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Service.IsTemplate">
            <summary>この<see cref="T:C1.Web.Mvc.CollectionViewService`1" />をテンプレートモードに移行するかどうかを示すブール値を取得または設定します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.IItemsSource`1">
            <summary>項目ソースのインタフェース。</summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:C1.Web.Mvc.IItemsSource`1.ReadActionUrl">
            <summary>読み取りアクションの URL を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.IItemsSource`1.CreateActionUrl">
            <summary>作成アクションの URL を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.IItemsSource`1.UpdateActionUrl">
            <summary>更新アクションの URL を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.IItemsSource`1.DeleteActionUrl">
            <summary>削除アクションの URL を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.IItemsSource`1.BatchEditActionUrl">
            <summary>一括編集アクションの URL を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.IItemsSource`1.PageIndex">
            <summary>ページインデックスを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.IItemsSource`1.PageSize">
            <summary>ページサイズを取得または設定します。ページサイズが０の場合、ページングは無効になります。</summary>
        </member>
        <member name="P:C1.Web.Mvc.IItemsSource`1.SourceCollection">
            <summary>ソースコレクションを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.IItemsSource`1.SortDescriptions">
            <summary>ソートの説明コレクションを取得します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.IItemsSource`1.GroupDescriptions">
            <summary>グループの説明コレクションを取得します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.IItemsSource`1.Filter">
            <summary>項目をビューに入れるかどうかを判断するために使用されるメソッドを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.IItemsSource`1.DisableServerRead">
            <summary>サーバー側の読み取りを無効にするかどうかを取得または設定します。</summary>
            <remarks>True に設定すると、すべてのデータがクライアントに転送されます。
            そうでない場合は、データの一部だけが転送されます。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.IItemsSource`1.BatchEdit">
            <summary>サーバーに変更がまとめて送信されるか、個々の要求として送信されるかを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.IItemsSource`1.InitialItemsCount">
            <summary>初期にロードされる項目の数を決定する数値を取得または設定します。</summary>
            <remarks>これは、DisableServerRead プロパティが false で、ページングモードでない場合に機能します。
            これは、０以上の数値または null だけを受け入れます。
            null に設定した場合は、すべての項目がクライアントにロードされます。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.IItemsSource`1.GetError">
            <summary>項目の特定のプロパティに検証エラーが含まれるかどうかを判定するコールバックを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.IItemsSource`1.NewItemCreator">
            <summary>コレクションに新しい項目を作成する関数を取得または設定します。</summary>
            <remarks>作成関数が提供されない場合は、適切なタイプの初期化されていない項目の作成を試みます。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.IItemsSource`1.OnClientCollectionChanged">
            <summary>コレクションが変化したときに発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.IItemsSource`1.OnClientCurrentChanged">
            <summary>現在の項目が変更された後に発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.IItemsSource`1.OnClientCurrentChanging">
            <summary>現在の項目が変更される前に発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.IItemsSource`1.OnClientPageChanged">
            <summary>ページインデックスが変更された後に発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.IItemsSource`1.OnClientPageChanging">
            <summary>ページインデックスが変更される前に発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.IItemsSource`1.OnClientSourceCollectionChanging">
            <summary>クライアントのsourceCollectionプロパティが変更される前に発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.IItemsSource`1.OnClientSourceCollectionChanged">
            <summary>クライアントのsourceCollectionプロパティが変更された後に発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.IItemsSource`1.OnClientCollectingQueryData">
            <summary>Ajax クエリーデータを収集するための JavaScript 関数の名前を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.IItemsSource`1.OnClientQueryData">
            <summary>Ajaxクエリーデータを収集するためのJavaScript関数の名前を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.IItemsSource`1.OnClientQueryComplete">
            <summary>クエリー要求が完了すると発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.IItemsSource`1.OnClientError">
            <summary>サーバー側からエラーがあった場合に発生します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.BaseCollectionViewService`1.RenderClientService(System.Web.UI.HtmlTextWriter)">
            <summary>指定されたライタにクライアントサービスをレンダリングします。</summary>
            <param name="writer">指定されたライタ</param>
        </member>
        <member name="M:C1.Web.Mvc.BaseCollectionViewService`1.GetSerializationOptions">
            <summary>シリアライズされたオプションのテキストを取得します。</summary>
            <returns>テキスト。</returns>
        </member>
        <member name="M:C1.Web.Mvc.BaseCollectionViewService`1.RenderScripts(System.Web.UI.HtmlTextWriter,System.Boolean)">
            <summary>スクリプトをレンダリングします。</summary>
            <param name="writer">ライタ。</param>
            <param name="renderScriptTag">スクリプトタグをレンダリングするかどうかを示す boolean 値。</param>
        </member>
        <member name="M:C1.Web.Mvc.BaseCollectionViewService`1.RegisterStartupScript(System.Web.UI.HtmlTextWriter)">
            <summary>起動スクリプトを登録します。</summary>
            <param name="writer">ライタ。</param>
        </member>
        <member name="M:C1.Web.Mvc.BaseCollectionViewService`1.GetDataSource``1(C1.Web.Mvc.IItemsSourceContainer{`0},System.Web.Mvc.HtmlHelper)">
            <summary>
                <see cref="T:C1.Web.Mvc.BaseCollectionViewService`1" /> のインスタンスを作成します。</summary>
            <typeparam name="TDataSource">作成される ItemsSource の種類。</typeparam>
            <param name="parent">親オブジェクト。</param>
            <param name="helper">ヘルパーオブジェクト。</param>
            <returns>作成されたインスタンス。</returns>
        </member>
        <member name="M:C1.Web.Mvc.BaseCollectionViewService`1.#ctor(System.Web.Mvc.HtmlHelper)">
            <summary>1 つの <see cref="T:C1.Web.Mvc.BaseCollectionViewService`1" /> インスタンスを作成します。</summary>
            <param name="helper">HTML ヘルパー</param>
        </member>
        <member name="P:C1.Web.Mvc.BaseCollectionViewService`1.UniqueId">
            <summary>コントロールの一意 ID を表す値を取得します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.BaseCollectionViewService`1.PageIndex">
            <summary>ページインデックスを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.BaseCollectionViewService`1.PageSize">
            <summary>ページサイズを取得または設定します。0 はページングを無効にします。</summary>
        </member>
        <member name="P:C1.Web.Mvc.BaseCollectionViewService`1.SortDescriptions">
            <summary>ソート記述を取得します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.BaseCollectionViewService`1.GroupDescriptions">
            <summary>グループ記述を取得します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.BaseCollectionViewService`1.GetError">
            <summary>項目の特定のプロパティに検証エラーが含まれるかどうかを判定するコールバックを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.BaseCollectionViewService`1.OnClientCollectionChanged">
            <summary>コレクションが変化したときに発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.BaseCollectionViewService`1.OnClientCurrentChanged">
            <summary>現在の項目が変更された後に発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.BaseCollectionViewService`1.OnClientCurrentChanging">
            <summary>現在の項目が変更される前に発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.BaseCollectionViewService`1.OnClientPageChanged">
            <summary>ページインデックスが変更された後に発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.BaseCollectionViewService`1.OnClientPageChanging">
            <summary>ページインデックスが変更される前に発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.BaseCollectionViewService`1.NewItemCreator">
            <summary>コレクションに新しい項目を作成する関数を取得または設定します。</summary>
            <remarks>作成関数が提供されない場合は、適切なタイプの初期化されていない項目の作成を試みます。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.BaseCollectionViewService`1.ReadActionUrl">
            <summary>読み取りアクションの URL を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.BaseCollectionViewService`1.CreateActionUrl">
            <summary>作成アクションの URL を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.BaseCollectionViewService`1.UpdateActionUrl">
            <summary>更新アクションの URL を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.BaseCollectionViewService`1.DeleteActionUrl">
            <summary>削除アクションの URL を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.BaseCollectionViewService`1.DisableServerRead">
            <summary>サーバー側のソート、ページング、およびフィルタ処理を無効にするかどうかを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.BaseCollectionViewService`1.SourceCollection">
            <summary>ソースコレクションを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.BaseCollectionViewService`1.Filter">
            <summary>項目をビューに入れるかどうかを判断するために使用されるメソッドを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.BaseCollectionViewService`1.BatchEditActionUrl">
            <summary>一括編集アクションの URL を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.BaseCollectionViewService`1.InitialItemsCount">
            <summary>初期にロードされる項目の数を決定する数値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.BaseCollectionViewService`1.BatchEdit">
            <summary>データを一括編集するかどうかを示すブール値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.BaseCollectionViewService`1.OnClientCollectingQueryData">
            <summary>Ajax クエリーデータを収集するための JavaScript 関数の名前を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.BaseCollectionViewService`1.OnClientQueryData">
            <summary>Ajax クエリーデータを収集するための JavaScript 関数の名前を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.BaseCollectionViewService`1.OnClientQueryComplete">
            <summary>クエリー要求が完了すると発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.BaseCollectionViewService`1.OnClientSourceCollectionChanging">
            <summary>クライアントの sourceCollection プロパティが変更される前に発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.BaseCollectionViewService`1.OnClientSourceCollectionChanged">
            <summary>クライアントの sourceCollection プロパティが変更された後に発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.BaseCollectionViewService`1.OnClientError">
            <summary>サーバー側からエラーがあった場合に発生します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.BaseODataCollectionViewService`1">
            <summary>OData サービスの連結に使用されるコレクションビューの基本クラスを定義します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.BaseODataCollectionViewService`1.GetSerializationOptions">
            <summary>コンストラクタパラメータにプロセスを追加するオーバーライドメソッド。</summary>
        </member>
        <member name="M:C1.Web.Mvc.BaseODataCollectionViewService`1.#ctor(System.Web.Mvc.HtmlHelper)">
            <summary>1 つの <see cref="T:C1.Web.Mvc.BaseODataCollectionViewService`1" /> インスタンスを作成します。</summary>
            <param name="helper">HTML ヘルパー</param>
        </member>
        <member name="P:C1.Web.Mvc.BaseODataCollectionViewService`1.UniqueId">
            <summary>この属性を削除するためにオーバーライドします。</summary>
        </member>
        <member name="P:C1.Web.Mvc.BaseODataCollectionViewService`1.PageSize">
            <summary>ページサイズを取得または設定します。0 はページングを無効にします。</summary>
        </member>
        <member name="P:C1.Web.Mvc.BaseODataCollectionViewService`1.TableName">
            <summary>このコレクションが連結されているテーブル（エンティティ）の名前を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.BaseODataCollectionViewService`1.Fields">
            <summary>データソースから取得するフィールドの名前を含む配列を取得または設定します。</summary>
            <remarks>このプロパティが null または空の配列に設定されている場合は、すべてのフィールドが取得されます。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.BaseODataCollectionViewService`1.RequestHeaders">
            <summary>データを送信または要求するときに使用する要求ヘッダーを含むオブジェクトを取得または設定します。このプロパティは、認証が必要なシナリオでよく使用されます。</summary>
        </member>
        <member name="P:C1.Web.Mvc.BaseODataCollectionViewService`1.Keys">
            <summary>キーフィールドの名前を含む配列を取得または設定します。更新操作（追加/削除/完全削除）にはキーフィールドが必要です。</summary>
        </member>
        <member name="P:C1.Web.Mvc.BaseODataCollectionViewService`1.DataTypes">
            <summary>データのロード時にデータ型を適用するためのマップとして使用されるオブジェクトを取得または設定します。</summary>
            <remarks>オブジェクトキーはフィールド名を表し、値はデータに適用する方法を示す <see cref="T:C1.Web.Mvc.Grid.DataType" /> 値です。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.BaseODataCollectionViewService`1.InferDataTypes">
            <summary>標準の日付表現のような文字列を含むフィールドを自動的に日付に変換するかどうかを決定する値を取得または設定します。</summary>
            <remarks>このプロパティはデフォルトで true に設定されています。これは、<see cref="T:C1.Web.Mvc.BaseODataCollectionViewService`1" /> クラスでは JSON が使用されており、この形式では Date オブジェクトがサポートされていないためです。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.BaseODataCollectionViewService`1.FilterDefinition">
            <summary>サーバー上のデータをフィルタ処理するために使用される OData フィルタ仕様を含む文字列を取得または設定します。</summary>
            <remarks>フィルタ定義構文については、<a href="http://www.odata.org/documentation/odata-version-2-0/uri-conventions/">OData ドキュメント</a>で説明されています。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.BaseODataCollectionViewService`1.ODataVersion">
            <summary>サーバーによって使用される OData バージョンを取得または設定します。</summary>
            <remarks>現在、OData サービスには、1.0 から 4.0 までの 4 つのバージョンがあります。バージョン 4.0 は最新のサービスで使用されますが、以前のサービスもまだ数多く使用されています。サービスに実装されている OData のバージョンがわかっている場合は、作成時に <see cref="P:C1.Web.Mvc.BaseODataCollectionViewService`1.ODataVersion" /> プロパティを適切な値（1 ～ 4）に設定します。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.BaseODataCollectionViewService`1.OnClientLoading">
            <summary>
                <see cref="T:C1.Web.Mvc.BaseODataCollectionViewService`1" /> がデータのロードを開始するときに発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.BaseODataCollectionViewService`1.OnClientLoaded">
            <summary>
                <see cref="T:C1.Web.Mvc.BaseODataCollectionViewService`1" /> がデータのロードを終了するときに発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.BaseODataCollectionViewService`1.OnClientError">
            <summary>データの読み込みまたは書き込みエラーがあるときに発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.BaseODataCollectionViewService`1.ServiceUrl">
            <summary>OData サービスの URL を取得または設定します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.ODataCollectionViewService`1">
            <summary></summary>
        </member>
        <member name="M:C1.Web.Mvc.ODataCollectionViewService`1.#ctor(System.Web.Mvc.HtmlHelper)">
            <summary>1 つの <see cref="T:C1.Web.Mvc.ODataCollectionViewService`1" /> インスタンスを作成します。</summary>
            <param name="helper">HTML ヘルパー</param>
        </member>
        <member name="P:C1.Web.Mvc.ODataCollectionViewService`1.PageOnServer">
            <summary>サーバーまたはクライアントのどちらでページングを実行するかを決定する値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ODataCollectionViewService`1.SortOnServer">
            <summary>サーバーまたはクライアントのどちらでソート操作を実行するかを決定する値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ODataCollectionViewService`1.FilterOnServer">
            <summary>サーバーまたはクライアントのどちらでフィルタ処理を実行するかを決定する値を取得または設定します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.ODataVirtualCollectionViewService`1">
            <summary>OData サービスのデータをオンデマンドでロードするためのクラスを定義します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.ODataVirtualCollectionViewService`1.#ctor(System.Web.Mvc.HtmlHelper)">
            <summary>1 つの <see cref="T:C1.Web.Mvc.ODataVirtualCollectionViewService`1" /> インスタンスを作成します。</summary>
            <param name="helper">HTML ヘルパー</param>
        </member>
        <member name="T:C1.Web.Mvc.DataMap">
            <summary>列のDataMapプロパティで使用するデータマップを表します。</summary>
            <remarks>データマップは、グリッドに自動検索機能を提供します。たとえば、顧客のIDの代わりに顧客名、RGB値の代わりに色名を表示できます。</remarks>
        </member>
        <member name="M:C1.Web.Mvc.DataMap.#ctor">
            <summary>
                <see cref="T:C1.Web.Mvc.DataMap" />の新しいインスタンスを初期化します</summary>
        </member>
        <member name="M:C1.Web.Mvc.DataMap.#ctor(System.Web.Mvc.HtmlHelper)">
            <summary>
                <see cref="T:C1.Web.Mvc.DataMap" />の新しいインスタンスを初期化します</summary>
            <param name="helper">HtmlHelperインスタンス。</param>
        </member>
        <member name="M:C1.Web.Mvc.DataMap.ShouldSerializeItemsSource">
            <summary>ItemsSourceプロパティをシリアライズするかどうかを指定します。</summary>
            <returns>trueの場合、プロパティはシリアライズされます。
            そうでない場合は、シリアライズされません。</returns>
        </member>
        <member name="P:C1.Web.Mvc.DataMap.DisplayMemberPath">
            <summary>項目のビジュアル表現として使用するプロパティ名を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.DataMap.SelectedValuePath">
            <summary>項目のキー（データ値）として使用するプロパティ名を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.DataMap.OnClientMapChanged">
            <summary>マップデータが変更されたときに発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.DataMap.IsEditable">
            <summary>ユーザーが値を入力できるかどうかを示す値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.DataMap.SortByDisplayValues">
            <summary>データのソート時にマップされた（表示）値と未加工の値どちらを使用するかを決定する値を取得または設定します。デフォルト値はfalseです。</summary>
            <remarks>デフォルトはfalseです。trueに設定すると、列は、マップされた表示値でソートされます。グリッドがリモートバインドモードの場合は、CollectionViewHelper.Read()メソッドの呼び出しでdataMapItemsSourceGetter引数を渡す必要があります。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.DataMap.ItemsSource">
            <summary>ItemsSource設定を取得します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.BaseCollectionViewServiceBuilder`3">
            <summary>
                <see cref="T:C1.Web.Mvc.BaseCollectionViewService`1" /> を構成するためのビルダを定義します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ServiceBuilder`2">
            <summary>Serviceのビルダ。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ComponentBuilder`2">
            <summary>コンポーネントビルダクラスを定義します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.BaseBuilder`2">
            <summary>オブジェクトを構築するための基本ビルダ。</summary>
            <typeparam name="TObject">オブジェクトタイプ</typeparam>
            <typeparam name="TBuilder">ビルダタイプ</typeparam>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.HideObjectMembers">
            <summary>
                <see cref="T:System.Object" />クラスからメンバを削除するクラスを定義します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.HideObjectMembers.Equals(System.Object)">
            <summary>このメソッドを削除するためにオーバーライドします。</summary>
            <param name="obj">オブジェクト。</param>
            <returns>ブール値。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.HideObjectMembers.GetHashCode">
            <summary>このメソッドを削除するためにオーバーライドします。</summary>
            <returns>整数値。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.HideObjectMembers.ToString">
            <summary>このメソッドを削除するためにオーバーライドします。</summary>
            <returns>テキスト。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.HideObjectMembers.GetType">
            <summary>このメソッドを削除するためにオーバーライドします。</summary>
            <returns>型。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BaseBuilder`2.#ctor(`0)">
            <summary>BaseBuilderクラスの新しいインスタンスを初期化します。</summary>
            <param name="obj">オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ComponentBuilder`2.#ctor(`0)">
            <summary>ComponentBuilder インスタンスを作成します。</summary>
            <param name="component">コンポーネント。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ComponentBuilder`2.ToHtmlString">
            <summary>HTML 文字列を取得します。</summary>
            <returns>HTML 文字列。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ITemplateBuilder`1">
            <summary>テンプレートとして使用できるビルダのインタフェースを定義します。</summary>
            <typeparam name="T">ビルダタイプ。</typeparam>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ITemplateBuilder`1.ToTemplate">
            <summary>現在のビルダをテンプレートモードに移行します。</summary>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ITemplateBuilder`1.TemplateBind(System.String,System.String)">
            <summary>ビルダがテンプレートモードで機能している場合に、指定された名前のプロパティを 
            指定された名前の項目に連結します。</summary>
            <param name="propertyName">指定されたプロパティ名。</param>
            <param name="boundName">DataContext内の指定された項目の名前。</param>
            <returns>現在のビルダ。</returns>
            <remarks>これはテンプレートモードでのみ機能します。</remarks>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ServiceBuilder`2.#ctor(`0)">
            <summary>ServiceBuilderインスタンスを作成します。</summary>
            <param name="service">serviceインスタンス。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ServiceBuilder`2.Id(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.Component.Id" />を構成します。サービスのIDを設定します。</summary>
            <param name="id">ID。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ServiceBuilder`2.ToTemplate">
            <summary>現在のビルダをテンプレートモードに移行します。</summary>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ServiceBuilder`2.TemplateBind(System.String,System.String)">
            <summary>ビルダがテンプレートモードで機能している場合に、名前で指定されたプロパティを、名前で指定された何らかの項目に連結します。</summary>
            <param name="propertyName">指定されたプロパティの名前。</param>
            <param name="boundName">DataContext内の指定された項目の名前。</param>
            <returns>現在のビルダ。</returns>
            <remarks>これはテンプレートモードでのみ機能します。</remarks>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BaseCollectionViewServiceBuilder`3.#ctor(`1)">
            <summary>
                <paramref name="component" /> を構成するために 1 つの <see cref="T:C1.Web.Mvc.Fluent.BaseCollectionViewServiceBuilder`3" /> インスタンスを作成します。</summary>
            <param name="component">構成する <see cref="T:C1.Web.Mvc.BaseCollectionViewService`1" /> オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BaseCollectionViewServiceBuilder`3.MoveToPage(System.Int32)">
            <summary>
                <see cref="P:C1.Web.Mvc.BaseCollectionViewService`1.PageIndex" /> を構成します。
            ページインデックスを設定します。</summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BaseCollectionViewServiceBuilder`3.GroupDescriptions(System.Collections.Generic.IEnumerable{C1.Web.Mvc.GroupDescription})">
            <summary>
                <see cref="P:C1.Web.Mvc.BaseCollectionViewService`1.GroupDescriptions" /> を構成します。
            グループ記述を設定します。</summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BaseCollectionViewServiceBuilder`3.PropertyGroupDescriptions(System.Action{C1.Web.Mvc.Fluent.ListItemFactory{C1.Web.Mvc.PropertyGroupDescription,C1.Web.Mvc.Fluent.PropertyGroupDescriptionBuilder}})">
            <summary>
                <see cref="P:C1.Web.Mvc.BaseCollectionViewService`1.GroupDescriptions" /> を構成します。
            グループ記述とアクションを設定します。</summary>
            <param name="build">グループ記述を作成するアクション。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BaseCollectionViewServiceBuilder`3.GroupBy(System.String[])">
            <summary>
                <see cref="P:C1.Web.Mvc.BaseCollectionViewService`1.GroupDescriptions" /> を構成します。
            グループ記述と名前リストを設定します。</summary>
            <param name="names">グループ化に使用するプロパティ名のリスト。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BaseCollectionViewServiceBuilder`3.OrderBy(System.String[])">
            <summary>
                <see cref="P:C1.Web.Mvc.BaseCollectionViewService`1.SortDescriptions" /> を構成します。
            昇順の名前リストを指定してソート記述を設定します。</summary>
            <param name="names">昇順にソートされた名前リスト。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BaseCollectionViewServiceBuilder`3.OrderByDescending(System.String[])">
            <summary>
                <see cref="P:C1.Web.Mvc.BaseCollectionViewService`1.SortDescriptions" /> を構成します。
            降順の名前リストを指定してソート記述を設定します。</summary>
            <param name="names">降順にソートされた名前リスト。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BaseCollectionViewServiceBuilder`3.SortDescriptions(System.Action{C1.Web.Mvc.Fluent.ListItemFactory{C1.Web.Mvc.SortDescription,C1.Web.Mvc.Fluent.SortDescriptionBuilder}})">
            <summary>
                <see cref="P:C1.Web.Mvc.BaseCollectionViewService`1.SortDescriptions" /> を構成します。
            ソート記述を設定します。</summary>
            <param name="build">ソート記述コレクションを構築するアクション。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BaseCollectionViewServiceBuilder`3.OnClientCollectingQueryData(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.BaseCollectionViewService`1.OnClientQueryData" /> クライアントイベントを構成します。
            古い形式。代わりに、OnClientQueryData を使用してください。</summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BaseCollectionViewServiceBuilder`3.PageSize(System.Int32)">
            <summary>
                <see cref="P:C1.Web.Mvc.BaseCollectionViewService`1.PageSize" /> を構成します。
            ページサイズを設定します。0 を指定すると、ページングが無効になります。</summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BaseCollectionViewServiceBuilder`3.GetError(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.BaseCollectionViewService`1.GetError" /> を構成します。
            項目の特定のプロパティに検証エラーが含まれるかどうかを判定するコールバックを設定します。</summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BaseCollectionViewServiceBuilder`3.OnClientCollectionChanged(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.BaseCollectionViewService`1.OnClientCollectionChanged" /> クライアントイベントを構成します。
            コレクションが変化したときに発生します。</summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BaseCollectionViewServiceBuilder`3.OnClientCurrentChanged(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.BaseCollectionViewService`1.OnClientCurrentChanged" /> クライアントイベントを構成します。
            現在の項目が変更された後に発生します。</summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BaseCollectionViewServiceBuilder`3.OnClientCurrentChanging(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.BaseCollectionViewService`1.OnClientCurrentChanging" /> クライアントイベントを構成します。
            現在の項目が変更される前に発生します。</summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BaseCollectionViewServiceBuilder`3.OnClientPageChanged(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.BaseCollectionViewService`1.OnClientPageChanged" /> クライアントイベントを構成します。
            ページインデックスが変更された後に発生します。</summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BaseCollectionViewServiceBuilder`3.OnClientPageChanging(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.BaseCollectionViewService`1.OnClientPageChanging" /> クライアントイベントを構成します。
            ページインデックスが変更される前に発生します。</summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BaseCollectionViewServiceBuilder`3.NewItemCreator(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.BaseCollectionViewService`1.NewItemCreator" /> を構成します。
            コレクションに新しい項目を作成する関数を設定します。</summary>
            <remarks>作成関数が提供されない場合は、適切なタイプの初期化されていない項目の作成を試みます。</remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BaseCollectionViewServiceBuilder`3.ReadActionUrl(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.BaseCollectionViewService`1.ReadActionUrl" /> を構成します。
            読み取りアクションの URL を設定します。</summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BaseCollectionViewServiceBuilder`3.CreateActionUrl(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.BaseCollectionViewService`1.CreateActionUrl" /> を構成します。
            作成アクションの URL を設定します。</summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BaseCollectionViewServiceBuilder`3.UpdateActionUrl(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.BaseCollectionViewService`1.UpdateActionUrl" /> を構成します。
            更新アクションの URL を設定します。</summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BaseCollectionViewServiceBuilder`3.DeleteActionUrl(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.BaseCollectionViewService`1.DeleteActionUrl" /> を構成します。
            削除アクションの URL を設定します。</summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BaseCollectionViewServiceBuilder`3.DisableServerRead(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.BaseCollectionViewService`1.DisableServerRead" /> を構成します。
            サーバー側のソート、ページング、およびフィルタ処理を無効にするかどうかを設定します。</summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BaseCollectionViewServiceBuilder`3.SourceCollection(System.Collections.Generic.IEnumerable{`0})">
            <summary>
                <see cref="P:C1.Web.Mvc.BaseCollectionViewService`1.SourceCollection" /> を構成します。
            ソースコレクションを設定します。</summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BaseCollectionViewServiceBuilder`3.Filter(System.Predicate{`0})">
            <summary>
                <see cref="P:C1.Web.Mvc.BaseCollectionViewService`1.Filter" /> を構成します。
            項目をビューに入れるかどうかを判断するために使用されるメソッドを設定します。</summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BaseCollectionViewServiceBuilder`3.BatchEditActionUrl(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.BaseCollectionViewService`1.BatchEditActionUrl" /> を構成します。
            一括編集アクションの URL を設定します。</summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BaseCollectionViewServiceBuilder`3.InitialItemsCount(System.Nullable{System.Int32})">
            <summary>
                <see cref="P:C1.Web.Mvc.BaseCollectionViewService`1.InitialItemsCount" /> を構成します。
            初期にロードされる項目の数を決定する数値を設定します。</summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BaseCollectionViewServiceBuilder`3.BatchEdit(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.BaseCollectionViewService`1.BatchEdit" /> を構成します。
            データを一括編集するかどうかを示すブール値を設定します。</summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BaseCollectionViewServiceBuilder`3.OnClientQueryData(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.BaseCollectionViewService`1.OnClientQueryData" /> クライアントイベントを構成します。
            Ajax クエリーデータを収集する JavaScript 関数の名前を設定します。</summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BaseCollectionViewServiceBuilder`3.OnClientQueryComplete(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.BaseCollectionViewService`1.OnClientQueryComplete" /> クライアントイベントを構成します。
            クエリー要求が完了すると発生します。</summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BaseCollectionViewServiceBuilder`3.OnClientSourceCollectionChanging(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.BaseCollectionViewService`1.OnClientSourceCollectionChanging" /> クライアントイベントを構成します。
            クライアントの sourceCollection プロパティが変更される前に発生します。</summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BaseCollectionViewServiceBuilder`3.OnClientSourceCollectionChanged(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.BaseCollectionViewService`1.OnClientSourceCollectionChanged" /> クライアントイベントを構成します。
            クライアントの sourceCollection プロパティが変更された後に発生します。</summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BaseCollectionViewServiceBuilder`3.OnClientError(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.BaseCollectionViewService`1.OnClientError" /> クライアントイベントを構成します。
            サーバー側からエラーがあった場合に発生します。</summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.BaseODataCollectionViewServiceBuilder`3">
            <summary>
                <see cref="T:C1.Web.Mvc.BaseODataCollectionViewService`1" /> を構成するためのビルダを定義します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BaseODataCollectionViewServiceBuilder`3.#ctor(`1)">
            <summary>
                <paramref name="component" /> を構成するために 1 つの <see cref="T:C1.Web.Mvc.Fluent.BaseODataCollectionViewServiceBuilder`3" /> インスタンスを作成します。</summary>
            <param name="component">構成する <see cref="T:C1.Web.Mvc.BaseODataCollectionViewService`1" /> オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BaseODataCollectionViewServiceBuilder`3.RequestHeaders(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
                <see cref="P:C1.Web.Mvc.BaseODataCollectionViewService`1.RequestHeaders" /> を構成します。
            データを送信または要求するときに使用する要求ヘッダーを含むオブジェクトを設定します。このプロパティは、認証が必要なシナリオでよく使用されます。</summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BaseODataCollectionViewServiceBuilder`3.RequestHeaders(System.Object)">
            <summary>
                <see cref="P:C1.Web.Mvc.BaseODataCollectionViewService`1.RequestHeaders" /> を構成します。
            データを送信または要求するときに使用する要求ヘッダーを含むオブジェクトを設定します。このプロパティは、認証が必要なシナリオでよく使用されます。</summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BaseODataCollectionViewServiceBuilder`3.RequestHeader(System.String,System.Object)">
            <summary>
                <see cref="P:C1.Web.Mvc.BaseODataCollectionViewService`1.RequestHeaders" /> を構成します。
            データを送信または要求するときに使用する要求ヘッダーを含むオブジェクトを設定します。このプロパティは、認証が必要なシナリオでよく使用されます。</summary>
            <param name="key">1 つの要求ヘッダーのキー。</param>
            <param name="value">要求ヘッダーの値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BaseODataCollectionViewServiceBuilder`3.DataTypes(System.Collections.Generic.IDictionary{System.String,C1.Web.Mvc.Grid.DataType})">
            <summary>
                <see cref="P:C1.Web.Mvc.BaseODataCollectionViewService`1.DataTypes" /> を構成します。
            データのロード時にデータ型を適用するためのマップとして使用されるオブジェクトを設定します。</summary>
            <remarks>オブジェクトキーはフィールド名を表し、値はデータに適用する方法を示す <see cref="T:C1.Web.Mvc.Grid.DataType" /> 値です。</remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BaseODataCollectionViewServiceBuilder`3.DataType(System.String,C1.Web.Mvc.Grid.DataType)">
            <summary>
                <see cref="P:C1.Web.Mvc.BaseODataCollectionViewService`1.DataTypes" /> を構成します。
            データのロード時にデータ型を適用するためのマップとして使用されるオブジェクトを設定します。</summary>
            <remarks>オブジェクトキーはフィールド名を表し、値はデータに適用する方法を示す <see cref="T:C1.Web.Mvc.Grid.DataType" /> 値です。</remarks>
            <param name="fieldName">フィールド名。</param>
            <param name="dataType">フィールドデータの型。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BaseODataCollectionViewServiceBuilder`3.Fields(System.String[])">
            <summary>
                <see cref="P:C1.Web.Mvc.BaseODataCollectionViewService`1.Fields" /> を構成します。
            データソースから取得されるフィールドの名前を含む配列を設定します。</summary>
            <remarks>このプロパティが null または空の配列に設定されている場合は、すべてのフィールドが取得されます。</remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BaseODataCollectionViewServiceBuilder`3.Keys(System.String[])">
            <summary>
                <see cref="P:C1.Web.Mvc.BaseODataCollectionViewService`1.Keys" /> を構成します。
            キーフィールドの名前を含む配列を設定します。更新操作（追加/削除/完全削除）にはキーフィールドが必要です。</summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BaseODataCollectionViewServiceBuilder`3.TableName(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.BaseODataCollectionViewService`1.TableName" /> を構成します。
            このコレクションが連結されているテーブル（エンティティ）の名前を設定します。</summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BaseODataCollectionViewServiceBuilder`3.InferDataTypes(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.BaseODataCollectionViewService`1.InferDataTypes" /> を構成します。
            標準の日付表現のような文字列を含むフィールドを自動的に日付に変換するかどうかを決定する値を設定します。</summary>
            <remarks>このプロパティはデフォルトで true に設定されています。これは、<see cref="T:C1.Web.Mvc.BaseODataCollectionViewService`1" /> クラスでは JSON が使用されており、この形式では Date オブジェクトがサポートされていないためです。</remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BaseODataCollectionViewServiceBuilder`3.FilterDefinition(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.BaseODataCollectionViewService`1.FilterDefinition" /> を構成します。
            サーバー上のデータをフィルタ処理するために使用される OData フィルタ仕様を含む文字列を設定します。</summary>
            <remarks>フィルタ定義構文については、<a href="http://www.odata.org/documentation/odata-version-2-0/uri-conventions/">OData ドキュメント</a>で説明されています。</remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BaseODataCollectionViewServiceBuilder`3.ODataVersion(System.Nullable{System.Double})">
            <summary>
                <see cref="P:C1.Web.Mvc.BaseODataCollectionViewService`1.ODataVersion" /> を構成します。
            サーバーによって使用される OData バージョンを設定します。</summary>
            <remarks>現在、OData サービスには、1.0 から 4.0 までの 4 つのバージョンがあります。バージョン 4.0 は最新のサービスで使用されますが、以前のサービスもまだ数多く使用されています。サービスに実装されている OData のバージョンがわかっている場合は、作成時に <see cref="M:C1.Web.Mvc.Fluent.BaseODataCollectionViewServiceBuilder`3.ODataVersion(System.Nullable{System.Double})" /> プロパティを適切な値（1 ～ 4）に設定します。</remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BaseODataCollectionViewServiceBuilder`3.OnClientLoading(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.BaseODataCollectionViewService`1.OnClientLoading" /> クライアントイベントを構成します。
            <see cref="T:C1.Web.Mvc.BaseODataCollectionViewService`1" /> がデータのロードを開始するときに発生します。</summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BaseODataCollectionViewServiceBuilder`3.OnClientLoaded(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.BaseODataCollectionViewService`1.OnClientLoaded" /> クライアントイベントを構成します。
            <see cref="T:C1.Web.Mvc.BaseODataCollectionViewService`1" /> がデータのロードを終了するときに発生します。</summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BaseODataCollectionViewServiceBuilder`3.OnClientError(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.BaseODataCollectionViewService`1.OnClientError" /> クライアントイベントを構成します。
            データの読み込みまたは書き込みエラーがあるときに発生します。</summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BaseODataCollectionViewServiceBuilder`3.ServiceUrl(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.BaseODataCollectionViewService`1.ServiceUrl" /> を構成します。
            OData サービスの URL を設定します。</summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ODataCollectionViewServiceBuilder`1">
            <summary>
                <see cref="T:C1.Web.Mvc.ODataCollectionViewService`1" /> を構成するためのビルダを定義します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ODataCollectionViewServiceBuilder`1.#ctor(C1.Web.Mvc.ODataCollectionViewService{`0})">
            <summary>
                <paramref name="component" /> を構成するために 1 つの <see cref="T:C1.Web.Mvc.Fluent.ODataCollectionViewServiceBuilder`1" /> インスタンスを作成します。</summary>
            <param name="component">構成する <see cref="T:C1.Web.Mvc.ODataCollectionViewService`1" /> オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ODataCollectionViewServiceBuilder`1.PageOnServer(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.ODataCollectionViewService`1.PageOnServer" /> を構成します。
            サーバーまたはクライアントのどちらでページングを実行するかを決定する値を設定します。</summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ODataCollectionViewServiceBuilder`1.SortOnServer(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.ODataCollectionViewService`1.SortOnServer" /> を構成します。
            サーバーまたはクライアントのどちらでソート操作を実行するかを決定する値を設定します。</summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ODataCollectionViewServiceBuilder`1.FilterOnServer(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.ODataCollectionViewService`1.FilterOnServer" /> を構成します。
            サーバーまたはクライアントのどちらでフィルタ処理を実行するかを決定する値を設定します。</summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ODataVirtualCollectionViewServiceBuilder`1">
            <summary>
                <see cref="T:C1.Web.Mvc.ODataVirtualCollectionViewService`1" /> を構成するためのビルダを定義します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ODataVirtualCollectionViewServiceBuilder`1.MoveToPage(System.Int32)">
            <summary>このメソッドを削除するためにオーバーライドします。</summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ODataVirtualCollectionViewServiceBuilder`1.GroupDescriptions(System.Collections.Generic.IEnumerable{C1.Web.Mvc.GroupDescription})">
            <summary>このメソッドを削除するためにオーバーライドします。</summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ODataVirtualCollectionViewServiceBuilder`1.PropertyGroupDescriptions(System.Action{C1.Web.Mvc.Fluent.ListItemFactory{C1.Web.Mvc.PropertyGroupDescription,C1.Web.Mvc.Fluent.PropertyGroupDescriptionBuilder}})">
            <summary>このメソッドを削除するためにオーバーライドします。</summary>
            <param name="build">グループ記述を作成するアクション。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ODataVirtualCollectionViewServiceBuilder`1.GroupBy(System.String[])">
            <summary>このメソッドを削除するためにオーバーライドします。</summary>
            <param name="names">グループ化に使用するプロパティ名のリスト。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ODataVirtualCollectionViewServiceBuilder`1.OnClientPageChanged(System.String)">
            <summary>このメソッドを削除するためにオーバーライドします。</summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ODataVirtualCollectionViewServiceBuilder`1.OnClientPageChanging(System.String)">
            <summary>このメソッドを削除するためにオーバーライドします。</summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ODataVirtualCollectionViewServiceBuilder`1.#ctor(C1.Web.Mvc.ODataVirtualCollectionViewService{`0})">
            <summary>
                <paramref name="component" /> を構成するために 1 つの <see cref="T:C1.Web.Mvc.Fluent.ODataVirtualCollectionViewServiceBuilder`1" /> インスタンスを作成します。</summary>
            <param name="component">構成する <see cref="T:C1.Web.Mvc.ODataVirtualCollectionViewService`1" /> オブジェクト。</param>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.InputColorBuilder">
            <summary>InputColor のビルダ。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.DropDownBuilder`2">
            <summary>DropDown のビルダ。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.FormInputBaseBuilder`2">
            <summary>FormInputBase のビルダ。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.InputBaseBuilder`2">
            <summary>InputBase のビルダ。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ControlBuilder`2">
            <summary>コントロールビルダの基本クラスを定義します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilder`2.CssClass(System.String)">
            <summary>コントロールの css クラスを設定します。</summary>
            <param name="value">値。</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilder`2.Width(System.String)">
            <summary>コントロールの幅を設定します。</summary>
            <param name="value">値。</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilder`2.Height(System.String)">
            <summary>コントロールの高さを設定します。</summary>
            <param name="value">値。</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilder`2.OnClientGotFocus(System.String)">
            <summary>コントロールがフォーカスを取得すると発生します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilder`2.OnClientLostFocus(System.String)">
            <summary>コントロールがフォーカスを失うと発生します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilder`2.IsDisabled(System.Boolean)">
            <summary>コントロールのisDisabled状態を設定します。</summary>
            <param name="value">値。</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilder`2.Disabled(System.Boolean)">
            <summary>コントロールの無効状態を設定します。</summary>
            <param name="value">値。</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilder`2.#ctor(`0)">
            <summary>BaseControlBuilder インスタンスを作成します。</summary>
            <param name="control">構成する<see cref="T:C1.Web.Mvc.Control" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilder`2.HtmlAttribute(System.String,System.String)">
            <summary>１つの HTML 属性を設定します。</summary>
            <param name="key">HTML 属性のキー</param>
            <param name="value">HTML 属性の値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilder`2.HtmlAttributes(System.Object)">
            <summary>いくつかの HTML 属性を設定します。</summary>
            <param name="attributes">HTML 属性</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilder`2.HtmlAttributes(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>いくつかの HTML 属性を設定します。</summary>
            <param name="attributes">HTML 属性</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilder`2.CssStyle(System.String,System.String)">
            <summary>１つの CSS プロパティを設定します。</summary>
            <param name="key">CSS プロパティのキー</param>
            <param name="value">CSS プロパティの値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilder`2.CssStyles(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>いくつかの CSS スタイルを設定します。</summary>
            <param name="styles">CSS スタイル</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilder`2.TemplateBind(System.String,System.String)">
            <summary>コントロールがテンプレートモードで機能している場合に、指定された名前のプロパティを 
            指定された名前の項目に連結します。</summary>
            <remarks>これはテンプレートモードでのみ機能します。</remarks>
            <param name="propertyName">指定されたプロパティの名前。</param>
            <param name="boundName">DataContext 内の指定された項目の名前。</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilder`2.Width(System.Int32)">
            <summary>コントロールの幅をピクセル単位で設定します。</summary>
            <param name="width">幅</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilder`2.Height(System.Int32)">
            <summary>コントロールの高さをピクセル単位で設定します。</summary>
            <param name="height">高さ</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilder`2.ToTemplate">
            <summary>テンプレートモードに移動します。</summary>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilder`2.Id(System.String)">
            <summary>コントロールの ID を設定します。</summary>
            <param name="id">ID。</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputBaseBuilder`2.#ctor(`0)">
            <summary>１つの InputBaseBuilder インスタンスを作成します。</summary>
            <param name="component">構成する<see cref="T:C1.Web.Mvc.InputBase" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FormInputBaseBuilder`2.#ctor(`0)">
            <summary>１つの FormInputBaseBuilder インスタンスを作成します。</summary>
            <param name="component">構成する<see cref="T:C1.Web.Mvc.FormInputBase" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FormInputBaseBuilder`2.Name(System.String)">
            <summary>Name プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DropDownBuilder`2.#ctor(`0)">
            <summary>１つの DropDownBuilder インスタンスを作成します。</summary>
            <param name="component">構成する<see cref="T:C1.Web.Mvc.DropDown" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DropDownBuilder`2.Text(System.String)">
            <summary>Text プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DropDownBuilder`2.Placeholder(System.String)">
            <summary>Placeholder プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DropDownBuilder`2.IsDroppedDown(System.Boolean)">
            <summary>IsDroppedDown プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DropDownBuilder`2.ShowDropDownButton(System.Boolean)">
            <summary>ShowDropDownButton プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DropDownBuilder`2.OnClientTextChanged(System.String)">
            <summary>OnClientTextChanged プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DropDownBuilder`2.OnClientIsDroppedDownChanged(System.String)">
            <summary>OnClientIsDroppedDownChanged プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DropDownBuilder`2.OnClientIsDroppedDownChanging(System.String)">
            <summary>OnClientIsDroppedDownChangingプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DropDownBuilder`2.AutoExpandSelection(System.Boolean)">
            <summary>AutoExpandSelectionプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DropDownBuilder`2.DropDownCssClass(System.String)">
            <summary>DropDownCssClassプロパティを設定します。</summary>
            <remarks>コントロールのドロップダウン要素に追加するCSSクラス名を取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DropDownBuilder`2.IsRequired(System.Boolean)">
            <summary>IsRequiredプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DropDownBuilder`2.IsAnimated(System.Boolean)">
            <summary>IsAnimatedプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DropDownBuilder`2.IsReadOnly(System.Boolean)">
            <summary>IsReadOnlyプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputColorBuilder.Palette(System.Drawing.Color[])">
            <summary>
                <see cref="P:C1.Web.Mvc.InputColor.Palette" />を構成します。パレット内の色を保持する配列を設定します。</summary>
            <remarks>パレットには、10個の文字列の配列で表される10個の色が含まれます。通常、最初の2つの色は白と黒です。</remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputColorBuilder.Palette(System.Collections.Generic.List{System.Drawing.Color})">
            <summary>
                <see cref="P:C1.Web.Mvc.InputColor.Palette" />を構成します。パレット内の色を保持する配列を設定します。</summary>
            <remarks>パレットには、10個の文字列の配列で表される10個の色が含まれます。通常、最初の2つの色は白と黒です。</remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputColorBuilder.#ctor(C1.Web.Mvc.InputColor)">
            <summary>１つの InputColorBuilder インスタンスを作成します。</summary>
            <param name="component">構成する<see cref="T:C1.Web.Mvc.InputColor" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputColorBuilder.Required(System.Boolean)">
            <summary>Required プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputColorBuilder.ShowAlphaChannel(System.Boolean)">
            <summary>ShowAlphaChannel プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputColorBuilder.OnClientValueChanged(System.String)">
            <summary>OnClientValueChanged プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputColorBuilder.Value(System.Nullable{System.Drawing.Color})">
            <summary>Value プロパティを設定します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.TreeMap`1">
            <summary>これは、四角形を入れ子にした形式で階層（ツリー構造）データを表示します。</summary>
            <remarks>ツリーの各ブランチが1つの四角形で表され、その中に、子ブランチを表す小さな四角形が並べられます。リーフノードの四角形は、指定されたディメンションのデータに比例した面積を持ちます。異なるデータディメンションを示すために、通常、リーフノードは色分けされます。</remarks>
        </member>
        <member name="T:C1.Web.Mvc.FlexChartBase`1">
            <summary>フレックスチャートの基本クラス。</summary>
        </member>
        <member name="T:C1.Web.Mvc.IExtendable">
            <summary>コンポーネントを拡張可能にするインタフェースを定義します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.FlexChartBase`1.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>１つの FlexChartBase インスタンスを作成します。</summary>
            <param name="helper">HTML ヘルパー</param>
            <param name="selector">セレクタ</param>
        </member>
        <member name="M:C1.Web.Mvc.FlexChartBase`1.ShouldSerializeLegend">
            <summary>Legendプロパティをシリアライズするかどうかを指定します。</summary>
            <returns>trueの場合、プロパティはシリアライズされます。
            そうでない場合は、シリアライズされません。</returns>
        </member>
        <member name="M:C1.Web.Mvc.FlexChartBase`1.RegisterStartupScript(System.Web.UI.HtmlTextWriter)">
            <summary>起動スクリプトを登録します。</summary>
            <param name="writer">起動スクリプトの書き込みに使用される指定されたライタ。</param>
        </member>
        <member name="P:C1.Web.Mvc.FlexChartBase`1.Palette">
            <summary>系列の表示に使用されるデフォルトの色の配列を取得または設定します。</summary>
            <remarks>
                <see cref="T:C1.Web.Mvc.Chart.Palettes" /> クラスにある事前定義されたパレットのセットを使用できます。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.FlexChartBase`1.Extenders">
            <summary>エクステンダコレクションを取得します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexChartBase`1.Footer">
            <summary>グラフのフッターに表示されるテキストを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexChartBase`1.Header">
            <summary>グラフのヘッダーに表示されるテキストを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexChartBase`1.ItemFormatter">
            <summary>データポイントの外観をカスタマイズするための項目書式設定関数の名前を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexChartBase`1.Legend">
            <summary>グラフの凡例を取得します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexChartBase`1.PlotMargin">
            <summary>プロットマージン（ピクセル単位）を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexChartBase`1.SelectionMode">
            <summary>ユーザーがグラフをクリックしたときに何かが選択されるかどうか、または何が選択されるかを示す列挙値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexChartBase`1.OnClientRendered">
            <summary>グラフがレンダリングを終了した後に発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexChartBase`1.OnClientRendering">
            <summary>グラフがデータのレンダリングを開始する前に発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexChartBase`1.HeaderStyle">
            <summary>Header 要素のスタイルを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexChartBase`1.FooterStyle">
            <summary>FooterStyle のスタイルを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexChartBase`1.OnClientSelectionChanged">
            <summary>ユーザーがグラフをクリックするか、プログラムにより、選択範囲が変更された後に発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexChartBase`1.Tooltip">
            <summary>グラフのツールチップを取得します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.TreeMap`1.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>1つの<see cref="T:C1.Web.Mvc.TreeMap`1" />インスタンスを作成します。</summary>
            <param name="helper">HTMLヘルパー</param>
            <param name="selector">セレクタ</param>
        </member>
        <member name="P:C1.Web.Mvc.TreeMap`1.Palette">
            <summary>ツリーマップで使用するデフォルトの色の配列を取得または設定します。</summary>
            <remarks>この配列には、CSSカラーを表す文字列が含まれます。配列の項目タイプは<see cref="T:System.Drawing.Color" />または<see cref="T:C1.Web.Mvc.TreeMapItemStyle" />です。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.TreeMap`1.SelectionMode">
            <summary>このプロパティを削除するためにオーバーライドします。</summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeMap`1.OnClientSelectionChanged">
            <summary>このプロパティを削除するためにオーバーライドします。</summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeMap`1.ItemFormatter">
            <summary>このプロパティを削除するためにオーバーライドします。</summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeMap`1.Binding">
            <summary>チャートの値を含むデータ項目のプロパティの名前を取得または設定します。</summary>
            <remarks>このプロパティは、他のノードの値と比較してノードのサイズを計算するために使用されます。このプロパティには、数値データを設定する必要があります。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.TreeMap`1.BindingName">
            <summary>データ項目の名前を含むプロパティの名前を取得または設定します。ノードの名前を表示するために使用されます。</summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeMap`1.ChildItemsPath">
            <summary>階層化データ内の子の項目の生成に使用される1つ以上のプロパティの名前を取得または設定します。</summary>
            <remarks>このプロパティには、これらの項目が異なるレベルにある異なる名前の子項目である場合に、各レベルにある子項目を保持するプロパティの名前から成る配列を設定します。す。たとえば、<code>[ 'Accounts', 'Checks', 'Earnings' ]</code>です。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.TreeMap`1.DataLabel">
            <summary></summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeMap`1.Legend">
            <summary>チャートの凡例を取得します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeMap`1.MaxDepth">
            <summary>現在のビューに表示するノードレベルの最大数を取得または設定します。</summary>
            <remarks>複数のレベルが平坦化されて現在のプレーンに置かれます。<see cref="T:C1.Web.Mvc.TreeMap`1" />にこれより多くのレベルが含まれる場合、それらを表示するには、上下に移動する必要があります。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.TreeMap`1.Type">
            <summary>ツリーマップのタイプを取得または設定します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.TreeMapBuilder`1">
            <summary>
                <see cref="T:C1.Web.Mvc.TreeMap`1" />を構成するためのビルダを定義します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.FlexChartBaseBuilder`3">
            <summary>FlexChart 基本ビルダ。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ItemsBoundControlBuilder`3">
            <summary>基本 <see cref="T:C1.Web.Mvc.ItemsBoundControl`1" /> ビルダ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ItemsBoundControlBuilder`3.#ctor(`1)">
            <summary>コンストラクタ。</summary>
            <param name="component">構成する<see cref="T:C1.Web.Mvc.ItemsBoundControl`1" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ItemsBoundControlBuilder`3.ItemsSourceId(System.String)">
            <summary>この列で使用されるItemsSourceIdを設定し、このコントロールに対してどのCollectionViewServiceを使用するかを指定します。</summary>
            <param name="value">値。</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ItemsBoundControlBuilder`3.Bind(System.Action{C1.Web.Mvc.Fluent.CollectionViewServiceBuilder{`0}})">
            <summary>ビルダによってItemsSourceを設定します。</summary>
            <param name="build">項目ソースを構築するアクション。</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ItemsBoundControlBuilder`3.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>コレクションに連結します。</summary>
            <param name="value">ソースコレクションを指定するコレクション。</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ItemsBoundControlBuilder`3.Bind(System.String)">
            <summary>読み取りアクション URL を設定します。</summary>
            <param name="value">データを読み取るためのアクションURL。</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ItemsBoundControlBuilder`3.BindODataVirtualSource(System.Action{C1.Web.Mvc.Fluent.ODataVirtualCollectionViewServiceBuilder{`0}})">
            <summary>
                <see cref="P:C1.Web.Mvc.ItemsBoundControl`1.ItemsSource" /> を構成します。
            ItemsSource を設定します。</summary>
            <param name="build">
                <see cref="T:C1.Web.Mvc.ODataVirtualCollectionViewService`1" /> を構築するアクション。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ItemsBoundControlBuilder`3.BindODataSource(System.Action{C1.Web.Mvc.Fluent.ODataCollectionViewServiceBuilder{`0}})">
            <summary>
                <see cref="P:C1.Web.Mvc.ItemsBoundControl`1.ItemsSource" /> を構成します。
            ItemsSource を設定します。</summary>
            <param name="build">
                <see cref="T:C1.Web.Mvc.ODataCollectionViewService`1" /> を構築するアクション。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartBaseBuilder`3.#ctor(`1)">
            <summary>FlexCharBaseBuilder インスタンスを作成します。</summary>
            <param name="component">構成する<see cref="T:C1.Web.Mvc.FlexChartBase`1" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartBaseBuilder`3.Footer(System.String)">
            <summary>Footer プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartBaseBuilder`3.Header(System.String)">
            <summary>Header プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartBaseBuilder`3.ItemFormatter(System.String)">
            <summary>ItemFormatter プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartBaseBuilder`3.PlotMargin(System.String)">
            <summary>PlotMargin プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartBaseBuilder`3.SelectionMode(C1.Web.Mvc.Chart.SelectionMode)">
            <summary>SelectionMode プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartBaseBuilder`3.OnClientRendered(System.String)">
            <summary>OnClientRendered プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartBaseBuilder`3.OnClientRendering(System.String)">
            <summary>OnClientRendering プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartBaseBuilder`3.HeaderStyle(System.Action{C1.Web.Mvc.Fluent.TitleStyleBuilder})">
            <summary>HeaderStyle プロパティを設定します。</summary>
            <param name="build">構築関数</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartBaseBuilder`3.FooterStyle(System.Action{C1.Web.Mvc.Fluent.TitleStyleBuilder})">
            <summary>FooterStyle プロパティを設定します。</summary>
            <param name="build">構築関数</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartBaseBuilder`3.OnClientSelectionChanged(System.String)">
            <summary>OnClientSelectionChangedプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartBaseBuilder`3.Tooltip(System.Action{C1.Web.Mvc.Fluent.ChartTooltipBuilder})">
            <summary>
                <see cref="P:C1.Web.Mvc.FlexChartBase`1.Tooltip" />を構成します。グラフのツールチップを設定します。</summary>
            <param name="build">ビルダ関数。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartBaseBuilder`3.Palette(System.Drawing.Color[])">
            <summary>Palette プロパティを設定します。</summary>
            <remarks>系列の表示に使用されるデフォルトの色の配列を取得または設定します。</remarks>
            <param name="colors">色の配列</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartBaseBuilder`3.Palette(System.Collections.Generic.IEnumerable{System.Drawing.Color})">
            <summary>Palette プロパティを設定します。</summary>
            <remarks>系列の表示に使用されるデフォルトの色の配列を取得または設定します。</remarks>
            <param name="colors">色コレクション</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartBaseBuilder`3.Legend(C1.Web.Mvc.Chart.Position)">
            <summary>凡例の位置を設定します。</summary>
            <param name="position">位置</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeMapBuilder`1.ChildItemsPath(System.String[])">
            <summary>
                <see cref="P:C1.Web.Mvc.TreeMap`1.ChildItemsPath" />を構成します。階層化データ内の子の項目の生成に使用される1つ以上のプロパティの名前を設定します。</summary>
            <remarks>このプロパティには、これらの項目が異なるレベルにある異なる名前の子項目である場合に、各レベルにある子項目を保持するプロパティの名前から成る配列を設定します。す。たとえば、<code>[ 'Accounts', 'Checks', 'Earnings' ]</code>です。</remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeMapBuilder`1.BindingName(System.String[])">
            <summary>
                <see cref="P:C1.Web.Mvc.TreeMap`1.BindingName" />を構成します。データ項目の名前を含むプロパティの名前を設定します。ノードの名前を表示するために使用されます。</summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeMapBuilder`1.Palette(System.Action{C1.Web.Mvc.Fluent.ListItemFactory{C1.Web.Mvc.TreeMapItemStyle,C1.Web.Mvc.Fluent.TreeMapItemStyleBuilder}})">
            <summary>
                <see cref="P:C1.Web.Mvc.TreeMap`1.Palette" /> を設定します。ツリーマップで使用するデフォルトの色の配列を設定します。</summary>
            <param name="builder">ビルダアクション。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeMapBuilder`1.Palette(System.Collections.Generic.IEnumerable{System.Drawing.Color})">
            <summary>
                <see cref="P:C1.Web.Mvc.TreeMap`1.Palette" /> を設定します。ツリーマップで使用するデフォルトの色の配列を設定します。</summary>
            <remarks>この配列には、CSSカラーを表す文字列が含まれます。</remarks>
            <param name="colors">色コレクション</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeMapBuilder`1.OnClientSelectionChanged(System.String)">
            <summary>この構成を削除するためにオーバーライドします。Configurates the <see cref="P:C1.Web.Mvc.FlexChartBase`1.OnClientSelectionChanged" /> client event. ユーザーがグラフをクリックするか、プログラムにより、選択範囲が変更された後に発生します。</summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeMapBuilder`1.SelectionMode(C1.Web.Mvc.Chart.SelectionMode)">
            <summary>この構成を削除するためにオーバーライドします。<see cref="P:C1.Web.Mvc.FlexChartBase`1.SelectionMode" />を構成します。ユーザーがグラフをクリックしたときに何かが選択されるかどうか、または何が選択されるかを示す列挙値を設定します。</summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeMapBuilder`1.ItemFormatter(System.String)">
            <summary>この構成を削除するためにオーバーライドします。<see cref="P:C1.Web.Mvc.FlexChartBase`1.ItemFormatter" />を構成します。データポイントの外観をカスタマイズするための項目書式設定関数の名前を設定します。</summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeMapBuilder`1.#ctor(C1.Web.Mvc.TreeMap{`0})">
            <summary>
                <paramref name="component" />を構成するために1つの<see cref="T:C1.Web.Mvc.Fluent.TreeMapBuilder`1" />インスタンスを作成します。</summary>
            <param name="component">構成する<see cref="T:C1.Web.Mvc.TreeMap`1" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeMapBuilder`1.Binding(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.TreeMap`1.Binding" />を構成します。チャートの値を含むデータ項目のプロパティの名前を設定します。</summary>
            <remarks>このプロパティは、他のノードの値と比較してノードのサイズを計算するために使用されます。このプロパティには、数値データを設定する必要があります。</remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeMapBuilder`1.DataLabel(System.Action{C1.Web.Mvc.Fluent.DataLabelBuilder})">
            <summary>
                <see cref="P:C1.Web.Mvc.TreeMap`1.DataLabel" />を構成します。</summary>
            <param name="build">ビルダ関数。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeMapBuilder`1.MaxDepth(System.Int32)">
            <summary>
                <see cref="P:C1.Web.Mvc.TreeMap`1.MaxDepth" />を構成します。現在のビューに表示するノードレベルの最大数を設定します。</summary>
            <remarks>複数のレベルが平坦化されて現在のプレーンに置かれます。<see cref="T:C1.Web.Mvc.TreeMap`1" />にこれより多くのレベルが含まれる場合、それらを表示するには、上下に移動する必要があります。</remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeMapBuilder`1.Type(C1.Web.Mvc.TreeMapType)">
            <summary>
                <see cref="P:C1.Web.Mvc.TreeMap`1.Type" />を構成します。ツリーマップのタイプを設定します。</summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.TreeMapItemStyleBuilder">
            <summary>
                <see cref="T:C1.Web.Mvc.TreeMapItemStyle" />を構成するためのビルダを定義します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeMapItemStyleBuilder.#ctor(C1.Web.Mvc.TreeMapItemStyle)">
            <summary>
                <paramref name="obj" />を構成するために1つの<see cref="T:C1.Web.Mvc.TreeMapItemStyle" />インスタンスを作成します。</summary>
            <param name="obj">構成する<see cref="T:C1.Web.Mvc.TreeMapItemStyle" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeMapItemStyleBuilder.TitleColor(System.Drawing.Color)">
            <summary>
                <see cref="P:C1.Web.Mvc.TreeMapItemStyle.TitleColor" />を構成します。タイトルの色を設定します。</summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeMapItemStyleBuilder.MaxColor(System.Drawing.Color)">
            <summary>
                <see cref="P:C1.Web.Mvc.TreeMapItemStyle.MaxColor" />を構成します。最大値の色を設定します。</summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeMapItemStyleBuilder.MinColor(System.Drawing.Color)">
            <summary>
                <see cref="P:C1.Web.Mvc.TreeMapItemStyle.MinColor" />を構成します。最小値の色を設定します。</summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.MultiAutoCompleteBuilder`1">
            <summary>MultiAutoCompleteのビルダ。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.AutoCompleteBaseBuilder`3">
            <summary>AutoCompleteBaseのビルダ。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ComboBoxBaseBuilder`3">
            <summary>ComboBoxBase のビルダ。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.DropDownBuilder`3">
            <summary>DropDown のビルダ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DropDownBuilder`3.#ctor(`1)">
            <summary>１つの DropDownBuilder インスタンスを作成します。</summary>
            <param name="component">構成する<see cref="T:C1.Web.Mvc.DropDown`1" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DropDownBuilder`3.Text(System.String)">
            <summary>Text プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DropDownBuilder`3.Placeholder(System.String)">
            <summary>Placeholder プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DropDownBuilder`3.IsDroppedDown(System.Boolean)">
            <summary>IsDroppedDown プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DropDownBuilder`3.ShowDropDownButton(System.Boolean)">
            <summary>ShowDropDownButton プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DropDownBuilder`3.OnClientTextChanged(System.String)">
            <summary>OnClientTextChanged プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DropDownBuilder`3.OnClientIsDroppedDownChanged(System.String)">
            <summary>OnClientIsDroppedDownChanged プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DropDownBuilder`3.OnClientIsDroppedDownChanging(System.String)">
            <summary>OnClientIsDroppedDownChangingプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DropDownBuilder`3.AutoExpandSelection(System.Boolean)">
            <summary>AutoExpandSelectionプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DropDownBuilder`3.DropDownCssClass(System.String)">
            <summary>DropDownCssClassプロパティを設定します。</summary>
            <remarks>コントロールのドロップダウン要素に追加するCSSクラス名を取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DropDownBuilder`3.IsReadOnly(System.Boolean)">
            <summary>IsReadOnlyプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DropDownBuilder`3.IsRequired(System.Boolean)">
            <summary>IsRequiredプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DropDownBuilder`3.IsAnimated(System.Boolean)">
            <summary>IsAnimatedプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ComboBoxBaseBuilder`3.#ctor(`1)">
            <summary>１つの ComboBoxBaseBuilder インスタンスを作成します。</summary>
            <param name="component">構成する<see cref="T:C1.Web.Mvc.ComboBoxBase`1" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ComboBoxBaseBuilder`3.DisplayMemberPath(System.String)">
            <summary>DisplayMemberPath プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ComboBoxBaseBuilder`3.SelectedValuePath(System.String)">
            <summary>SelectedValuePath プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ComboBoxBaseBuilder`3.IsContentHtml(System.Boolean)">
            <summary>IsContentHtml プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ComboBoxBaseBuilder`3.ItemFormatter(System.String)">
            <summary>ItemFormatter プロパティを設定します。</summary>
            <remarks>ドロップダウンリストに表示される値をカスタマイズするために使用される関数を取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ComboBoxBaseBuilder`3.SelectedIndex(System.Int32)">
            <summary>SelectedIndex プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ComboBoxBaseBuilder`3.SelectedItem(`0)">
            <summary>SelectedItem プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ComboBoxBaseBuilder`3.SelectedValue(System.Object)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ComboBoxBase`1.SelectedValue" />.
            Sets the value of the SelectedValue, obtained using the SelectedValuePath.
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ComboBoxBaseBuilder`3.IsEditable(System.Boolean)">
            <summary>IsEditable プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ComboBoxBaseBuilder`3.MaxDropDownHeight(System.Double)">
            <summary>MaxDropDownHeight プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ComboBoxBaseBuilder`3.MaxDropDownWidth(System.Double)">
            <summary>MaxDropDownWidth プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ComboBoxBaseBuilder`3.ItemTemplateId(System.String)">
            <summary>ItemTemplateId プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ComboBoxBaseBuilder`3.OnClientSelectedIndexChanged(System.String)">
            <summary>OnClientSelectedIndexChanged プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ComboBoxBaseBuilder`3.ItemTemplateContent(System.String)">
            <summary>ItemTemplateContentプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ComboBoxBaseBuilder`3.HeaderPath(System.String)">
            <summary>HeaderPathプロパティを設定します。</summary>
            <remarks>コントロールの入力要素に表示される値を取得するために使用するプロパティ名を取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ComboBoxBaseBuilder`3.IsRequired(System.Boolean)">
            <summary>IsRequiredプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ComboBoxBaseBuilder`3.Required(System.Boolean)">
            <summary>Required プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ComboBoxBaseBuilder`3.OnClientFormatItem(System.String)">
            <summary>OnClientFormatItemプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ComboBoxBaseBuilder`3.OnClientItemsSourceChanged(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.ComboBoxBase`1.OnClientItemsSourceChanged" /> クライアントイベントを構成します。
            itemsSource プロパティの値が変化すると発生します。</summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AutoCompleteBaseBuilder`3.#ctor(`1)">
            <summary>1つのAutoCompleteBaseBuilderインスタンスを作成します。</summary>
            <param name="component">構成する<see cref="T:C1.Web.Mvc.AutoCompleteBase`1" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AutoCompleteBaseBuilder`3.MinLength(System.Int32)">
            <summary>MinLengthプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AutoCompleteBaseBuilder`3.MaxItems(System.Int32)">
            <summary>MaxItemsプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AutoCompleteBaseBuilder`3.Delay(System.Int32)">
            <summary>Delayプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AutoCompleteBaseBuilder`3.CssMatch(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.AutoCompleteBase`1.CssMatch" />を構成します。
            検索語と一致するすべての部分をコンテンツで強調表示するために使用する 
CSSクラスの名前を設定します。
            </summary>
            <remarks>
            By default, this property is set to "wj-state-match", which causes the matching terms to be shown in bold. You can set it to the name of a CSS class to change the way the matches are displayed.
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AutoCompleteBaseBuilder`3.ItemsSourceFunction(System.String)">
            <summary>ItemsSourceFunctionプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AutoCompleteBaseBuilder`3.ItemsSourceAction(System.String)">
            <summary>ItemsSourceActionプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AutoCompleteBaseBuilder`3.SearchMemberPath(System.String)">
            <summary>SearchMemberPathプロパティを設定します。</summary>
            <remarks>項目の検索時に使用するプロパティのカンマ区切りリストを含む文字列を取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AutoCompleteBaseBuilder`3.Name(System.String)">
            <summary>Nameプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiAutoCompleteBuilder`1.SelectedIndexes(System.Int32[])">
            <summary>SelectedIndexesプロパティを設定します。</summary>
            <remarks>現在選択されている項目のインデックスを含むリストを取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiAutoCompleteBuilder`1.SelectedIndex(System.Int32)">
            <summary>このメソッドを隠蔽するためにオーバーライドします。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiAutoCompleteBuilder`1.SelectedItem(`0)">
            <summary>このメソッドを隠蔽するためにオーバーライドします。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiAutoCompleteBuilder`1.SelectedValue(System.Object)">
            <summary>このメソッドを隠蔽するためにオーバーライドします。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiAutoCompleteBuilder`1.OnClientSelectedIndexChanged(System.String)">
            <summary>このメソッドを隠蔽するためにオーバーライドします。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiAutoCompleteBuilder`1.#ctor(C1.Web.Mvc.MultiAutoComplete{`0})">
            <summary>1つのMultiAutoCompleteBuilderインスタンスを作成します。</summary>
            <param name="component">構成する<see cref="T:C1.Web.Mvc.MultiAutoComplete`1" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiAutoCompleteBuilder`1.MaxSelectedItems(System.Nullable{System.Int32})">
            <summary>MaxSelectedItemsプロパティを設定します。</summary>
            <remarks>選択できる最大の項目数を取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiAutoCompleteBuilder`1.SelectedMemberPath(System.String)">
            <summary>SelectedMemberPathプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiAutoCompleteBuilder`1.OnClientSelectedItemsChanged(System.String)">
            <summary>OnClientSelectedItemsChangedプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiAutoCompleteBuilder`1.SelectedValues(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>SelectedValuesプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiAutoCompleteBuilder`1.ShowDropDownButton(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.MultiAutoComplete`1.ShowDropDownButton" />を構成します。このプロパティを削除するためにオーバーライドします。</summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Extender">
            <summary>基本 Extender クラスを定義します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.IExtender">
            <summary>エクステンダのインタフェースを定義します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Extender.#ctor(C1.Web.Mvc.Component)">
            <summary>BaseExtender のインスタンスを作成します。</summary>
            <param name="target">エクステンダが適用される指定されたコンポーネント。</param>
        </member>
        <member name="M:C1.Web.Mvc.Extender.Render(System.Web.UI.HtmlTextWriter)">
            <summary>ライタにエクステンダの結果をレンダリングします。</summary>
            <param name="writer">レンダリングに使用される指定のライタ。</param>
        </member>
        <member name="M:C1.Web.Mvc.Extender.RegisterStartupScript(System.Web.UI.HtmlTextWriter)">
            <summary>ライタにエクステンダインスタンスをレンダリングします。</summary>
            <param name="writer">指定されたライタ。</param>
        </member>
        <member name="M:C1.Web.Mvc.Extender.GetTargetInstance">
            <summary>クライアントのターゲットインスタンスを取得します。</summary>
            <returns>ターゲットインスタンスを示す文字列。</returns>
        </member>
        <member name="P:C1.Web.Mvc.Extender.UniqueId">
            <summary>この属性を削除するためにオーバーライドします。</summary>
        </member>
        <member name="T:C1.Web.Mvc.TemplateBindings">
            <summary>テンプレート連結を表します。</summary>
            <remarks>この型のインスタンスを作成する場合は、コントロールを渡す必要があります。そのコントロールは、<see cref="T:C1.Web.Mvc.TemplateBindings" /> のインスタンスを所有します。
            これは null でない必要があります。そうでない場合は、<see cref="T:System.ArgumentNullException" /> 例外が生成されます。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.TemplateBindings.Control">
            <summary>
                <see cref="T:C1.Web.Mvc.TemplateBindings" /> のインスタンスを所有するコントロールを取得します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.ChartAnimation`1">
            <summary>チャートのロードおよび更新中に組み込みのアニメーションを提供するエクステンダを定義します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.ChartAnimation`1.#ctor(C1.Web.Mvc.FlexChartBase{`0})">
            <summary>ChartAnimationクラスの新しいインスタンスを初期化します。</summary>
            <param name="target">FlexChartBaseから派生したターゲットチャート</param>
        </member>
        <member name="P:C1.Web.Mvc.ChartAnimation`1.AnimationMode">
            <summary>プロットポイントのアニメーション表示を一度に１つずつ行うか、系列ごとに行うか、または一度にすべて行うかを取得または設定します。アニメーション全体は時間内に完了します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartAnimation`1.AxisAnimation">
            <summary>アニメーションが軸に適用されるかどうかを示す値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartAnimation`1.Duration">
            <summary>アニメーション全体の長さ（ミリ秒）を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartAnimation`1.Easing">
            <summary>アニメーションに適用されるイージング関数を取得または設定します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.IAnimatable">
            <summary>コントロールがアニメーションエクステンダをサポートすることを示します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.AnnotationLayer`1">
            <summary>エクステンダを定義して、FlexChartおよびFinancialChartの注釈レイヤを設定します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.AnnotationLayer`1.#ctor(C1.Web.Mvc.FlexChartCore{`0})">
            <summary>1つのAnnotationLayerインスタンスを作成します。</summary>
            <param name="target">Chartインスタンス</param>
        </member>
        <member name="M:C1.Web.Mvc.AnnotationLayer`1.SerializeItems">
            <summary>AnnotationLayer項目をJSON文字列にシリアライズします。</summary>
            <returns>項目のJSON文字列表現。</returns>
        </member>
        <member name="P:C1.Web.Mvc.AnnotationLayer`1.Items">
            <summary>AnnotationLayer内の注釈要素のコレクションを取得します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Shape">
            <summary>AnnotationLayerの図形注釈の基本クラスを表します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.AnnotationBase">
            <summary>AnnotationLayerの注釈の基本クラスを表します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.AnnotationBase.ShouldSerializePosition">
            <summary>Positionプロパティをシリアライズするかどうかを指定します。</summary>
            <returns>trueの場合、プロパティはシリアライズされます。
            そうでない場合は、シリアライズされません。</returns>
        </member>
        <member name="M:C1.Web.Mvc.AnnotationBase.ShouldSerializeStyle">
            <summary>Styleプロパティをシリアライズするかどうかを指定します。</summary>
            <returns>trueの場合、プロパティはシリアライズされます。
            そうでない場合は、シリアライズされません。</returns>
        </member>
        <member name="M:C1.Web.Mvc.AnnotationBase.#ctor">
            <summary>AnnotationBaseインスタンスを作成します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.AnnotationBase.Attachment">
            <summary>注釈の添付方法を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.AnnotationBase.IsVisible">
            <summary>注釈の表示/非表示を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.AnnotationBase.Name">
            <summary>注釈の名前を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.AnnotationBase.Offset">
            <summary>ポイントからの注釈のオフセットを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.AnnotationBase.Point">
            <summary>注釈のポイントを取得または設定します。</summary>
            <remarks>ポイントの座標は、Attachmentプロパティに依存します。詳細は、AnnotationAttachmentを参照してください。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.AnnotationBase.PointIndex">
            <summary>注釈のデータポイントインデックスを取得または設定します。</summary>
            <remarks>AttachmentプロパティがDataIndexに設定されている場合にのみ適用されます。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.AnnotationBase.Position">
            <summary>注釈の位置を取得または設定します。</summary>
            <remarks>位置は、ポイントに対する相対的な位置です。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.AnnotationBase.SeriesIndex">
            <summary>注釈のデータ系列インデックスを取得または設定します。</summary>
            <remarks>AttachmentプロパティがDataIndexに設定されている場合にのみ適用されます。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.AnnotationBase.Style">
            <summary>注釈のスタイルを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.AnnotationBase.Tooltip">
            <summary>注釈のツールチップを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.AnnotationBase.Type">
            <summary>Annotationタイプを取得します。jsonシリアライズを使用します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Shape.#ctor">
            <summary>Shapeクラスのコンストラクタ。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Shape.Content">
            <summary>注釈のテキストを取得または設定します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.ChartGestures`1">
            <summary>ユーザーが指定されたFlexChartでズームまたはパンできるようにするエクステンダを定義します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.ChartGestures`1.#ctor(C1.Web.Mvc.FlexChartCore{`0})">
            <summary>ChartGesturesクラスの新しいインスタンスを初期化します。</summary>
            <param name="target">FlexChartCoreから派生したターゲットチャート</param>
        </member>
        <member name="P:C1.Web.Mvc.ChartGestures`1.Enable">
            <summary>ChartGesturesの有効/無効を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartGestures`1.InteractiveAxes">
            <summary>ChartGesturesの操作軸を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartGestures`1.MouseAction">
            <summary>ChartGesturesのマウス操作を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartGestures`1.PosX">
            <summary>軸Xの初期位置を取得または設定します。</summary>
            <remarks>Scaleが１より小さい場合、この値は軸の初期位置を表します。そうでない場合、Valueは無効です。Valueには０から１までの値を指定する必要があります。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.ChartGestures`1.PosY">
            <summary>軸Yの初期位置を取得または設定します。</summary>
            <remarks>Scaleが１より小さい場合、この値は軸の初期位置を表します。そうでない場合、Valueは無効です。Valueには０から１までの値を指定する必要があります。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.ChartGestures`1.ScaleX">
            <summary>軸Xの初期スケールを取得または設定します。</summary>
            <remarks>このスケールは０より大きく１以下にする必要があります。スケールは、最小値から最大値までの範囲のどの部分を表示するかを指定します。スケールが１（デフォルト値）の場合は、軸範囲全体が表示されます。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.ChartGestures`1.ScaleY">
            <summary>軸Yの初期スケールを取得または設定します。</summary>
            <remarks>このスケールは０より大きく１以下にする必要があります。スケールは、最小値から最大値までの範囲のどの部分を表示するかを指定します。スケールが１（デフォルト値）の場合は、軸範囲全体が表示されます。</remarks>
        </member>
        <member name="T:C1.Web.Mvc.TreeMapItemStyle">
            <summary>
                <see cref="T:C1.Web.Mvc.TreeMap`1" /> 内の項目に使用される色を定義します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeMapItemStyle.TitleColor">
            <summary>タイトルの色を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeMapItemStyle.MaxColor">
            <summary>最大値の色を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeMapItemStyle.MinColor">
            <summary>最小値の色を取得または設定します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.TreeMapLegend">
            <summary>異なるデフォルト値を持つTreeMapの凡例クラスを定義します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.ChartLegend">
            <summary>グラフの凡例を表します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartLegend.Position">
            <summary>チャートに凡例を表示するかどうかと、表示する場合はどこに表示するかを決定する列挙値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeMapLegend.Position">
            <summary>チャートに凡例を表示するかどうかと、表示する場合はどこに表示するかを決定する列挙値を取得または設定します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.TreeMapType">
            <summary>ツリーマップタイプを指定します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.TreeMapType.Squarified">
            <summary>正方形のツリーマップを表示します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.TreeMapType.Horizontal">
            <summary>横長長方形のツリーマップを表示します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.TreeMapType.Vertical">
            <summary>縦長長方形のツリーマップを表示します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.LineMarker`1">
            <summary></summary>
        </member>
        <member name="M:C1.Web.Mvc.LineMarker`1.#ctor(C1.Web.Mvc.FlexChartCore{`0})">
            <summary>LineMarkerクラスの新しいインスタンスを初期化します。</summary>
            <param name="target">FlexChartCoreから派生したターゲットチャート</param>
        </member>
        <member name="P:C1.Web.Mvc.LineMarker`1.IsVisible">
            <summary>LineMarkerの表示/非表示を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.LineMarker`1.SeriesIndex">
            <summary>LineMarkerが表示されるチャート内の系列のインデックスを取得または設定します。</summary>
            <remarks>これは、@see:InteractionプロパティがChart.LineMarkerInteraction.Moveに設定されている場合にのみ有効です。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.LineMarker`1.HorizontalPosition">
            <summary>プロットエリアに対するLineMarkerの水平位置を取得または設定します。</summary>
            <remarks>値の範囲は(0, 1)です。この値がnullまたは未定義で、@see:InteractionがChart.LineMarkerInteraction.Moveに設定されている場合、マーカーの水平位置は、ポインタの位置に基づいて自動的に計算されます。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.LineMarker`1.Content">
            <summary>LineMarkerのテキストコンテンツをカスタマイズするためのコンテンツ関数を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.LineMarker`1.VerticalPosition">
            <summary>プロットエリアに対するLineMarkerの垂直位置を取得または設定します。</summary>
            <remarks>値の範囲は(0, 1)です。この値がnullまたは未定義で、@see:InteractionがChart.LineMarkerInteraction.Moveに設定されている場合、LineMarkerの垂直位置は、ポインタの位置に基づいて自動的に計算されます。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.LineMarker`1.Alignment">
            <summary>LineMarkerコンテンツの配置を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.LineMarker`1.Lines">
            <summary>LineMarker行の表示/非表示を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.LineMarker`1.Interaction">
            <summary>LineMarkerの操作モードを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.LineMarker`1.OnClientPositionChanged">
            <summary>LineMarkerの位置の変更後に発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.LineMarker`1.DragThreshold">
            <summary>マーカーをドラッグできる水平線または垂直線からの最大距離を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.LineMarker`1.DragContent">
            <summary>操作モードがDragの場合に、マーカーのコンテンツがドラッグ可能かどうかを示す値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.LineMarker`1.DragLines">
            <summary>操作モードがDragの場合に、水平線または垂直線がドラッグされたときに線がリンクされるかどうかを示す値を取得または設定します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.RangeSelector`1">
            <summary></summary>
        </member>
        <member name="M:C1.Web.Mvc.RangeSelector`1.#ctor(C1.Web.Mvc.FlexChartCore{`0})">
            <summary>RangeSelectorクラスの新しいインスタンスを初期化します。</summary>
            <param name="target">FlexChartCoreから派生したターゲットチャート</param>
        </member>
        <member name="P:C1.Web.Mvc.RangeSelector`1.IsVisible">
            <summary>範囲セレクタの表示/非表示を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.RangeSelector`1.Min">
            <summary>範囲の最小値を取得または設定します。</summary>
            <remarks>設定されない場合は、最小値が自動的に計算されます。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.RangeSelector`1.Max">
            <summary>範囲の最大値を取得または設定します。</summary>
            <remarks>設定されない場合は、最大値が自動的に計算されます。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.RangeSelector`1.Orientation">
            <summary>範囲セレクタの方向を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.RangeSelector`1.OnClientRangeChanged">
            <summary>範囲が変更された後に発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.RangeSelector`1.Seamless">
            <summary>最小/最大ハンドラがシームレスに移行するかどうかを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.RangeSelector`1.MinScale">
            <summary>範囲セレクタの最小範囲スケールを取得または設定します。</summary>
            <remarks>最小スケールは0～1です。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.RangeSelector`1.MaxScale">
            <summary>範囲セレクタの最小範囲スケールを取得または設定します。</summary>
            <remarks>最大スケールは0～1です。</remarks>
        </member>
        <member name="T:C1.Web.Mvc.FlexChartCore`1">
            <summary></summary>
        </member>
        <member name="M:C1.Web.Mvc.FlexChartCore`1.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>1つのFlexChartCoreインスタンスを作成します。</summary>
            <param name="helper">HTMLヘルパー</param>
            <param name="selector">セレクタ</param>
        </member>
        <member name="M:C1.Web.Mvc.FlexChartCore`1.ShouldSerializeAxisX">
            <summary>AxisXプロパティをシリアライズするかどうかを指定します。</summary>
            <returns>trueの場合、プロパティはシリアライズされます。
            そうでない場合は、シリアライズされません。</returns>
        </member>
        <member name="M:C1.Web.Mvc.FlexChartCore`1.ShouldSerializeAxisY">
            <summary>AxisYプロパティをシリアライズするかどうかを指定します。</summary>
            <returns>trueの場合、プロパティはシリアライズされます。
            そうでない場合は、シリアライズされません。</returns>
        </member>
        <member name="M:C1.Web.Mvc.FlexChartCore`1.RegisterStartupScript(System.Web.UI.HtmlTextWriter)">
            <summary>ライタにコンポーネントをレンダリングします。</summary>
            <param name="writer">指定されたライタ。</param>
        </member>
        <member name="P:C1.Web.Mvc.FlexChartCore`1.AxisX">
            <summary>主X軸を取得します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexChartCore`1.AxisY">
            <summary>主Y軸を取得します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexChartCore`1.BindingX">
            <summary>Xデータ値を含むプロパティの名前を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexChartCore`1.SymbolSize">
            <summary>すべての系列オブジェクトに使用されるシンボルのサイズを取得または設定します。このプロパティは、各系列のsymbolSizeプロパティで上書きできます。(Seriesクラスを参照)</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexChartCore`1.InterpolateNulls">
            <summary>データのnull値を補間するかどうかを取得または設定します。trueの場合は、隣接するポイントに基づいて、欠けているデータの値が補間されます。falseの場合は、null値のあるポイントで、線や領域に切れ目ができます。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexChartCore`1.LegendToggle">
            <summary>凡例項目をクリックすると、グラフ内の系列の表示/非表示が切り替わるかどうかを示す値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexChartCore`1.Series">
            <summary>系列オブジェクトのコレクションを取得します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexChartCore`1.OnClientSeriesVisibilityChanged">
            <summary>系列の表示/非表示が変更されると発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexChartCore`1.DataLabel">
            <summary>ポイントデータラベルのスタイルを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexChartCore`1.SelectionIndex">
            <summary>選択されたチャート系列のインデックスを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexChartCore`1.PlotAreas">
            <summary>プロットエリアオブジェクトのコレクションを取得します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexChartCore`1.Binding">
            <summary>Y値を含むプロパティの名前を取得または設定します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.CollectionViewService`1">
            <summary>CollectionView を処理するためのコントロール。</summary>
        </member>
        <member name="T:C1.Web.Mvc.ICallbackHandler">
            <summary>コールバック要求を処理するために使用されるインタフェースを定義します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.ICallbackHandler.ProcessCallBack(C1.Web.Mvc.CallbackManager)">
            <summary>コールバックを処理します。</summary>
            <remarks>このメソッドは、現在の要求がコールバックであり、自分自身から発生した場合にのみ呼び出されます。</remarks>
            <param name="cbm">コールバック情報</param>
        </member>
        <member name="M:C1.Web.Mvc.CollectionViewService`1.ShouldSerializeSourceCollection">
            <summary>SourceCollectionプロパティをシリアライズするかどうかを指定します。</summary>
            <returns>trueの場合、プロパティはシリアライズされます。
            そうでない場合は、シリアライズされません。</returns>
        </member>
        <member name="M:C1.Web.Mvc.CollectionViewService`1.ShouldSerializeItems">
            <summary>Itemsプロパティをシリアライズするかどうかを指定します。</summary>
            <returns>trueの場合、プロパティはシリアライズされます。
            そうでない場合は、シリアライズされません。</returns>
        </member>
        <member name="M:C1.Web.Mvc.CollectionViewService`1.Refresh">
            <summary>データを強制的に読み取ります。</summary>
        </member>
        <member name="M:C1.Web.Mvc.CollectionViewService`1.Create(`0)">
            <summary>新しい項目を追加します。</summary>
            <param name="item">追加する項目。</param>
            <returns>追加操作の結果を示す<see cref="T:C1.Web.Mvc.CollectionViewItemResult`1" />。</returns>
        </member>
        <member name="M:C1.Web.Mvc.CollectionViewService`1.Delete(`0)">
            <summary>項目を削除します。</summary>
            <param name="item">削除する項目。</param>
            <returns>削除操作の結果を示す<see cref="T:C1.Web.Mvc.CollectionViewItemResult`1" />。</returns>
        </member>
        <member name="M:C1.Web.Mvc.CollectionViewService`1.Update(`0)">
            <summary>項目を更新します。</summary>
            <param name="item">更新する項目。</param>
            <returns>更新操作の結果を示す<see cref="T:C1.Web.Mvc.CollectionViewItemResult`1" />。</returns>
        </member>
        <member name="M:C1.Web.Mvc.CollectionViewService`1.ProcessCallBack(C1.Web.Mvc.CallbackManager)">
            <summary>クライアント側からのコールバック要求を処理します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewService`1.PageIndex">
            <summary>ページインデックスを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewService`1.PageSize">
            <summary>ページサイズを取得または設定します。０はページングを無効にします。</summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewService`1.SortDescriptions">
            <summary>ソートの説明を取得します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewService`1.GroupDescriptions">
            <summary>グループの説明を取得します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewService`1.ReadActionUrl">
            <summary>読み取りアクションの URL を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewService`1.CreateActionUrl">
            <summary>作成アクションの URL を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewService`1.UpdateActionUrl">
            <summary>更新アクションの URL を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewService`1.DeleteActionUrl">
            <summary>削除アクションの URL を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewService`1.DisableServerRead">
            <summary>サーバー側のソート、ページング、およびフィルタ処理を無効にするかどうかを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewService`1.TotalItemCount">
            <summary>ページングを適用する前の合計項目数を取得します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewService`1.SourceCollection">
            <summary>ソースコレクションを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewService`1.Items">
            <summary>ソート、ページング、およびフィルタ処理を適用した後の項目を取得します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewService`1.Filter">
            <summary>項目をビューに入れるかどうかを判断するために使用されるメソッドを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewService`1.BatchEditActionUrl">
            <summary>一括編集アクションの URL を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewService`1.InitialItemsCount">
            <summary>初期にロードされる項目の数を決定する数値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewService`1.BatchEdit">
            <summary>データを一括編集するかどうかを示すブール値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewService`1.OnClientQueryData">
            <summary>Ajaxクエリーデータを収集するためのJavaScript関数の名前を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewService`1.OnClientQueryComplete">
            <summary>クエリー要求が完了すると発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewService`1.OnClientSourceCollectionChanging">
            <summary>クライアントのsourceCollectionプロパティが変更される前に発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewService`1.OnClientSourceCollectionChanged">
            <summary>クライアントのsourceCollectionプロパティが変更された後に発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewService`1.OnClientError">
            <summary>サーバー側からエラーがあった場合に発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewService`1.OnClientReponseTextParsing">
            <summary>応答テキストの解析時に発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewService`1.OnClientRequestDataStringifying">
            <summary>要求データのシリアライズ時に発生します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.GroupDescription">
            <summary>グループ化条件を定義するタイプの基本クラスを表します。</summary>
            <summary>グループ化条件を定義するタイプの基本クラスを表します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.GroupDescription.ClientClass">
            <summary>クライアント側オブジェクトのクラス名を取得します。</summary>
            <remarks></remarks>
        </member>
        <member name="T:C1.Web.Mvc.AutoComplete`1">
            <summary>AutoComplete コントロールは、ユーザーのキー入力に伴って呼び出し元が項目リストをカスタマイズできるようにする入力コントロールです。</summary>
            <remarks>このコントロールは、項目ソースが静的リストではなく、関数（ItemsSourceFunction）であること以外は ComboBox と同じです。たとえば、ユーザーのキー入力に伴ってリモートデータベース上の項目を検索することができます。</remarks>
        </member>
        <member name="T:C1.Web.Mvc.AutoCompleteBase`1">
            <summary>AutoCompleteとMultiAutoCompleteの基本クラス。</summary>
        </member>
        <member name="T:C1.Web.Mvc.ComboBoxBase`1">
            <summary>ComboBox を使用すると、リストから文字列を選択することができます。このコントロールは、ユーザーのキー入力に伴って自動的にエントリを補完し、利用可能な項目をドロップダウンリストに表示することができます。</summary>
        </member>
        <member name="T:C1.Web.Mvc.DropDown`1">
            <summary>DropDown コントロール（抽象）には、１つの入力要素と、ドロップダウンの表示/非表示に使用されるボタンが含まれます。</summary>
            <remarks>派生クラスでは、_createDropDown メソッドをオーバーライドして、ドロップダウン領域に表示するエディタ（項目のリスト、カレンダー、カラーエディタなど）を作成する必要があります。</remarks>
        </member>
        <member name="T:C1.Web.Mvc.IDropDown">
            <summary>DropDownのインタフェースを定義します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.IDropDown.AutoExpandSelection">
            <summary>コントロールがクリックされたときに、選択範囲を自動的に単語/数字全体に拡張するかどうかを
            示す値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.IDropDown.DropDownCssClass">
            <summary>コントロールのドロップダウン要素に追加するCSSクラス名を取得または設定します。</summary>
            <remarks>このプロパティは、ドロップダウン要素をスタイル設定する場合に便利です。
            ドロップダウン要素は、コントロール自体の子としてではなく、ドキュメントボディの子として表示され、
            親コントロールに基づいてCSSセレクタを使用することができないためです。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.IDropDown.IsAnimated">
            <summary>ドロップダウンを表示するときにコントロールがフェードインアニメーションを使用するかどうかを示す値を
            取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.IDropDown.IsDroppedDown">
            <summary>ドロップダウンが現在表示されているかどうかを示す値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.IDropDown.IsReadOnly">
            <summary>ユーザーがマウスとキーボードを使用してコントロール値を変更できるかどうかを示す値を
            取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.IDropDown.IsRequired">
            <summary>コントロール値が空以外の文字列でなければならないかどうかを示す値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.IDropDown.Placeholder">
            <summary>コントロールが空のときにヒントとして表示される文字列を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.IDropDown.ShowDropDownButton">
            <summary>コントロールにドロップダウンボタンを表示するかどうかを示す値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.IDropDown.Text">
            <summary>コントロールに表示されるテキストを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.IDropDown.OnClientIsDroppedDownChanging">
            <summary>ドロップダウンが表示または非表示になる前に発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.IDropDown.OnClientIsDroppedDownChanged">
            <summary>ドロップダウンが表示または非表示になった後に発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.IDropDown.OnClientTextChanged">
            <summary>Text プロパティの値が変化すると発生します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.DropDown`1.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>１つの DropDown インスタンスを作成します。</summary>
            <param name="helper">HTML ヘルパー</param>
            <param name="selector">セレクタ</param>
        </member>
        <member name="P:C1.Web.Mvc.DropDown`1.Text">
            <summary>コントロールに表示されるテキストを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.DropDown`1.Placeholder">
            <summary>コントロールが空のときにヒントとして表示される文字列を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.DropDown`1.IsDroppedDown">
            <summary>ドロップダウンが現在表示されているかどうかを示す値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.DropDown`1.ShowDropDownButton">
            <summary>コントロールにドロップダウンボタンを表示するかどうかを示す値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.DropDown`1.OnClientTextChanged">
            <summary>Text プロパティの値が変化すると発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.DropDown`1.OnClientIsDroppedDownChanged">
            <summary>ドロップダウンが表示または非表示になった後に発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.DropDown`1.OnClientIsDroppedDownChanging">
            <summary>ドロップダウンが表示または非表示になる前に発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.DropDown`1.AutoExpandSelection">
            <summary>コントロールがクリックされたときに、選択範囲を自動的に単語/数字全体に拡張するかどうかを示す値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.DropDown`1.DropDownCssClass">
            <summary>コントロールのドロップダウン要素に追加するCSSクラス名を取得または設定します。</summary>
            <remarks>このプロパティは、ドロップダウン要素をスタイル設定する場合に便利です。ドロップダウン要素は、コントロール自体の子としてではなく、ドキュメントボディの子として表示され、親コントロールに基づいてCSSセレクタを使用することができないためです。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.DropDown`1.IsReadOnly">
            <summary>ユーザーがマウスとキーボードを使用してコントロールを変更できるかどうかを示す値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.DropDown`1.IsRequired">
            <summary>コントロール値が空以外の文字列でなければならないかどうかを示す値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.DropDown`1.IsAnimated">
            <summary>ドロップダウンを表示するときにコントロールがフェードインアニメーションを使用するかどうかを示す値を取得または設定します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.ComboBoxBase`1.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>１つの ComboBoxBase インスタンスを作成します。</summary>
            <param name="helper">HTML ヘルパー</param>
            <param name="selector">セレクタ</param>
        </member>
        <member name="M:C1.Web.Mvc.ComboBoxBase`1.Render(System.Web.UI.HtmlTextWriter)">
            <summary>ライタにコントロールまたはコールバック結果をレンダリングします。</summary>
            <param name="writer">HTMLライタ。</param>
        </member>
        <member name="P:C1.Web.Mvc.ComboBoxBase`1.DisplayMemberPath">
            <summary>項目のビジュアル表現として使用するプロパティ名を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ComboBoxBase`1.SelectedValuePath">
            <summary>SelectedItem から SelectedValue を取得するために使用されるプロパティ名を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ComboBoxBase`1.IsContentHtml">
            <summary>ドロップダウンリストに項目をプレーンテキストとして表示するか、HTML として表示するかを示す値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ComboBoxBase`1.ItemFormatter">
            <summary>ドロップダウンリストに表示される値をカスタマイズするために使用される関数を取得または設定します。</summary>
            <remarks>この関数は、項目インデックスとデフォルトのテキストまたは HTML を２つの引数として受け取り、表示する新しいテキストまたは HTML を返します。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.ComboBoxBase`1.SelectedIndex">
            <summary>ドロップダウンリストで現在選択されている項目のインデックスを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ComboBoxBase`1.SelectedItem">
            <summary>ドロップダウンリストで現在選択されている項目を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ComboBoxBase`1.SelectedValue">
            <summary>
            Gets or sets the value of the SelectedValue, obtained using the SelectedValuePath.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ComboBoxBase`1.IsEditable">
            <summary>ComboBox の入力要素でテキストの編集を有効または無効にする値を取得または設定します（デフォルトは false）。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ComboBoxBase`1.MaxDropDownHeight">
            <summary>ドロップダウンリストの最大高さを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ComboBoxBase`1.MaxDropDownWidth">
            <summary>ドロップダウンリストの最大幅を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ComboBoxBase`1.ItemTemplateId">
            <summary>各リスト項目の生成に使用されるテンプレートの ID を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ComboBoxBase`1.OnClientSelectedIndexChanged">
            <summary>SelectedIndex プロパティの値が変化すると発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ComboBoxBase`1.ItemTemplateContent">
            <summary>各リスト項目の生成に使用されるテンプレートのコンテンツを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ComboBoxBase`1.HeaderPath">
            <summary>コントロールの入力要素に表示される値を取得するために使用するプロパティ名を取得または設定します。</summary>
            <remarks>このプロパティのデフォルト値はnullです。この場合、コントロールは、ドロップダウンリストの選択項目と同じ内容を入力要素に表示します。入力要素に表示される値をドロップダウンリストに表示される値とは切り離す場合は、このプロパティを使用します。たとえば、入力要素には項目名を表示し、ドロップダウンリストには追加情報を表示することができます。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.ComboBoxBase`1.IsRequired">
            <summary>コントロール値をnull以外の値に設定する必要があるか、それとも（コントロールのコンテンツを削除することで）nullに設定できるかを決定する値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ComboBoxBase`1.Required">
            <summary>コントロール値を null 以外の値に設定する必要があるか、それとも（コントロールのコンテンツを削除することで）null に設定できるかを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ComboBoxBase`1.ValidationAttributes">
            <summary></summary>
        </member>
        <member name="P:C1.Web.Mvc.ComboBoxBase`1.OnClientFormatItem">
            <summary>ドロップダウンリストの項目が作成されると発生するイベント。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ComboBoxBase`1.OnClientItemsSourceChanged">
            <summary>itemsSource プロパティの値が変化すると発生します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.AutoCompleteBase`1.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>1つのAutoCompleteBaseインスタンスを作成します。</summary>
            <param name="helper">HTMLヘルパー</param>
            <param name="selector">セレクタ</param>
        </member>
        <member name="P:C1.Web.Mvc.AutoCompleteBase`1.MinLength">
            <summary>オートコンプリート候補を検索するために必要な入力の最小長さを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.AutoCompleteBase`1.MaxItems">
            <summary>ドロップダウンリストに表示される項目の最大数を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.AutoCompleteBase`1.Delay">
            <summary>キーストロークが発生してから検索が実行されるまでの遅延（ミリ秒単位）を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.AutoCompleteBase`1.CssMatch">
            <summary>
            検索語と一致するすべての部分をコンテンツで強調表示するために使用する CSSクラスの名前を取得または設定します。
            </summary>
            <remarks>
            By default, this property is set to "wj-state-match", which causes the matching terms to be shown in bold. You can set it to the name of a CSS class to change the way the matches are displayed.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.AutoCompleteBase`1.ItemsSourceFunction">
            <summary>ユーザーのキー入力に伴って動的にリスト項目を提供するための関数を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.AutoCompleteBase`1.ItemsSourceAction">
            <summary>データのアクション名を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.AutoCompleteBase`1.SearchMemberPath">
            <summary>項目の検索時に使用するプロパティのカンマ区切りリストを含む文字列を取得または設定します。</summary>
            <remarks>デフォルトでは、AutoCompleteコントロールは、DisplayMemberPathプロパティで指定されるプロパティに対する一致を検索します。searchMemberPathプロパティを使用すると、追加のプロパティを使用して検索を行うことができます。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.AutoCompleteBase`1.IsContentHtml">
            <summary>ドロップダウンリストに項目をプレーンテキストとして表示するか、HTMLとして表示するかを示す値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.AutoCompleteBase`1.IsEditable">
            <summary>コントロールの入力要素でテキストの編集を有効または無効にする値を取得または設定します（デフォルトはtrue）。</summary>
        </member>
        <member name="P:C1.Web.Mvc.AutoCompleteBase`1.IsRequired">
            <summary>コントロール値をnull以外の値に設定する必要があるか、それとも（コントロールのコンテンツを削除することで）nullに設定できるかを決定する値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.AutoCompleteBase`1.Name">
            <summary>コントロール要素の名前を取得または設定します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.AutoComplete`1.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>１つの AutoComplete インスタンスを作成します。</summary>
            <param name="helper">HTML ヘルパー</param>
            <param name="selector">セレクタ</param>
        </member>
        <member name="T:C1.Web.Mvc.BulletGraph">
            <summary>BulletGraph は直線型ゲージの一種で、特にダッシュボードで使用することを意図して設計されています。</summary>
        </member>
        <member name="T:C1.Web.Mvc.LinearGaugeBase">
            <summary>LinearGauge には、直線型の目盛りとインジケータが表示されます</summary>
        </member>
        <member name="T:C1.Web.Mvc.Gauge">
            <summary>基本 Gauge コントロール。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Gauge.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>１つの Gauge インスタンスを作成します。</summary>
            <param name="helper">HTML ヘルパー</param>
            <param name="selector">セレクタ</param>
        </member>
        <member name="P:C1.Web.Mvc.Gauge.Face">
            <summary>ゲージの全体的なジオメトリおよび外観を表すために使用される範囲を取得します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Gauge.Pointer">
            <summary>ゲージの現在の値を表すために使用される範囲を取得します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Gauge.ShowText">
            <summary>ゲージにどの値をテキストとして表示するかを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Gauge.ShowRanges">
            <summary>範囲プロパティに含まれる範囲をゲージに表示するかどうかを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Gauge.HasShadow">
            <summary>ゲージに影の効果を表示するかどうかを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Gauge.IsAnimated">
            <summary>ゲージに値の変化をアニメーション表示するかどうかを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Gauge.Step">
            <summary>ユーザーが矢印キーを押したときに値プロパティに加算または減算する量を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Gauge.Thickness">
            <summary>０～１のスケールでゲージの太さを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Gauge.Value">
            <summary>ゲージに表示される値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Gauge.OnClientValueChanged">
            <summary>ゲージに表示される値が変化すると発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Gauge.Format">
            <summary>ゲージ値をテキストとして表示するために使用される書式文字列を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Gauge.IsReadOnly">
            <summary>ユーザーがマウスとキーボードを使用して値を編集できるかどうかを示す値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Gauge.Min">
            <summary>ゲージに表示できる最小値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Gauge.Max">
            <summary>ゲージに表示できる最大値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Gauge.Ranges">
            <summary>このゲージの範囲のコレクションを取得します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Gauge.Origin">
            <summary>範囲の描画に使用される開始点を取得または設定します。</summary>
            <remarks>デフォルトでは、このプロパティはnullに設定されています。この場合、値の範囲はゲージの最小値から始まるか、最小値がゼロより小さい場合はゼロから始まります。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.Gauge.ThumbSize">
            <summary>ゲージの現在の値を表示する要素のサイズを取得または設定します（ピクセル単位）。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Gauge.ShowTicks">
            <summary>ゲージで、各ステップ値に目盛りマークを表示するかどうかを決定するプロパティを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Gauge.GetText">
            <summary>ゲージ値の表示に使用されるカスタマイズされた文字列を返すコールバックを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Gauge.TickSpacing">
            <summary>目盛りマークのスペーシングを取得または設定します。</summary>
            <remarks>ゲージの表面に沿って目盛りマークを表示する場合は、ShowTicksプロパティをtrueに設定します。デフォルトでは、目盛りマークの間隔はStepプロパティで定義されます。このデフォルトを無効にしてStep値とは異なるスペーシングを使用するには、TickSpacingプロパティを使用します。TickSpacingプロパティをnullに設定すると、デフォルトの動作に戻ります。</remarks>
        </member>
        <member name="M:C1.Web.Mvc.LinearGaugeBase.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>１つの LinearGaugeBase インスタンスを作成します。</summary>
            <param name="helper">HTML ヘルパー</param>
            <param name="selector">セレクタ</param>
        </member>
        <member name="P:C1.Web.Mvc.LinearGaugeBase.Direction">
            <summary>ゲージが塗りつぶされていく方向を取得または設定します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.BulletGraph.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>１つの BulletGraph インスタンスを作成します。</summary>
            <param name="helper">HTML ヘルパー</param>
            <param name="selector">セレクタ</param>
        </member>
        <member name="P:C1.Web.Mvc.BulletGraph.Bad">
            <summary>不良と見なされる評価の基準値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.BulletGraph.Good">
            <summary></summary>
        </member>
        <member name="P:C1.Web.Mvc.BulletGraph.Target">
            <summary>評価のデフォルト値を取得または設定します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Calendar">
            <summary>Calendar コントロールには月間カレンダーを表示され、ユーザーはここから日付を選択することができます。</summary>
        </member>
        <member name="T:C1.Web.Mvc.InputBase">
            <summary>すべての入力コントロールの基本クラス。</summary>
        </member>
        <member name="M:C1.Web.Mvc.InputBase.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>１つの InputBase インスタンスを作成します。</summary>
            <param name="helper">HTML ヘルパー</param>
            <param name="selector">セレクタ</param>
        </member>
        <member name="M:C1.Web.Mvc.Calendar.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>１つの Calendar インスタンスを作成します。</summary>
            <param name="helper">HTML ヘルパー</param>
            <param name="selector">セレクタ</param>
        </member>
        <member name="P:C1.Web.Mvc.Calendar.Value">
            <summary>現在選択されている日付を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Calendar.Min">
            <summary>ユーザーがカレンダーで選択できる最早日を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Calendar.Max">
            <summary>ユーザーがカレンダーで選択できる最遅日を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Calendar.FirstDayOfWeek">
            <summary>週の最初の曜日（カレンダーの最初の列に表示される曜日）を取得または設定します。</summary>
            <remarks>このプロパティを null に設定すると、カレンダーで現在のカルチャのデフォルトが使用されます。英語カルチャでは、週の最初の曜日は日曜日です。ほとんどのヨーロッパカルチャでは、週の最初の曜日は月曜日です。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.Calendar.DisplayMonth">
            <summary>カレンダーに表示される月を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Calendar.ShowHeader">
            <summary>コントロールに現在の月およびナビゲーションボタンを含むヘッダー領域を表示するかどうかを示す値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Calendar.MonthView">
            <summary>カレンダーに１か月を表示するか、１年を表示するかを示す値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Calendar.ItemFormatter">
            <summary>カレンダーの日付をカスタマイズするための書式設定関数を取得または設定します。</summary>
            <remarks>この書式設定関数は、任意のコンテンツおよび任意の日付を追加できます。この関数を使用して、カレンダーの外観および動作を完全にカスタマイズできます。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.Calendar.OnClientValueChanged">
            <summary>新しい日付が選択されると発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Calendar.OnClientDisplayMonthChanged">
            <summary>DisplayMonth プロパティが変更された後に発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Calendar.ItemValidator">
            <summary>日付が選択の対象になるかどうかを決定するjavascriptのvalidator関数の名前を取得または設定します。</summary>
            <remarks>指定された場合、validator関数はテストされる日付を表す1つのパラメータを取り、日付が無効で選択できない場合にfalseを返す必要があります。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.Calendar.OnClientFormatItem">
            <summary>カレンダーの日付を表す要素が作成されたときに発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Calendar.IsReadOnly">
            <summary>ユーザーがマウスとキーボードを使用してコントロールを変更できるかどうかを示す値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Calendar.SelectionMode">
            <summary>ユーザーが日または月を選択できるか、何も値を選択できないかを示す値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Calendar.FormatDayHeaders">
            <summary>月ビューの曜日の上にヘッダーを表示するために使用される書式を取得または設定します。</summary>
            <remarks>このプロパティのデフォルト値は'ddd'です。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.Calendar.FormatDays">
            <summary>月ビューに曜日を表示するために使用される書式を取得または設定します。</summary>
            <remarks>このプロパティのデフォルト値は'd 'です。'd'の後のスペースは、この書式が、短い日付パターンを表す標準の書式'd'と解釈されないようにします。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.Calendar.FormatMonths">
            <summary>年ビューに月を表示するために使用される書式を取得または設定します。</summary>
            <remarks>このプロパティのデフォルト値は'MMM'です。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.Calendar.FormatYear">
            <summary>年ビューの月の上に年を表示するために使用される書式を取得または設定します。</summary>
            <remarks>このプロパティのデフォルト値は'yyyy'です。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.Calendar.FormatYearMonth">
            <summary>月ビューのカレンダーの上に月と年を表示するために使用される書式を取得または設定します。</summary>
            <remarks>このプロパティのデフォルト値は'y'です。</remarks>
        </member>
        <member name="T:C1.Web.Mvc.ColorPicker">
            <summary>ColorPicker コントロールを使用すると、色チャンネル（色相、彩度、明度、アルファ）を調整するためのパネルをクリックして、色を選択できます。</summary>
        </member>
        <member name="M:C1.Web.Mvc.ColorPicker.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>１つの ColorPicker インスタンスを作成します。</summary>
            <param name="helper">HTML ヘルパー</param>
            <param name="selector">セレクタ</param>
        </member>
        <member name="P:C1.Web.Mvc.ColorPicker.ShowAlphaChannel">
            <summary>ColorPicker でユーザーが色のアルファチャンネル（透過性）を編集できるかどうかを示す値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ColorPicker.ShowColorString">
            <summary>ColorPicker に現在の色の文字列表現を表示するかどうかを示す値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ColorPicker.OnClientValueChanged">
            <summary>新しい色が選択されると発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ColorPicker.Value">
            <summary>現在選択されている色を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ColorPicker.Palette">
            <summary>パレット内の色を保持する配列を取得または設定します。</summary>
            <remarks>パレットには、10 個の文字列の配列で表される 10 個の色が含まれます。通常、最初の２つの色は白と黒です。</remarks>
        </member>
        <member name="T:C1.Web.Mvc.ComboBox`1">
            <summary>ComboBox を使用すると、リストから文字列を選択することができます。このコントロールは、ユーザーのキー入力に伴って自動的にエントリを補完し、利用可能な項目をドロップダウンリストに表示することができます。</summary>
        </member>
        <member name="M:C1.Web.Mvc.ComboBox`1.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>１つの ComboBox インスタンスを作成します。</summary>
            <param name="helper">HTML ヘルパー</param>
            <param name="selector">セレクタ</param>
        </member>
        <member name="M:C1.Web.Mvc.ComboBox`1.Render(System.Web.UI.HtmlTextWriter)">
            <summary>ライタにコントロールまたはコールバック結果をレンダリングします。</summary>
            <param name="writer">HTMLライタ。</param>
        </member>
        <member name="P:C1.Web.Mvc.ComboBox`1.Name">
            <summary>ComboBoxコントロールの名前を取得または設定します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.DropDown">
            <summary>DropDown コントロール（抽象）には、１つの入力要素と、ドロップダウンの表示/非表示に使用されるボタンが含まれます。</summary>
            <remarks>派生クラスでは、_createDropDown メソッドをオーバーライドして、ドロップダウン領域に表示するエディタ（項目のリスト、カレンダー、カラーエディタなど）を作成する必要があります。</remarks>
        </member>
        <member name="T:C1.Web.Mvc.FormInputBase">
            <summary>すべてのフォーム入力コントロールの基本クラス。</summary>
        </member>
        <member name="M:C1.Web.Mvc.FormInputBase.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>１つの FormInputBase インスタンスを作成します。</summary>
            <param name="helper">HTML ヘルパー</param>
            <param name="selector">セレクタ</param>
        </member>
        <member name="P:C1.Web.Mvc.FormInputBase.ValidationAttributes">
            <summary></summary>
        </member>
        <member name="P:C1.Web.Mvc.FormInputBase.Name">
            <summary>フォーム入力コントロールの名前を取得または設定します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.DropDown.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>１つの DropDown インスタンスを作成します。</summary>
            <param name="helper">HTML ヘルパー</param>
            <param name="selector">セレクタ</param>
        </member>
        <member name="P:C1.Web.Mvc.DropDown.Text">
            <summary>コントロールに表示されるテキストを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.DropDown.Placeholder">
            <summary>コントロールが空のときにヒントとして表示される文字列を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.DropDown.IsDroppedDown">
            <summary>ドロップダウンが現在表示されているかどうかを示す値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.DropDown.ShowDropDownButton">
            <summary>コントロールにドロップダウンボタンを表示するかどうかを示す値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.DropDown.OnClientTextChanged">
            <summary>Text プロパティの値が変化すると発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.DropDown.OnClientIsDroppedDownChanged">
            <summary>ドロップダウンが表示または非表示になった後に発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.DropDown.OnClientIsDroppedDownChanging">
            <summary>ドロップダウンが表示または非表示になる前に発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.DropDown.AutoExpandSelection">
            <summary>コントロールがクリックされたときに、選択範囲を自動的に単語/数字全体に拡張するかどうかを示す値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.DropDown.DropDownCssClass">
            <summary>コントロールのドロップダウン要素に追加するCSSクラス名を取得または設定します。</summary>
            <remarks>このプロパティは、ドロップダウン要素をスタイル設定する場合に便利です。ドロップダウン要素は、コントロール自体の子としてではなく、ドキュメントボディの子として表示され、親コントロールに基づいてCSSセレクタを使用することができないためです。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.DropDown.IsRequired">
            <summary>コントロール値が空以外の文字列でなければならないかどうかを示す値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.DropDown.IsAnimated">
            <summary>ドロップダウンを表示するときにコントロールがフェードインアニメーションを使用するかどうかを示す値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.DropDown.IsReadOnly">
            <summary>ユーザーがマウスとキーボードを使用してコントロールを変更できるかどうかを示す値を取得または設定します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.FlexChart`1">
            <summary>FlexChartコントロールは、データを視覚化する強力で柔軟な方法を提供します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.FlexChart`1.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>１つの FlexChart インスタンスを作成します。</summary>
            <param name="helper">HTML ヘルパー</param>
            <param name="selector">セレクタ</param>
        </member>
        <member name="M:C1.Web.Mvc.FlexChart`1.ShouldSerializeOptions">
            <summary>Optionsプロパティをシリアライズするかどうかを指定します。</summary>
            <returns>trueの場合、プロパティはシリアライズされます。
            そうでない場合は、シリアライズされません。</returns>
        </member>
        <member name="P:C1.Web.Mvc.FlexChart`1.ChartType">
            <summary>作成するチャートのタイプを取得または設定します</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexChart`1.Stacking">
            <summary>系列オブジェクトを積み重ねるかどうかと、積み重ねる場合はその方法を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexChart`1.Rotated">
            <summary>X が垂直、Y が水平になるように軸を反転するかどうかを示す値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexChart`1.Options">
            <summary>さまざまなチャートオプションを取得または設定します。サポートされているオプションは、bubbleMaxSize、bubbleMinSize、groupWidth です。</summary>
        </member>
        <member name="T:C1.Web.Mvc.FlexGrid`1">
            <summary>FlexGrid コントロールは、データを表形式で表示および編集する強力で柔軟な方法を提供します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.FlexGridBase`1">
            <summary>FlexGridコントロールは、データを表形式で表示および編集する強力で柔軟な方法を提供します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.FlexGridBase`1.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>1つのFlexGridBaseインスタンスを作成します。</summary>
            <param name="helper">HTMLヘルパー</param>
            <param name="selector">セレクタ</param>
        </member>
        <member name="M:C1.Web.Mvc.FlexGridBase`1.ShouldSerializeSelection">
            <summary>Selectionプロパティをシリアライズするかどうかを指定します。</summary>
            <returns>trueの場合、プロパティはシリアライズされます。
            そうでない場合は、シリアライズされません。</returns>
        </member>
        <member name="M:C1.Web.Mvc.FlexGridBase`1.ShouldSerializeColumnLayout">
            <summary>ColumnLayoutプロパティをシリアライズするかどうかを指定します。</summary>
            <returns>trueの場合、プロパティはシリアライズされます。
            そうでない場合は、シリアライズされません。</returns>
        </member>
        <member name="M:C1.Web.Mvc.FlexGridBase`1.GetFlatColumns">
            <summary>グリッド内のすべての列を取得します。</summary>
            <returns>列のコレクション。</returns>
        </member>
        <member name="M:C1.Web.Mvc.FlexGridBase`1.RegisterStartupScript(System.Web.UI.HtmlTextWriter)">
            <summary>エクステンダ起動スクリプトをレンダリングするためにオーバーライドされます。</summary>
            <param name="writer">指定されたライタ</param>
        </member>
        <member name="M:C1.Web.Mvc.FlexGridBase`1.GetColumn(C1.Web.Mvc.ColumnInfo)">
            <summary>指定された情報に基づいて列を取得します。</summary>
            <param name="columnInfo">列情報。</param>
            <returns>指定された列情報と一致する列。</returns>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.AllowAddNew">
            <summary>ユーザーがソースコレクションに項目を追加できるように、グリッドに新しい行テンプレートを用意するかどうかを示す値を取得または設定します。</summary>
            <remarks>IsReadOnlyプロパティがtrueに設定されている場合、新しい行テンプレートは表示されません。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.AllowDelete">
            <summary>ユーザーが［Delete］キーを押すと、グリッドで選択されている行が削除されるかどうかを示す値を取得または設定します。</summary>
            <remarks>IsReadOnlyプロパティがtrueに設定されている場合、選択されている行は削除されません。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.AllowDragging">
            <summary>ユーザーがマウスを使用して行、列、またはその両方をドラッグできるかどうかを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.AllowMerging">
            <summary>グリッドのどの部分がセル結合を提供するかを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.AllowResizing">
            <summary>ユーザーがマウスを使用して行、列、またはその両方をサイズ変更できるかどうかを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.AllowSorting">
            <summary>ユーザーが列ヘッダーセルをクリックして列をソートできるかどうかを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.AutoClipboard">
            <summary>グリッドがクリップボードショートカットを処理するかどうかを取得または設定します。</summary>
            <remarks>クリップボードコマンドには、グリッドの選択範囲をクリップボードにコピーするCtrl+CとCtrl+Ins、クリップボードテキストをグリッドの選択範囲に貼り付けるCtrl+VとShift+Insがあります。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.AutoGenerateColumns">
            <summary>グリッドがitemsSourceに基づいて自動的に列を生成するかどうかを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.AutoSizeMode">
            <summary>行または列を自動サイズ変更する際にどのセルを考慮するかを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.ChildItemsPath">
            <summary>階層グリッドで子の行の生成に使用されるプロパティの名前を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.FrozenColumns">
            <summary>固定列の数を取得または設定します。</summary>
            <remarks>固定列はスクロールしませんが、固定列に含まれるセルを選択および編集することはできます。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.FrozenRows">
            <summary>固定列の数を取得または設定します。</summary>
            <remarks>固定列はスクロールしませんが、固定列に含まれるセルを選択および編集することはできます。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.GroupHeaderFormat">
            <summary>グループヘッダーコンテンツを作成するために使用される書式文字列を取得または設定します。</summary>
            <remarks>この文字列は、任意のテキストと次の置換文字列を含むことができます。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.HeadersVisibility">
            <summary>行ヘッダーと列ヘッダーを表示するかどうかを決定する値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.IsReadOnly">
            <summary>ユーザーがキー入力によってグリッドセルを編集できるかどうかを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.SelectionMode">
            <summary>現在の選択モードを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.ShowGroups">
            <summary>データグループを区切るためにグリッドにグループ行を挿入するかどうかを取得または設定します。</summary>
            <remarks>データグループは、グリッドのitemsSourceとして使用されるICollectionViewオブジェクトのgroupDescriptionsプロパティを変更することで作成されます。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.ShowSort">
            <summary>グリッドの列ヘッダーにソートインジケータを表示するかどうかを取得または設定します。</summary>
            <remarks>ソートは、グリッドのitemsSourceとして使用されるICollectionViewオブジェクトのsortDescriptionsプロパティによって制御されます。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.TreeIndent">
            <summary>異なるレベルの行グループをオフセットするために使用されるインデントを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientAutoSizedColumn">
            <summary>ユーザーが列ヘッダーセルの右端をダブルクリックして列を自動サイズ変更した後に発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientAutoSizedRow">
            <summary>ユーザーが行ヘッダーセルの下端をダブルクリックして行を自動サイズ変更した後に発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientAutoSizingColumn">
            <summary>ユーザーが列ヘッダーセルの右端をダブルクリックして列を自動サイズ変更する前に発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientAutoSizingRow">
            <summary>ユーザーが行ヘッダーセルの下端をダブルクリックして行を自動サイズ変更する前に発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientBeginningEdit">
            <summary>セルが編集モードに入る前に発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientCellEditEnded">
            <summary>セル編集がコミットまたはキャンセルされたときに発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientCellEditEnding">
            <summary>セル編集の終了中に発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientCopied">
            <summary>ユーザーがクリップボードショートカットキーの1つを押して、クリップボードに選択コンテンツをコピーした後に発生します（autoClipboardプロパティを参照）。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientCopying">
            <summary>ユーザーがクリップボードショートカットキーの1つを押して、クリップボードに選択コンテンツをコピーするときに発生します（autoClipboardプロパティを参照）。</summary>
            <remarks>このイベントハンドラで、コピー操作をキャンセルできます。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientDeletedRow">
            <summary>ユーザーが［Del］キーを押して行を削除した後に発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientDeletingRow">
            <summary>ユーザーが［Delete］キーを押して、選択されている行を削除するときに発生します（allowDeleteプロパティを参照）。</summary>
            <remarks>このイベントハンドラで、行の削除をキャンセルできます。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientDraggedColumn">
            <summary>ユーザーが列のドラッグを終了したときに発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientDraggedRow">
            <summary>ユーザーが行のドラッグを終了したときに発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientDraggingColumn">
            <summary>ユーザーが列のドラッグを開始したときに発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientDraggingRow">
            <summary>ユーザーが行のドラッグを開始したときに発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientFormatItem">
            <summary>セルを表す要素が作成されたときに発生します。</summary>
            <remarks>このイベントを使用して、表示するセルを書式設定できます。目的はitemFormatterプロパティと同じですが、独立したハンドラを複数使用できるという利点があります。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientGroupCollapsedChanged">
            <summary>グループが展開または折りたたまれた後に発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientGroupCollapsedChanging">
            <summary>グループが展開または折りたたまれるときに発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientItemsSourceChanged">
            <summary>グリッドが新しい項目ソースに連結された後に発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientLoadedRows">
            <summary>グリッド行がデータソースに連結された後に発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientLoadingRows">
            <summary>グリッド行がデータソースに連結される前に発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientPasted">
            <summary>ユーザーがクリップボードショートカットキーの1つを押して、クリップボードからコンテンツを貼り付けた後に発生します（autoClipboardプロパティを参照）。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientPasting">
            <summary>ユーザーがクリップボードショートカットキーの1つを押して、クリップボードからコンテンツを貼り付けるときに発生します（autoClipboardプロパティを参照）。</summary>
            <remarks>このイベントハンドラで、コピー操作をキャンセルできます。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientPrepareCellForEdit">
            <summary>エディタセルが作成されてからアクティブになる前に発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientResizedColumn">
            <summary>ユーザーが列のサイズ変更を終了すると発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientResizedRow">
            <summary>ユーザーが行のサイズ変更を終了すると発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientResizingColumn">
            <summary>列がサイズ変更されるときに発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientResizingRow">
            <summary>行がサイズ変更されるときに発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientRowAdded">
            <summary>ユーザーが新しい行テンプレートを編集して新しい項目を作成するときに発生します（allowAddNewプロパティを参照）。</summary>
            <remarks>このイベントハンドラで、新しい項目のコンテンツをカスタマイズしたり、新しい項目の作成をキャンセルできます。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientRowEditEnded">
            <summary>行の編集がコミットまたはキャンセルされたときに発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientRowEditEnding">
            <summary>行の編集が終了し、変更がコミットまたはキャンセルされる前に発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientScrollPositionChanged">
            <summary>コントロールがスクロールされた後に発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientSelectionChanged">
            <summary>選択範囲が変更された後に発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientSelectionChanging">
            <summary>選択範囲が変更される前に発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientSortedColumn">
            <summary>ユーザーが列ヘッダーをクリックしてソートを適用した後に発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientSortingColumn">
            <summary>ユーザーが列ヘッダーをクリックしてソートを適用する前に発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientUpdatedLayout">
            <summary>グリッドで内部レイアウトが更新された後に発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientUpdatingLayout">
            <summary>グリッドで内部レイアウトが更新される前に発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientUpdatedView">
            <summary>現在のビューを構成する要素の作成/更新をグリッドが終了したときに発生します。</summary>
            <remarks>グリッドのビューは、以下のアクションが実行されたときに更新されます。<ul><li>グリッドまたはそのデータソースが更新されたとき。</li><li>行または列が追加、削除、または変更されたとき。</li><li>グリッドのサイズが変更されるか、グリッドがスクロールされたとき。</li><li>選択範囲が変更されたとき。</li></ul></remarks>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientUpdatingView">
            <summary>現在のビューを構成する要素の作成/更新をグリッドが開始したときに発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.ItemFormatter">
            <summary>このグリッドのセルをカスタマイズするために使用される書式設定関数を取得または設定します。</summary>
            <remarks>この書式設定関数は、任意のセルに任意のコンテンツを追加できます。グリッドセルの外観および動作に対して完全な柔軟性が提供されます。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.Selection">
            <summary>現在の選択範囲を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.Columns">
            <summary>グリッドの列コレクションを取得します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.RowHeadersTemplate">
            <summary>行ヘッダーセルに適用されるテンプレートを取得します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.ColumnHeadersTemplate">
            <summary>列ヘッダーセルに適用されるテンプレートを取得します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.CellsTemplate">
            <summary>コンテンツセルのテンプレートを取得します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.TopLeftCellsTemplate">
            <summary>左上のセルのテンプレートを取得します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.DeferResizing">
            <summary>行および列のサイズ変更を遅延するかどうかを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.SortRowIndex">
            <summary>現在のソートを表示および変更する列ヘッダーパネル内の行のインデックスを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.ColumnLayout">
            <summary>現在の列レイアウトを定義するJSON文字列を取得または設定します。列レイアウト文字列は、列とそのプロパティを持つ配列を表します。これを使用して、ユーザーによって定義された列のレイアウトを保存し、セッションをまたいでレイアウトを維持できます。また、ユーザーが列のレイアウトを変更できるようなアプリケーションで、元に戻す/やり直し機能を実装するためにこのプロパティを使用することもできます。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.ShowMarquee">
            <summary>グリッドの現在の選択範囲の周囲にマーキー要素を表示するかどうかを示す値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.ShowSelectedHeaders">
            <summary>選択したヘッダーセルの表示にクラス名を追加するかどうかを示す値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.StickyHeaders">
            <summary>ユーザーがウィンドウをスクロールしたときに列ヘッダーを残すかどうかを指定する値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.ImeEnabled">
            <summary>編集モードでないときに、グリッドがIME（Input Method Editor）をサポートするかどうかを決定する値を取得または設定します。</summary>
            <remarks>このプロパティは、日本語、中国語、韓国語など、IMEサポートを必要とする言語のサイト/アプリケーションにのみ関係します。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.PreserveOutlineState">
            <summary>データがリフレッシュされたときに、グリッドがノードの展開/折りたたみ状態を保持するかどうかを決定する値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.PreserveSelectedState">
            <summary>データがリフレッシュされたときに、グリッドが行の選択状態を保持するかどうかを決定する値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.ShowColumnFooters">
            <summary>列フッターパネルに集計を表示するグループ行を表示するかどうかを示すブール値を取得または設定します。</summary>
            <remarks>列フッターの集計値は、ItemsSourceのDisableServerReadプロパティがtrueの場合にのみ機能します。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.ColumnFootersRowHeaderText">
            <summary>列フッターパネル内のグループ行ヘッダーのテキストを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.ShowErrors">
            <summary>グリッドで、検証エラーがあるセルとエラーの説明を含むツールチップに'wj-state-invalid'クラスを追加するかどうかを決定する値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.ValidateEdits">
            <summary>検証に失敗した編集をユーザーがコミットしようとしたときに、グリッドを編集モードのままにするかどうかを決定する値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientRowEditStarted">
            <summary>行が編集モードに入った後に発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientRowEditStarting">
            <summary>行が編集モードに入る前に発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.NewRowAtTop">
            <summary>新しい行テンプレートをグリッドの上部に配置するか、下部に配置するかを示す値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientDraggingColumnOver">
            <summary>ユーザーが列を別の位置にドラッグするときに発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientDraggingRowOver">
            <summary>ユーザーが行を別の位置にドラッグするときに発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientPastedCell">
            <summary>コンテンツをクリップボードからセルに貼り付けた後に発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientPastingCell">
            <summary>コンテンツをクリップボードからセルに貼り付けるときに発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.ShowAlternatingRows">
            <summary>グリッドで交互表示行のセルに'wj-alt'クラスを追加するかどうかを決定する値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.ColumnFootersTemplate">
            <summary>列フッターセルに適用されるテンプレートを取得します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.BottomLeftCellsTemplate">
            <summary>左下のセルに適用されるテンプレートを取得します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.ScrollPosition">
            <summary>グリッドのスクロールバーの位置を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.CloneFrozenCells">
            <summary>スクロール中にFlexGridの体感的なパフォーマンスを向上させるために、固定されたセルを複製して個別の要素に表示するかどうかを決定する値を取得または設定します。</summary>
            <remarks>デフォルトでは、このプロパティはnullに設定されます。この場合、グリッドは、ブラウザに応じた最適な設定を選択します。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.ItemValidator">
            <summary>セルに有効な値が含まれるかどうかを決定するための検証関数を取得または設定します。</summary>
            <remarks>検証関数を指定する場合、その検証関数は、セルの行と列のインデックスを保持する2つのパラメータを受け取り、エラーの説明文字列を返す必要があります。連結グリッドでは代わりに<see cref="P:C1.Web.Mvc.CollectionViewService`1.GetError" />プロパティを使用して検証を実行できるため、このプロパティは、非連結グリッドを使用する場合に特に便利です。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.KeyActionEnter">
            <summary>［Enter］キーが押されたときに実行するアクションを取得または設定します。</summary>
            <remarks>このプロパティのデフォルトの設定は<see cref="F:C1.Web.Mvc.Grid.KeyAction.MoveDown" />です。この場合は、コントロールの選択が次の行に移動します。これは、Excelの標準の動作です。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.KeyActionTab">
            <summary>
            ［Tab］キーが押されたときに実行されるアクションを取得または設定します。
            </summary>
            <remarks>
            The default setting for this property is <see cref="F:C1.Web.Mvc.Grid.KeyAction.None" />, which causes the browser to select the next or previous controls on the page when the TAB key is pressed. This is the recommended setting to improve page accessibility.  In previous versions, the default was set to <see cref="F:C1.Web.Mvc.Grid.KeyAction.Cycle" />, which caused the control to move the selection across and down he grid. This is the standard Excel behavior, but is not good for accessibility.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.RowHeaderPath">
            <summary>行ヘッダーセルの作成に使用されるプロパティの名前を取得または設定します。</summary>
            <remarks>行ヘッダーセルは非表示で、選択できません。これはアクセシビリティツールとして使用されます。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.QuickAutoSize">
            <summary>列を自動サイズ変更する際に、精度よりパフォーマンスを優先して最適化を行うかどうかを決定する値を取得または設定します。</summary>
            <remarks>このプロパティを false に設定すると、クイック自動サイズ変更が無効になります。このプロパティを true に設定すると、各列の QuickAutoSize プロパティの値に従って、この機能が有効になります。このプロパティを null（デフォルト値）に設定すると、カスタム itemFormatter またはハンドラが formatItem イベントにアタッチされていないグリッドでは、この機能が有効になります。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.ShowDropDown">
            <summary>ShowDropDown プロパティが true に設定されている列のセルにドロップダウンボタンを追加するかどうかを示す値を取得または設定します。</summary>
            <remarks>ドロップダウンボタンは、DataMap が設定された編集可能な列にのみ表示されます。ユーザーがドロップダウンボタンをクリックすると、セルの値を選択するために使用できるリストがグリッドに表示されます。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.VirtualizationThreshold">
            <summary>仮想化を有効にするために必要な最小の行数を取得または設定します。</summary>
            <remarks>このプロパティはデフォルトで 0 に設定されています。つまり、仮想化は常に有効です。これで、連結のパフォーマンスが向上し、メモリ要件を抑えることができますが、スクロール中のパフォーマンスが少し低下します。グリッドの行数が少ない場合は（約 50 ～ 100）、このプロパティに少し大きな値（150 など）を設定することで、スクロールのパフォーマンスを向上させることができます。こうすると、仮想化が無効になり、連結の速度は低下しますが、スクロールの体感的なパフォーマンスは向上します。このプロパティを 200 より大きな値に設定することはお勧めできません。ロード時間が長くなり、すべての行のセルを作成するまで、グリッドが数秒間停止します。また、ページに大量の要素が含まれるため、ブラウザの動作が遅くなります。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.Extenders">
            <summary>エクステンダコレクションを取得します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.SortDescriptions">
            <summary>ソート記述を取得します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.GroupDescriptions">
            <summary>グループ記述を取得します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.ValidationAttributesMap">
            <summary>検証属性のマップを取得します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.PageSize">
            <summary>指定されたページサイズで ItemsSource をページング可能にします。0 を指定すると、ページングが無効になります。</summary>
        </member>
        <member name="M:C1.Web.Mvc.FlexGrid`1.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>１つの FlexGrid インスタンスを作成します。</summary>
            <param name="helper">HTML ヘルパー</param>
            <param name="selector">セレクタ</param>
        </member>
        <member name="T:C1.Web.Mvc.FlexGridDetailProvider`1">
            <summary>FlexGridDetailProviderを設定するために使用されるエクステンダを定義します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.FlexGridDetailProvider`1.#ctor(C1.Web.Mvc.FlexGridBase{`0})">
            <summary>FlexGridDetailProviderクラスの新しいインスタンスを初期化します。</summary>
            <param name="grid">FlexGridDetailProviderエクステンダを所有するグリッド。</param>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridDetailProvider`1.CreateDetailCell">
            <summary>詳細セルを作成するためのコールバック関数を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridDetailProvider`1.DetailVisibilityMode">
            <summary>行詳細がいつどのように表示されるかを指定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridDetailProvider`1.MaxHeight">
            <summary>詳細行の最大高さをピクセル単位で取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridDetailProvider`1.RowHasDetail">
            <summary>行に詳細があるかどうかを判定するためのコールバック関数を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridDetailProvider`1.DetailRowTemplateId">
            <summary>グリッド詳細行のテンプレートのIDを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridDetailProvider`1.DetailRowTemplateContent">
            <summary>グリッド詳細行のテンプレートのコンテンツを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridDetailProvider`1.DisposeDetailCell">
            <summary>詳細セルを破棄するためのコールバック関数を取得または設定します。</summary>
            <remarks>callback関数はパラメータとしてRowを取り、詳細セルに関連付けられているすべてのリソースを破棄します。この関数はオプションです。createDetailCell関数によって割り当てられるリソースが自動的にガベージコレクトされない場合に使用してください。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridDetailProvider`1.IsAnimated">
            <summary>行の詳細を表示するときにアニメーションを使用するかどうかを示す値を取得または設定します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.FlexGridFilter`1">
            <summary>FlexGrid フィルタを設定するために使用されるエクステンダを定義します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.FlexGridFilter`1.#ctor(C1.Web.Mvc.FlexGridBase{`0})">
            <summary>FlexGridFilterクラスの新しいインスタンスを初期化します。</summary>
            <param name="grid">フィルタを所有するグリッド。</param>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridFilter`1.ShowFilterIcons">
            <summary>FlexGridFilter がグリッドの列ヘッダーにフィルタ編集ボタンを追加するかどうかを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridFilter`1.DefaultFilterType">
            <summary>使用するデフォルトのフィルタタイプを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridFilter`1.ColumnFilterTypes">
            <summary>指定された列のFilterTypeを示す辞書を取得します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridFilter`1.FilterColumns">
            <summary>フィルタを持つ列の名前または連結を保持する配列を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridFilter`1.ShowSortButtons">
            <summary>フィルタエディタにソートボタンを入れるかどうかを示す値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridFilter`1.OnClientFilterChanging">
            <summary>ユーザーが列フィルタを編集しようとしたときに発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridFilter`1.OnClientFilterChanged">
            <summary>ユーザーが列フィルタを編集した後で発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridFilter`1.OnClientFilterApplied">
            <summary>フィルタが適用された後に発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridFilter`1.ColumnFilters">
            <summary>列フィルタのリストを取得または設定します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.FlexGridGroupPanel`1">
            <summary>FlexGridグループパネルを設定するために使用されるエクステンダを定義します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.FlexGridGroupPanel`1.#ctor(C1.Web.Mvc.FlexGridBase{`0},System.String)">
            <summary>FlexGridGroupPanelクラスの新しいインスタンスを初期化します。</summary>
            <param name="grid">このグループパネルを所有するグリッド。</param>
            <param name="selector">グループパネルの要素を指定するセレクタ。</param>
        </member>
        <member name="M:C1.Web.Mvc.FlexGridGroupPanel`1.RegisterStartupScript(System.Web.UI.HtmlTextWriter)">
            <summary>ライタにエクステンダインスタンスをレンダリングします。</summary>
            <param name="writer">指定されたライタ。</param>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridGroupPanel`1.MaxGroups">
            <summary>使用できるグループの最大数を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridGroupPanel`1.Selector">
            <summary>セレクタを指定する値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridGroupPanel`1.HideGroupedColumns">
            <summary>パネルでオーナーグリッドのグループ化列を非表示にするかどうかを示す値を取得または設定します。</summary>
            <remarks>FlexGridは行ヘッダーにグループ化情報を表示するので、冗長な情報の表示を避けるため、通常はグループ化列を非表示にすることをお勧めします。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridGroupPanel`1.Placeholder">
            <summary>グループがないときにコントロールに表示する文字列を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridGroupPanel`1.IsDisabled">
            <summary>コントロールが無効かどうかを判定する値を取得または設定します。</summary>
            <remarks>無効化されたコントロールは、マウスイベントやキーボードイベントを取得できません。</remarks>
        </member>
        <member name="T:C1.Web.Mvc.FlexPie`1">
            <summary>FlexPie コントロールは、選択可能なセグメントを持つ円グラフおよびドーナツグラフを提供します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.FlexPieBase`1">
            <summary>フレックス円グラフの基本クラス。</summary>
        </member>
        <member name="M:C1.Web.Mvc.FlexPieBase`1.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>1つのFlexPieBaseインスタンスを作成します。</summary>
            <param name="helper">HTMLヘルパー</param>
            <param name="selector">セレクタ</param>
        </member>
        <member name="P:C1.Web.Mvc.FlexPieBase`1.BindingName">
            <summary>データ項目の名前を含むプロパティの名前を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexPieBase`1.InnerRadius">
            <summary>円の内側半径のサイズを取得または設定します。</summary>
            <remarks>内側半径は、円の半径に対する割合として測定されます。このプロパティのデフォルト値は0で、この場合は1つの円になります。このプロパティを0より大きい値に設定すると、中央に穴のある円が作成されます。これは、ドーナツグラフとも呼ばれます。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.FlexPieBase`1.IsAnimated">
            <summary>項目が選択されたときにアニメーション表示を使用するかどうかを示す値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexPieBase`1.Offset">
            <summary>円の中心からのセグメントのオフセットを取得または設定します。</summary>
            <remarks>オフセットは、円の半径に対する割合として測定されます。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.FlexPieBase`1.Reversed">
            <summary>角度を反転（反時計回り）するかどうかを取得または設定します。</summary>
            <remarks>デフォルト値はfalseです。この場合、角度は時計回りに測定されます。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.FlexPieBase`1.SelectedItemOffset">
            <summary>円の中心からの選択されたセグメントのオフセットを取得または設定します。</summary>
            <remarks>オフセットは、円の半径に対する割合として測定されます。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.FlexPieBase`1.SelectedItemPosition">
            <summary>選択されたセグメントの位置を取得または設定します。</summary>
            <remarks>このプロパティを 'None' 以外の設定すると、項目が選択されたときに円が回転します。グラフをクリックしてセグメントを選択するには、selectionModeプロパティを "Point" に設定する必要があります。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.FlexPieBase`1.StartAngle">
            <summary>円グラフセグメントの開始角度（度単位）を取得または設定します。</summary>
            <remarks>角度は、9時の位置から時計回りに測定されます。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.FlexPieBase`1.DataLabel">
            <summary>ポイントデータラベルのスタイルを取得します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexPieBase`1.SelectedIndex">
            <summary>選択されたセグメントのインデックスを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexPieBase`1.Binding">
            <summary>チャート値を含むプロパティの名前を取得または設定します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.FlexPie`1.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>１つの FlexPie インスタンスを作成します。</summary>
            <param name="helper">HTML ヘルパー</param>
            <param name="selector">セレクタ</param>
        </member>
        <member name="T:C1.Web.Mvc.FlexRadar`1">
            <summary>レーダーチャートコントロール。</summary>
        </member>
        <member name="M:C1.Web.Mvc.FlexRadar`1.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>1つのFlexRadarインスタンスを作成します。</summary>
            <param name="helper">HTMLヘルパー</param>
            <param name="selector">セレクタ</param>
        </member>
        <member name="P:C1.Web.Mvc.FlexRadar`1.ChartType">
            <summary>作成するレーダーチャートのタイプを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexRadar`1.Reversed">
            <summary>角度を反転（反時計回り）するかどうかを決定する値を取得または設定します。デフォルト値はfalseです。この場合、角度は時計回りに測定されます。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexRadar`1.Stacking">
            <summary>系列オブジェクトを積み重ねるかどうかを決定する値と、積み重ねる場合はその方法を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexRadar`1.StartAngle">
            <summary>レーダーの開始角度（度単位）を取得または設定します。角度は、12時の位置から時計回りに測定されます。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexRadar`1.TotalAngle">
            <summary>レーダーの合計角度（度単位）を取得または設定します。デフォルト値は360です。この値は、0より大きく、360以下である必要があります。</summary>
        </member>
        <member name="T:C1.Web.Mvc.InputColor">
            <summary>InputColor コントロールを使用すると、HTML でサポートされる色文字列を入力して色を選択したり、ドロップダウンして表示される ColorPicker コントロールから色を選択することができます。</summary>
        </member>
        <member name="M:C1.Web.Mvc.InputColor.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>１つの InputColor インスタンスを作成します。</summary>
            <param name="helper">HTML ヘルパー</param>
            <param name="selector">セレクタ</param>
        </member>
        <member name="P:C1.Web.Mvc.InputColor.Required">
            <summary>コントロール値を色に設定する必要があるか、それとも（コントロールのコンテンツを削除することで）null に設定できるかを示す値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.InputColor.ShowAlphaChannel">
            <summary>ColorPicker でユーザーが色のアルファチャンネル（透過性）を編集できるかどうかを示す値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.InputColor.OnClientValueChanged">
            <summary>新しい色が選択されると発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.InputColor.Value">
            <summary>現在の色を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.InputColor.Palette">
            <summary>パレット内の色を保持する配列を取得または設定します。</summary>
            <remarks>パレットには、10個の文字列の配列で表される10個の色が含まれます。通常、最初の2つの色は白と黒です。</remarks>
        </member>
        <member name="T:C1.Web.Mvc.InputDate">
            <summary>InputDate コントロールを使用すると、Globalize クラスでサポートされる任意の書式で日付を入力したり、ドロップダウンボックスに表示される Calendar コントロールから日付を選択することができます。</summary>
        </member>
        <member name="T:C1.Web.Mvc.InputDateBase">
            <summary>日付の入力を可能にするコントロールの基本クラス。</summary>
        </member>
        <member name="M:C1.Web.Mvc.InputDateBase.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>１つのInputDateBaseインスタンスを作成します。</summary>
            <param name="helper">HTMLヘルパー</param>
            <param name="selector">セレクタ</param>
        </member>
        <member name="P:C1.Web.Mvc.InputDateBase.Value">
            <summary>現在の日付を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.InputDateBase.Required">
            <summary>コントロール値をDateTimeに設定する必要があるか、それとも（コントロールのコンテンツを削除することで）nullに設定できるかを示す値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.InputDateBase.Min">
            <summary>ユーザーが入力できる最早日を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.InputDateBase.Max">
            <summary>ユーザーが入力できる最遅日を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.InputDateBase.Format">
            <summary>選択した日付の表示に使用される書式を取得または設定します。</summary>
            <remarks>書式文字列は、.NET形式の日付書式文字列として表されます。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.InputDateBase.Mask">
            <summary>編集中に使用するマスクを取得または設定します。</summary>
            <remarks>マスクの書式は、InputMaskコントロールで使用される書式と同じです。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.InputDateBase.OnClientValueChanged">
            <summary>新しい日付が選択されると発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.InputDateBase.ItemValidator">
            <summary>日付が選択の対象になるかどうかを決定するJavaScript validator関数の名前を取得または設定します。</summary>
            <remarks>指定された場合、validator関数はテストされる日付を表す１つのパラメータを取り、日付が無効で選択できない場合にfalseを返す必要があります。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.InputDateBase.InputType">
            <summary>コントロールによってホストされるHTML入力要素の"type"属性を取得または設定します。</summary>
            <remarks>デフォルトでは、このプロパティは"tel"に設定されます。この場合、モバイルデバイスでは、マイナス記号および小数点を含むテンキーが表示されます。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.InputDateBase.ItemFormatter">
            <summary>ドロップダウンカレンダーの日付をカスタマイズするための書式設定関数を取得または設定します。</summary>
            <remarks>この書式設定関数は、任意の日付に任意のコンテンツを追加できます。この関数を使用して、カレンダーの外観および動作を完全にカスタマイズできます。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.InputDateBase.IsRequired">
            <summary>コントロール値をDateに設定する必要があるか、それとも（コントロールのコンテンツを削除することで）nullに設定できるかを示す値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.InputDateBase.SelectionMode">
            <summary>ユーザーが日または月を選択できるか、何も値を選択できないかを示す値を取得または設定します。</summary>
            <remarks>このプロパティは、ドロップダウンカレンダーの動作に影響を与えますが、日付の表示に使用する書式には影響を与えません。selectionModeを'Month'に設定した場合、通常は、書式プロパティを'MMM yyyy'などの日付を含まない書式に設定する必要があります。</remarks>
        </member>
        <member name="M:C1.Web.Mvc.InputDate.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>１つの InputDate インスタンスを作成します。</summary>
            <param name="helper">HTML ヘルパー</param>
            <param name="selector">セレクタ</param>
        </member>
        <member name="T:C1.Web.Mvc.InputDateTime">
            <summary>このコントロールは、サポートされている任意の書式で完全な日付/時刻の値をキー入力するか、あるいはドロップダウンカレンダーから日付を、ドロップダウンリストから時刻を選択することで、日付と時刻を入力できるようにします。</summary>
        </member>
        <member name="M:C1.Web.Mvc.InputDateTime.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>１つのInputDateTimeインスタンスを作成します。</summary>
            <param name="helper">HTMLヘルパー</param>
            <param name="selector">セレクタ</param>
        </member>
        <member name="P:C1.Web.Mvc.InputDateTime.TimeFormat">
            <summary>ドロップダウンリスト内の時刻の表示に使用される書式を取得または設定します。</summary>
            <remarks>このプロパティは、コントロールの入力要素に表示される値には影響しません。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.InputDateTime.TimeMax">
            <summary>ユーザーが入力できる最遅時間を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.InputDateTime.TimeMin">
            <summary>ユーザーが入力できる最早時間を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.InputDateTime.TimeStep">
            <summary>時刻のドロップダウンリストのエントリ間の分数を取得または設定します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.InputMask">
            <summary>InputMask コントロールは、ユーザーが入力できる内容を制御する方法を提供します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.InputMask.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>１つの InputMask インスタンスを作成します。</summary>
            <param name="helper">HTML ヘルパー</param>
            <param name="selector">セレクタ</param>
        </member>
        <member name="P:C1.Web.Mvc.InputMask.Value">
            <summary>コントロールに現在表示されているテキストを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.InputMask.Mask">
            <summary>ユーザーのキー入力に伴って入力を検証するために使用されるマスクを取得または設定します。</summary>
            <remarks>このマスクは、InputMask トピックにリストされているマスク文字を使用した文字列として定義されます。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.InputMask.PromptChar">
            <summary>コントロール内の入力位置を示すために使用される記号を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.InputMask.Placeholder">
            <summary>コントロールが空のときにヒントとして表示される文字列を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.InputMask.OnClientValueChanged">
            <summary>Value プロパティの値が変化すると発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.InputMask.RawValue">
            <summary>コントロールの未加工の値を取得または設定します（マスクリテラルを除く）。</summary>
            <remarks>コントロールの未加工の値には、プロンプトとリテラル文字は含まれません。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.InputMask.IsRequired">
            <summary>コントロール値が空以外の文字列でなければならないかどうかを示す値を取得または設定します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.InputNumber">
            <summary>InputNumber コントロールは、ユーザーが数字を入力できるようにします。</summary>
        </member>
        <member name="M:C1.Web.Mvc.InputNumber.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>１つの InputNumber インスタンスを作成します。</summary>
            <param name="helper">HTML ヘルパー</param>
            <param name="selector">セレクタ</param>
        </member>
        <member name="P:C1.Web.Mvc.InputNumber.InputType">
            <summary>コントロールによってホストされる HTML 入力要素の "type" 属性を取得または設定します。</summary>
            <remarks>デフォルトでは、このプロパティは "tel" に設定されます。この場合、モバイルデバイスでは、マイナス記号および小数点を含むテンキーが表示されます。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.InputNumber.Value">
            <summary>コントロールの現在の値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.InputNumber.Required">
            <summary>コントロール値を数値に設定する必要があるか、それとも（コントロールのコンテンツを削除することで）null に設定できるかを示す値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.InputNumber.Min">
            <summary>ユーザーが入力できる最小値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.InputNumber.Max">
            <summary>ユーザーが入力できる最大値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.InputNumber.Step">
            <summary>ユーザーがスピナーボタンをクリックしたときに Value プロパティに加算または減算する量を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.InputNumber.Format">
            <summary>編集中の数値を表示するために使用される書式を取得または設定します（Globalize を参照）。</summary>
            <remarks>書式文字列は、.NET 形式の標準の数値書式文字列として表されます。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.InputNumber.Text">
            <summary>コントロールに表示されているテキストを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.InputNumber.Placeholder">
            <summary>コントロールが空のときにヒントとして表示される文字列を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.InputNumber.ShowSpinner">
            <summary>コントロールに値を増減するスピナーボタンを表示するかどうかを示す値を取得または設定します（ステッププロパティを０以外の値に設定する必要があります）。</summary>
        </member>
        <member name="P:C1.Web.Mvc.InputNumber.OnClientTextChanged">
            <summary>Text プロパティの値が変化すると発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.InputNumber.OnClientValueChanged">
            <summary>Value プロパティの値が変化すると発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.InputNumber.IsReadOnly">
            <summary>ユーザーがマウスとキーボードを使用してコントロールを変更できるかどうかを示す値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.InputNumber.IsRequired">
            <summary>コントロール値を数値に設定する必要があるか、それとも（コントロールのコンテンツを削除することで）nullに設定できるかを示す値を取得または設定します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.InputTime`1">
            <summary>InputTimeコントロールを使用すると、Globalizeクラスでサポートされる任意の書式で時間を入力したり、ドロップダウンリストから時間を選択することができます。</summary>
        </member>
        <member name="M:C1.Web.Mvc.InputTime`1.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>1つのInputTimeインスタンスを作成します。</summary>
            <param name="helper">HTMLヘルパー</param>
            <param name="selector">セレクタ</param>
        </member>
        <member name="P:C1.Web.Mvc.InputTime`1.Value">
            <summary>現在の入力時間を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.InputTime`1.Min">
            <summary>ユーザーが入力できる最早時間を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.InputTime`1.Max">
            <summary>ユーザーが入力できる最遅時間を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.InputTime`1.Format">
            <summary>選択された時間を表示するために使用される書式を取得または設定します（Globalizeを参照）。</summary>
            <remarks>書式文字列は、.NET形式の時間書式文字列として表されます。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.InputTime`1.Mask">
            <summary>編集中に使用するマスクを取得または設定します。</summary>
            <remarks>指定する場合、このマスクはFormatプロパティの値と互換性がある必要があります。たとえば、短い時間（書式't'）を入力する場合は、マスク'99:99 &gt;LL'を使用できます。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.InputTime`1.OnClientValueChanged">
            <summary>新しい時間が選択されると発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.InputTime`1.Step">
            <summary>ドロップダウンリストのエントリ間の分数を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.InputTime`1.InputType">
            <summary>コントロールによってホストされるHTML入力要素の"type"属性を取得または設定します。</summary>
            <remarks>デフォルトでは、このプロパティは"tel"に設定されます。この場合、モバイルデバイスでは、マイナス記号および小数点を含むテンキーが表示されます。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.InputTime`1.Name">
            <summary>InputTimeコントロールの名前を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.InputTime`1.AutoExpandSelection">
            <summary>コントロールがクリックされたときに、選択範囲を自動的に単語/数字全体に拡張するかどうかを 
            示す値を取得または設定します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.LinearGauge">
            <summary>LinearGauge には、直線型の目盛りとインジケータが表示されます</summary>
        </member>
        <member name="M:C1.Web.Mvc.LinearGauge.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>１つの LinearGauge インスタンスを作成します。</summary>
            <param name="helper">HTML ヘルパー</param>
            <param name="selector">セレクタ</param>
        </member>
        <member name="T:C1.Web.Mvc.ListBox`1">
            <summary>ListBox コントロールは、プレーンテキストまたは HTML を含む項目のリストを表示し、ユーザーがキーボードまたはマウスで項目を選択できるようにします。</summary>
        </member>
        <member name="M:C1.Web.Mvc.ListBox`1.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>１つの ListBox インスタンスを作成します。</summary>
            <param name="helper">HTML ヘルパー</param>
            <param name="selector">セレクタ</param>
        </member>
        <member name="P:C1.Web.Mvc.ListBox`1.DisplayMemberPath">
            <summary>項目のビジュアル表現として使用するプロパティ名を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ListBox`1.SelectedValuePath">
            <summary>SelectedItem から SelectedValue を取得するために使用されるプロパティ名を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ListBox`1.IsContentHtml">
            <summary>リストに項目をプレーンテキストとして表示するか、HTML として表示するかを示す値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ListBox`1.ItemFormatter">
            <summary>リストに表示される値をカスタマイズするために使用される関数を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ListBox`1.SelectedIndex">
            <summary>リストで現在選択されている項目のインデックスを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ListBox`1.SelectedItem">
            <summary>リストで現在選択されている項目を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ListBox`1.SelectedValue">
            <summary>SelectedValuePath を使用して取得された SelectedItem の値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ListBox`1.MaxHeight">
            <summary>リストの最大高さを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ListBox`1.ItemTemplateId">
            <summary>各リスト項目の生成に使用されるテンプレートの ID を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ListBox`1.OnClientSelectedIndexChanged">
            <summary>SelectedIndex プロパティの値が変化すると発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ListBox`1.OnClientItemsChanged">
            <summary>項目のリストが変更されると発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ListBox`1.CheckedMemberPath">
            <summary>各項目の横に配置されるチェックボックスの制御に使用されるプロパティの名前を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ListBox`1.OnClientItemChecked">
            <summary>現在の項目がオンまたはオフにされると発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ListBox`1.ItemTemplateContent">
            <summary>各リスト項目の生成に使用されるテンプレートのIDを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ListBox`1.OnClientCheckedItemsChanged">
            <summary>@see:checkedItemsプロパティの値が変化すると発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ListBox`1.OnClientFormatItem">
            <summary>リスト項目を表す要素が作成されたときに発生します。</summary>
            <remarks>このイベントは、表示するリスト項目の書式設定に使用できます。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.ListBox`1.OnClientLoadedItems">
            <summary>リスト項目が生成された後に発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ListBox`1.OnClientLoadingItems">
            <summary>リスト項目が生成される前に発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ListBox`1.CheckedIndexes">
            <summary>オンに設定された項目のインデックスを含むリストを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ListBox`1.CheckedValues">
            <summary>現在オンに設定されている項目値を含むリストを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ListBox`1.ItemRole">
            <summary>リスト項目に追加された"role"属性の値を取得または設定します。</summary>
            <remarks>このプロパティのデフォルト値は"option"です。</remarks>
        </member>
        <member name="T:C1.Web.Mvc.MenuBase`1">
            <summary>Menu コントロールは、１つのテキスト要素とドロップダウンリストを表示します。ドロップダウンリストには、ユーザーがクリックまたはタッチすることで呼び出すことができるコマンドが含まれます。</summary>
        </member>
        <member name="M:C1.Web.Mvc.MenuBase`1.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>１つの MenuBase インスタンスを作成します。</summary>
            <param name="helper">HTML ヘルパー</param>
            <param name="selector">セレクタ</param>
        </member>
        <member name="P:C1.Web.Mvc.MenuBase`1.Header">
            <summary></summary>
        </member>
        <member name="P:C1.Web.Mvc.MenuBase`1.Command">
            <summary></summary>
        </member>
        <member name="P:C1.Web.Mvc.MenuBase`1.CommandPath">
            <summary></summary>
        </member>
        <member name="P:C1.Web.Mvc.MenuBase`1.CommandParameterPath">
            <summary></summary>
        </member>
        <member name="P:C1.Web.Mvc.MenuBase`1.OnClientItemClicked">
            <summary></summary>
        </member>
        <member name="P:C1.Web.Mvc.MenuBase`1.Owner">
            <summary>このメニューを所有する要素のセレクタ文字列を取得または設定します。</summary>
            <remarks>コンテキストメニューが必要な場合は、styleまたはattributeを設定して、このメニューを非表示にします。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.MenuBase`1.IsButton">
            <summary>メニューを通常のメニューではなく分割ボタンとして動作させるかどうかを指定する値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.MenuBase`1.AutoExpandSelection">
            <summary>このプロパティを削除するためにオーバーライドします。</summary>
        </member>
        <member name="P:C1.Web.Mvc.MenuBase`1.HeaderPath">
            <summary>このプロパティを削除するためにオーバーライドします。</summary>
        </member>
        <member name="T:C1.Web.Mvc.MultiAutoComplete`1">
            <summary>カスタムオブジェクトまたは簡単な文字列を含むリストから複数の項目を選択できるコントロール。</summary>
        </member>
        <member name="M:C1.Web.Mvc.MultiAutoComplete`1.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>1つのMultiAutoCompleteインスタンスを作成します。</summary>
            <param name="helper">HTMLヘルパー</param>
            <param name="selector">セレクタ</param>
        </member>
        <member name="P:C1.Web.Mvc.MultiAutoComplete`1.MaxSelectedItems">
            <summary>選択できる最大の項目数を取得または設定します。</summary>
            <remarks>このプロパティをnull（デフォルト値）に設定すると、任意の数の項目を選択できます。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.MultiAutoComplete`1.SelectedMemberPath">
            <summary>どの項目が選択されるかの制御に使用されるプロパティの名前を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.MultiAutoComplete`1.OnClientSelectedItemsChanged">
            <summary>selectedItemsプロパティの値が変化すると発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.MultiAutoComplete`1.SelectedIndexes">
            <summary>現在選択されている項目のインデックスを含むリストを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.MultiAutoComplete`1.SelectedValues">
            <summary>現在選択されている項目値が含まれるオブジェクト配列を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.MultiAutoComplete`1.ShowDropDownButton">
            <summary>このプロパティを削除するためにオーバーライドします。</summary>
        </member>
        <member name="P:C1.Web.Mvc.MultiAutoComplete`1.SelectedIndex">
            <summary>このプロパティを隠蔽するためにオーバーライドします。</summary>
        </member>
        <member name="P:C1.Web.Mvc.MultiAutoComplete`1.SelectedItem">
            <summary>このプロパティを隠蔽するためにオーバーライドします。</summary>
        </member>
        <member name="P:C1.Web.Mvc.MultiAutoComplete`1.SelectedValue">
            <summary>このプロパティを隠蔽するためにオーバーライドします。</summary>
        </member>
        <member name="T:C1.Web.Mvc.MultiSelect`1">
            <summary>MultiSelectコントロールを使用すると、ユーザーはカスタムオブジェクトや単純な文字列を含むドロップダウンリストから複数の項目を選択できます。</summary>
        </member>
        <member name="M:C1.Web.Mvc.MultiSelect`1.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>1つのMultiSelectインスタンスを作成します。</summary>
            <param name="helper">HTMLヘルパー</param>
            <param name="selector">セレクタ</param>
        </member>
        <member name="P:C1.Web.Mvc.MultiSelect`1.CheckedIndexes">
            <summary>オンに設定された項目のインデックスを含むリストを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.MultiSelect`1.CheckedMemberPath">
            <summary>各項目の横に配置されるチェックボックスの制御に使用されるプロパティの名前を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.MultiSelect`1.HeaderFormat">
            <summary>コントロール内のオンに設定された項目がMaxHeaderItemsよりも多いときに、ヘッダーコンテンツの作成に使用される書式文字列を取得または設定します。</summary>
            <remarks>書式文字列は、現在オンに設定されている項目の数を置き換える「{count}」置換文字列を含むことができます。Englishカルチャでのこのプロパティのデフォルト値は、「{count:n0} items selected（{count:n0}個の項目が選択されました）」です。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.MultiSelect`1.HeaderFormatter">
            <summary>コントロールヘッダー内のHTMLを取得する関数を取得または設定します。</summary>
            <remarks>デフォルトで、コントロールヘッダーコンテンツはPlaceholder、MaxHeaderItems、および現在の選択内容に基づいて決定されます。アプリケーションが求める判断基準に基づいてカスタム文字列を返す関数を指定することにより、ヘッダーコンテンツをカスタマイズできます。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.MultiSelect`1.MaxHeaderItems">
            <summary>コントロールヘッダーに表示する項目の最大数を取得または設定します。</summary>
            <remarks>項目が選択されていない場合、ヘッダーにはPlaceholderによって指定されるテキストが表示されます。選択項目数がMaxHeaderItemsプロパティの値以下の場合は、選択項目がヘッダーに表示されます。選択項目数がMaxHeaderItemsを超える場合、ヘッダーには選択項目数が代わりに表示されます。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.MultiSelect`1.OnClientCheckedItemsChanged">
            <summary>オンに設定された項目の値が変化すると発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.MultiSelect`1.CheckedValues">
            <summary>現在オンに設定されている項目値を含むリストを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.MultiSelect`1.AutoExpandSelection">
            <summary>このプロパティを削除するためにオーバーライドします。</summary>
        </member>
        <member name="P:C1.Web.Mvc.MultiSelect`1.HeaderPath">
            <summary>このプロパティを削除するためにオーバーライドします。</summary>
        </member>
        <member name="P:C1.Web.Mvc.MultiSelect`1.IsRequired">
            <summary>このプロパティを削除するためにオーバーライドします。</summary>
        </member>
        <member name="P:C1.Web.Mvc.MultiSelect`1.IsEditable">
            <summary>このプロパティを削除するためにオーバーライドします。</summary>
        </member>
        <member name="P:C1.Web.Mvc.MultiSelect`1.SelectedIndex">
            <summary>このプロパティを削除するためにオーバーライドします。</summary>
        </member>
        <member name="P:C1.Web.Mvc.MultiSelect`1.SelectedItem">
            <summary>このプロパティを削除するためにオーバーライドします。</summary>
        </member>
        <member name="P:C1.Web.Mvc.MultiSelect`1.SelectedValue">
            <summary>このプロパティを削除するためにオーバーライドします。</summary>
        </member>
        <member name="P:C1.Web.Mvc.MultiSelect`1.OnClientTextChanged">
            <summary>このプロパティを削除するためにオーバーライドします。</summary>
        </member>
        <member name="P:C1.Web.Mvc.MultiSelect`1.Text">
            <summary>このプロパティを削除するためにオーバーライドします。</summary>
        </member>
        <member name="P:C1.Web.Mvc.MultiSelect`1.SelectAllLabel">
            <summary>「Select All（すべて選択）」チェックボックスのラベルとして使用される文字列を取得または設定します。このチェックボックスは、ShowSelectAllCheckbox プロパティが true に設定されている場合に表示されます。</summary>
            <remarks>このプロパティはデフォルトで null に設定されています。この場合、コントロールには、「Select All（すべて選択）」に相当するローカライズされた文字列が表示されます。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.MultiSelect`1.ShowSelectAllCheckbox">
            <summary>コントロールの項目の上に「Select All（すべて選択）」チェックボックスを表示して、すべての項目の選択または選択解除を可能にするかどうかを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.MultiSelect`1.Name">
            <summary>MultiSelectコントロールの名前を取得または設定します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Pager">
            <summary>PagerコントロールをデータコントロールまたはCollectionViewサービスに連結して、ページナビゲーションをサポートできます。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Pager.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>1つのPagerインスタンスを作成します。</summary>
            <param name="helper">HTMLヘルパー</param>
            <param name="selector">セレクタ</param>
        </member>
        <member name="P:C1.Web.Mvc.Pager.Owner">
            <summary>このページャを所有するデータコントロールまたはCollectionViewサービスのIDを取得または設定します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Popup">
            <summary>要素をポップアップとして表示するクラス。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Popup.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>1つのPopupインスタンスを作成します。</summary>
            <param name="helper">HTMLヘルパー</param>
            <param name="selector">セレクタ</param>
        </member>
        <member name="M:C1.Web.Mvc.Popup.RenderContent(System.Web.UI.HtmlTextWriter)">
            <summary>コントロールのコンテンツをレンダリングします。</summary>
            <param name="writer">マークアップの書き込みに使用される指定されたライタ。</param>
        </member>
        <member name="P:C1.Web.Mvc.Popup.Owner">
            <summary>このポップアップを所有する要素を決定するセレクタ文字列を取得または設定します。</summary>
            <remarks>所有者がnullまたは無効な場合は、Popupはダイアログのように挙動します。画面の中心に配置され、client showメソッドを使用して表示される必要があります。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.Popup.FadeIn">
            <summary>ポップアップを表示する際にフェードインアニメーションを使用するかどうかを決定する値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Popup.FadeOut">
            <summary>ポップアップを非表示にする際にフェードアウトアニメーションを使用するかどうかを決定する値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Popup.Modal">
            <summary>Popupをモーダルダイアログとして表示するかどうかを判定する値を取得または設定します。</summary>
            <remarks>モーダルダイアログには暗い影が付けられて、ページ上の他のコンテンツからPopupを目立たせます。ダイアログを完全なモーダルにするには、HideTriggerプロパティをNoneに設定して、ユーザーが背景をクリックすることによってダイアログを閉じることができないようにします。この場合は、closeメソッドが呼び出されるか、またはユーザーがEscapeキーを押した場合にのみダイアログが閉じます。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.Popup.HideTrigger">
            <summary>Popupを非表示にするアクションを取得または設定します。</summary>
            <remarks>デフォルトでHideTriggerプロパティはBlurに設定され、この場合、ポップアップはフォーカスを失うと非表示になります。HideTriggerプロパティをClickに設定すると、ポップアップはオーナー要素がクリックされたときにのみ非表示になります。HideTriggerプロパティをNoneに設定すると、ポップアップはhideメソッドが呼び出されたときにのみ非表示になります。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.Popup.ShowTrigger">
            <summary>Popupを表示するアクションを取得または設定します。</summary>
            <remarks>デフォルトでShowTriggerプロパティはClickに設定され、ポップアップはユーザーがオーナー要素をクリックしたときにのみ表示されます。ShowTriggerプロパティをNoneに設定すると、ポップアップはshowメソッドが呼び出されたときにのみ表示されます。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.Popup.OnClientHiding">
            <summary>Popupが非表示になる前に発生するclient関数を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Popup.OnClientHidden">
            <summary>Popupが非表示にされた後に発生するclient関数を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Popup.OnClientShowing">
            <summary>Popupが表示される前に発生するclient関数を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Popup.OnClientShown">
            <summary>Popupが表示された後に発生するclient関数を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Popup.Content">
            <summary>ポップアップのコンテンツを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Popup.ContentFunc">
            <summary>ポップアップのコンテンツを返す関数を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Popup.RemoveOnHide">
            <summary>ポップアップが非表示にされたときに、ポップアップ要素を非表示にするのではなく、DOM から削除するかどうかを決定する値を取得または設定します。</summary>
            <remarks>このプロパティは、デフォルトで true に設定されます。</remarks>
        </member>
        <member name="T:C1.Web.Mvc.RadialGauge">
            <summary>RadialGauge には、円形の目盛りとインジケータが表示されます</summary>
        </member>
        <member name="M:C1.Web.Mvc.RadialGauge.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>１つの RadialGauge インスタンスを作成します。</summary>
            <param name="helper">HTML ヘルパー</param>
            <param name="selector">セレクタ</param>
        </member>
        <member name="P:C1.Web.Mvc.RadialGauge.AutoScale">
            <summary>ホスト要素にちょうど収まるようにゲージが自動的に拡大縮小されるかどうかを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.RadialGauge.StartAngle">
            <summary>ゲージの開始角度（度単位）を取得または設定します。</summary>
            <remarks>角度は、９時の位置から時計回りに測定されます。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.RadialGauge.SweepAngle">
            <summary>ゲージの移動角度（度単位）を取得または設定します。</summary>
            <remarks>角度は、９時の位置から時計回りに測定されます。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.RadialGauge.ShowText">
            <summary>ゲージにどの値をテキストとして表示するかを取得または設定します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Sunburst`1">
            <summary>Sunburstコントロールは、マルチレベルの円グラフとして階層化されたデータを表示します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Sunburst`1.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>1つのSunburstインスタンスを作成します。</summary>
            <param name="helper">HTMLヘルパー</param>
            <param name="selector">セレクタ</param>
        </member>
        <member name="P:C1.Web.Mvc.Sunburst`1.BindingName">
            <summary>連結データフィールドの名前を取得または設定します。フィールド名はカンマで区切ります。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Sunburst`1.ChildItemsPath">
            <summary>階層化データ内の子の項目の生成に使用される1つ以上のプロパティの名前を取得または設定します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.TreeView">
            <summary>テキスト、チェックボックス、画像、または任意のHTMLコンテンツから成る階層リストを表示するコントロールを定義します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.TreeView.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>1つのTreeViewインスタンスを作成します。</summary>
            <param name="helper">HTMLヘルパー</param>
            <param name="selector">セレクタ</param>
        </member>
        <member name="P:C1.Web.Mvc.TreeView.Source">
            <summary>
                <see cref="T:C1.Web.Mvc.TreeView" />の項目を含む配列を取得または設定します。通常、配列は子項目を含む項目から成る階層構造を持ちます。項目の深さにデフォルトの制限はありません。</summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeView.ChildItemsPath">
            <summary>Gets or sets the name of the property (or properties) that contains the child items for each node. When it is not set, [‘items’] will be used.</summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeView.DisplayMemberPath">
            <summary>Gets or sets the name of the property (or properties) to use as the visual representation of the nodes. When it is not set, [‘header’] will be used.</summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeView.ImageMemberPath">
            <summary>ノードの画像のソースとして使用する1つ以上のプロパティの名前を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeView.IsContentHtml">
            <summary>項目をプレーンテキストまたはHTMLに連結するかどうかを示す値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeView.ShowCheckboxes">
            <summary>
                <see cref="T:C1.Web.Mvc.TreeView" />コントロールのノードにチェックボックスを追加し、それらの状態を管理するかどうかを決定する値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeView.AutoCollapse">
            <summary>ノードが展開されたときに、兄弟ノードを折りたたむかどうかを指定する値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeView.IsAnimated">
            <summary>ノードを展開または折りたたむときにアニメーションを使用するかどうかを示す値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeView.IsReadOnly">
            <summary>ユーザーがノードのテキストを編集できるかどうかを指定する値を取得または設定します。falseに設定すると、ノードに直接入力してツリーノードのコンテンツを編集できます。［F2］キーを使用して、ノードコンテンツ全体を選択した状態で編集モードに入ることもできます。</summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeView.AllowDragging">
            <summary>ユーザーが<see cref="T:C1.Web.Mvc.TreeView" />コントロール内でノードをドラッグアンドドロップできるかどうかを指定する値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeView.ExpandOnClick">
            <summary>ユーザーがノードヘッダーをクリックしたときに、折りたたまれているノードを展開するかどうかを指定する値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeView.LazyLoadFunction">
            <summary>オンデマンドで子ノードをロードする関数を取得または設定します。</summary>
            <remarks>この関数は、2つのパラメータとして、ロードするノードと、データを利用できるようになったときに呼び出されるコールバックを受け取ります。コールバック関数は、ノードのロード処理が完了したことを<see cref="T:C1.Web.Mvc.TreeView" />に通知します。データのロード時にエラーがあっても、コールバック関数は常に呼び出されます。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.TreeView.OnClientItemsSourceChanged">
            <summary>ItemsSourceプロパティの値が変化すると発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeView.OnClientLoadingItems">
            <summary>ツリー項目が生成される前に発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeView.OnClientLoadedItems">
            <summary>ツリー項目が生成された後に発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeView.OnClientItemClicked">
            <summary>ユーザーが項目をクリックするか、［Enter］キーを押して、項目が選択されたときに発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeView.OnClientSelectedItemChanged">
            <summary>選択項目が変更されたときに発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeView.OnClientCheckedItemsChanged">
            <summary>オンに設定された項目が変更されたときに発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeView.OnClientIsCollapsedChanging">
            <summary>ノードが折りたたまれるか展開される前に発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeView.OnClientIsCollapsedChanged">
            <summary>ノードが折りたたまれるか展開された後に発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeView.OnClientIsCheckedChanging">
            <summary>ノードのチェックステータスが変更される前に発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeView.OnClientIsCheckedChanged">
            <summary>ノードのチェックステータスが変更された後に発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeView.OnClientFormatItem">
            <summary>ノードを表す要素が作成されたときに発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeView.OnClientDragStart">
            <summary>ユーザーがノードのドラッグを開始したときに発生します。このイベントは、AllowDragプロパティがtrueに設定されている場合にのみ発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeView.OnClientDragOver">
            <summary>ユーザーが<see cref="T:C1.Web.Mvc.TreeView" />で1つのノードを他のノードの上にドラッグしているときに発生します。</summary>
            <remarks>イベントがキャンセルされていない場合はtrueを返します。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.TreeView.OnClientDrop">
            <summary>ユーザーが<see cref="T:C1.Web.Mvc.TreeView" />でノードをドロップしたときに発生します。</summary>
            <remarks>イベントがキャンセルされていない場合はtrueを返します。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.TreeView.OnClientDragEnd">
            <summary>ユーザーがノードを新しい位置にドロップするか、マウスまたはキーボードで操作をキャンセルしてドラッグアンドドロップ操作を終了したときに発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeView.OnClientNodeEditStarting">
            <summary>ノードが編集モードに入る前に発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeView.OnClientNodeEditStarted">
            <summary>ノードが編集モードに入った後に発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeView.OnClientNodeEditEnding">
            <summary>ノードが編集モードを出る前に発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeView.OnClientNodeEditEnded">
            <summary>ノードが編集モードを出た後に発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeView.LazyLoadActionUrl">
            <summary>
                <see cref="T:C1.Web.Mvc.TreeView" />の遅延ノードを取得するためのURLを取得または設定します。</summary>
            <remarks>Trueに設定すると、親ノードを展開したときに子ノードがロードされます。そうでない場合は、すべてのノードがロードされます。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.TreeView.LoadActionUrl">
            <summary>
                <see cref="T:C1.Web.Mvc.TreeView" />の項目を取得するためのURLを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeView.OnClientReponseTextParsing">
            <summary>応答テキストの解析時に発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeView.OnClientRequestDataStringifying">
            <summary>要求データのシリアライズ時に発生します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.AnnotationLayerBuilder`1">
            <summary>AnnotationLayerのビルダ。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ExtenderBuilder`2">
            <summary>基本エクステンダビルダクラスを定義します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ExtenderBuilder`2.#ctor(`0)">
            <summary>ExtenderBuilder インスタンスを作成します。</summary>
            <param name="obj">構成する<see cref="T:C1.Web.Mvc.Extender" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ExtenderBuilder`2.Id(System.String)">
            <summary>エクステンダのIDを設定します。</summary>
            <param name="value">値。</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AnnotationLayerBuilder`1.#ctor(C1.Web.Mvc.AnnotationLayer{`0})">
            <summary>1つのFlexGridFilterBuilderインスタンスを作成します。</summary>
            <param name="extender">FlexGridFilterエクステンダ。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AnnotationLayerBuilder`1.AddText(System.Action{C1.Web.Mvc.Fluent.TextBuilder})">
            <summary>annotationlayerのテキスト注釈を追加します。</summary>
            <param name="build">構築関数</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AnnotationLayerBuilder`1.AddCircle(System.Action{C1.Web.Mvc.Fluent.CircleBuilder})">
            <summary>annotationlayerの円注釈を追加します。</summary>
            <param name="build">構築関数</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AnnotationLayerBuilder`1.AddEllipse(System.Action{C1.Web.Mvc.Fluent.EllipseBuilder})">
            <summary>annotationlayerの楕円注釈を追加します。</summary>
            <param name="build">構築関数</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AnnotationLayerBuilder`1.AddRectangle(System.Action{C1.Web.Mvc.Fluent.RectangleBuilder})">
            <summary>annotationlayerの四角形注釈を追加します。</summary>
            <param name="build">構築関数</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AnnotationLayerBuilder`1.AddImage(System.Action{C1.Web.Mvc.Fluent.ImageBuilder})">
            <summary>annotationlayerの画像注釈を追加します。</summary>
            <param name="build">構築関数</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AnnotationLayerBuilder`1.AddLine(System.Action{C1.Web.Mvc.Fluent.LineBuilder})">
            <summary>annotationlayerの線注釈を追加します。</summary>
            <param name="build">構築関数</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AnnotationLayerBuilder`1.AddPolygon(System.Action{C1.Web.Mvc.Fluent.PolygonBuilder})">
            <summary>annotationlayerの多角形注釈を追加します。</summary>
            <param name="build">構築関数</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AnnotationLayerBuilder`1.AddSquare(System.Action{C1.Web.Mvc.Fluent.SquareBuilder})">
            <summary>annotationlayerの正方形注釈を追加します。</summary>
            <param name="build">構築関数</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.AutoCompleteBuilder`1">
            <summary>AutoComplete のビルダ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AutoCompleteBuilder`1.#ctor(C1.Web.Mvc.AutoComplete{`0})">
            <summary>１つの AutoCompleteBuilder インスタンスを作成します。</summary>
            <param name="component">構成する<see cref="T:C1.Web.Mvc.AutoComplete`1" />オブジェクト。</param>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.BulletGraphBuilder">
            <summary>BulletGraph のビルダ。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.LinearGaugeBaseBuilder`2">
            <summary>LinearGaugeBase のビルダ。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.GaugeBuilder`2">
            <summary>Gauge のビルダ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.GaugeBuilder`2.#ctor(`0)">
            <summary>１つの GaugeBuilder インスタンスを作成します。</summary>
            <param name="component">構成する<see cref="T:C1.Web.Mvc.Gauge" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.GaugeBuilder`2.Face(System.Action{C1.Web.Mvc.Fluent.RangeBuilder})">
            <summary>Face プロパティを設定します。</summary>
            <param name="build">構築関数</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.GaugeBuilder`2.Pointer(System.Action{C1.Web.Mvc.Fluent.RangeBuilder})">
            <summary>Pointer プロパティを設定します。</summary>
            <param name="build">構築関数</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.GaugeBuilder`2.ShowText(C1.Web.Mvc.ShowText)">
            <summary>ShowText プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.GaugeBuilder`2.ShowRanges(System.Boolean)">
            <summary>ShowRanges プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.GaugeBuilder`2.HasShadow(System.Boolean)">
            <summary>HasShadow プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.GaugeBuilder`2.IsAnimated(System.Boolean)">
            <summary>IsAnimated プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.GaugeBuilder`2.Step(System.Double)">
            <summary>Step プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.GaugeBuilder`2.Thickness(System.Double)">
            <summary>Thickness プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.GaugeBuilder`2.OnClientValueChanged(System.String)">
            <summary>OnClientValueChanged プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.GaugeBuilder`2.Format(System.String)">
            <summary>Format プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.GaugeBuilder`2.IsReadOnly(System.Boolean)">
            <summary>IsReadOnly プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.GaugeBuilder`2.Origin(System.Nullable{System.Double})">
            <summary>Originプロパティを設定します。</summary>
            <remarks>範囲の描画に使用される開始点を取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.GaugeBuilder`2.ThumbSize(System.Double)">
            <summary>ThumbSizeプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.GaugeBuilder`2.ShowTicks(System.Boolean)">
            <summary>ShowTicksプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.GaugeBuilder`2.GetText(System.String)">
            <summary>GetTextプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.GaugeBuilder`2.TickSpacing(System.Nullable{System.Double})">
            <summary>
                <see cref="P:C1.Web.Mvc.Gauge.TickSpacing" />を構成します。目盛りマークのスペーシングを設定します。</summary>
            <remarks>ゲージの表面に沿って目盛りマークを表示する場合は、ShowTicksプロパティをtrueに設定します。デフォルトでは、目盛りマークの間隔はStepプロパティで定義されます。このデフォルトを無効にしてStep値とは異なるスペーシングを使用するには、TickSpacingプロパティを使用します。TickSpacingプロパティをnullに設定すると、デフォルトの動作に戻ります。</remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.GaugeBuilder`2.Ranges(System.Action{C1.Web.Mvc.Fluent.ListItemFactory{C1.Web.Mvc.Range,C1.Web.Mvc.Fluent.RangeBuilder}})">
            <summary>Ranges を設定します。</summary>
            <param name="build">ビルドアクション</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.GaugeBuilder`2.Min(System.Double)">
            <summary>Min プロパティを設定します。</summary>
            <remarks>ゲージに表示できる最小値を取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.GaugeBuilder`2.Max(System.Double)">
            <summary>Max プロパティを設定します。</summary>
            <remarks>ゲージに表示できる最大値を取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.GaugeBuilder`2.Value(System.Double)">
            <summary>Value プロパティを設定します。</summary>
            <remarks>ゲージに表示される値を取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.LinearGaugeBaseBuilder`2.#ctor(`0)">
            <summary>１つの LinearGaugeBaseBuilder インスタンスを作成します。</summary>
            <param name="component">構成する<see cref="T:C1.Web.Mvc.LinearGaugeBase" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.LinearGaugeBaseBuilder`2.Direction(C1.Web.Mvc.GaugeDirection)">
            <summary>Direction プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BulletGraphBuilder.#ctor(C1.Web.Mvc.BulletGraph)">
            <summary>１つの BulletGraphBuilder インスタンスを作成します。</summary>
            <param name="component">構成する<see cref="T:C1.Web.Mvc.BulletGraph" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BulletGraphBuilder.Bad(System.Double)">
            <summary>Bad プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BulletGraphBuilder.Good(System.Double)">
            <summary>Good プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BulletGraphBuilder.Target(System.Double)">
            <summary>Target プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.CalendarBuilder">
            <summary>Calendar のビルダ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CalendarBuilder.#ctor(C1.Web.Mvc.Calendar)">
            <summary>１つの CalendarBuilder インスタンスを作成します。</summary>
            <param name="component">構成する<see cref="T:C1.Web.Mvc.Calendar" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CalendarBuilder.Value(System.DateTime)">
            <summary>Value プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CalendarBuilder.Min(System.DateTime)">
            <summary>Min プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CalendarBuilder.Max(System.DateTime)">
            <summary>Max プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CalendarBuilder.FirstDayOfWeek(System.DayOfWeek)">
            <summary>FirstDayOfWeek プロパティを設定します。</summary>
            <remarks>週の最初の曜日（カレンダーの最初の列に表示される曜日）を取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CalendarBuilder.DisplayMonth(System.DateTime)">
            <summary>DisplayMonth プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CalendarBuilder.ShowHeader(System.Boolean)">
            <summary>ShowHeader プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CalendarBuilder.MonthView(System.Boolean)">
            <summary>MonthView プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CalendarBuilder.ItemFormatter(System.String)">
            <summary>ItemFormatter プロパティを設定します。</summary>
            <remarks>カレンダーの日付をカスタマイズするための書式設定関数を取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CalendarBuilder.OnClientValueChanged(System.String)">
            <summary>OnClientValueChanged プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CalendarBuilder.OnClientDisplayMonthChanged(System.String)">
            <summary>OnClientDisplayMonthChanged プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CalendarBuilder.ItemValidator(System.String)">
            <summary>ItemValidatorプロパティを設定します。</summary>
            <remarks>日付が選択の対象になるかどうかを決定するjavascriptのvalidator関数の名前を取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CalendarBuilder.OnClientFormatItem(System.String)">
            <summary>OnClientFormatItemプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CalendarBuilder.IsReadOnly(System.Boolean)">
            <summary>IsReadOnlyプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CalendarBuilder.SelectionMode(C1.Web.Mvc.DateSelectionMode)">
            <summary>SelectionModeプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CalendarBuilder.FormatDayHeaders(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.Calendar.FormatDayHeaders" />を構成します。月ビューの曜日の上にヘッダーを表示するために使用される書式を設定します。</summary>
            <remarks>このプロパティのデフォルト値は'ddd'です。</remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CalendarBuilder.FormatDays(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.Calendar.FormatDays" />を構成します。月ビューに曜日を表示するために使用される書式を設定します。</summary>
            <remarks>このプロパティのデフォルト値は'd 'です。'd'の後のスペースは、この書式が、短い日付パターンを表す標準の書式'd'と解釈されないようにします。</remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CalendarBuilder.FormatMonths(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.Calendar.FormatMonths" />を構成します。年ビューに月を表示するために使用される書式を設定します。</summary>
            <remarks>このプロパティのデフォルト値は'MMM'です。</remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CalendarBuilder.FormatYear(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.Calendar.FormatYear" />を構成します。年ビューの月の上に年を表示するために使用される書式を設定します。</summary>
            <remarks>このプロパティのデフォルト値は'yyyy'です。</remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CalendarBuilder.FormatYearMonth(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.Calendar.FormatYearMonth" />を構成します。月ビューのカレンダーの上に月と年を表示するために使用される書式を設定します。</summary>
            <remarks>このプロパティのデフォルト値は'y'です。</remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ChartAnimationBuilder`1">
            <summary>ChartAnimationのビルダ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAnimationBuilder`1.AnimationMode(C1.Web.Mvc.AnimationMode)">
            <summary>AnimationModeプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAnimationBuilder`1.AxisAnimation(System.Boolean)">
            <summary>AxisAnimationプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAnimationBuilder`1.Duration(System.Int32)">
            <summary>Durationプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAnimationBuilder`1.Easing(C1.Web.Mvc.Easing)">
            <summary>Easingプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAnimationBuilder`1.#ctor(C1.Web.Mvc.ChartAnimation{`0})">
            <summary>１つのChartAnimationBuilderインスタンスを作成します。</summary>
            <param name="extender">ChartAnimationエクステンダ</param>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ChartGesturesBuilder`1">
            <summary>ChartGesturesのビルダ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartGesturesBuilder`1.Enable(System.Boolean)">
            <summary>Enableプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartGesturesBuilder`1.InteractiveAxes(C1.Web.Mvc.InteractiveAxes)">
            <summary>InteractiveAxesプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartGesturesBuilder`1.MouseAction(C1.Web.Mvc.MouseAction)">
            <summary>MouseActionプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartGesturesBuilder`1.PosX(System.Single)">
            <summary>PosXプロパティを設定します。</summary>
            <remarks>軸Xの初期位置を取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartGesturesBuilder`1.PosY(System.Single)">
            <summary>PosYプロパティを設定します。</summary>
            <remarks>軸Yの初期位置を取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartGesturesBuilder`1.ScaleX(System.Single)">
            <summary>ScaleXプロパティを設定します。</summary>
            <remarks>軸Xの初期スケールを取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartGesturesBuilder`1.ScaleY(System.Single)">
            <summary>ScaleYプロパティを設定します。</summary>
            <remarks>軸Yの初期スケールを取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartGesturesBuilder`1.#ctor(C1.Web.Mvc.ChartGestures{`0})">
            <summary>１つのChartGesturesBuilderインスタンスを作成します。</summary>
            <param name="extender">ChartGesturesエクステンダ</param>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.CollectionViewServiceBuilder`1">
            <summary>CollectionViewServiceのビルダ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CollectionViewServiceBuilder`1.DisableServerRead(System.Boolean)">
            <summary>サーバー側のソート、ページング、およびフィルタ処理を無効にするかどうかを設定します。</summary>
            <param name="value">サーバー側のソート、ページング、およびフィルタ処理を無効にするかどうかを示すブール値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CollectionViewServiceBuilder`1.Filter(System.Predicate{`0})">
            <summary>項目をビューに入れるかどうかを判断するために使用されるメソッドを設定します。</summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CollectionViewServiceBuilder`1.InitialItemsCount(System.Nullable{System.Int32})">
            <summary>初期にロードされる項目の数を決定する数値を設定します。</summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CollectionViewServiceBuilder`1.OnClientQueryData(System.String)">
            <summary>Ajaxクエリーデータを収集するJavaScript関数の名前を設定します。</summary>
            <param name="value">Ajaxクエリーデータを収集するJavaScript関数の名前</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CollectionViewServiceBuilder`1.OnClientQueryComplete(System.String)">
            <summary>Ajaxクエリー要求が完了したときに呼び出すJavaScript関数の名前を設定します。</summary>
            <param name="value">Ajaxクエリー要求が完了したときに呼び出すJavaScript関数の名前。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CollectionViewServiceBuilder`1.OnClientSourceCollectionChanging(System.String)">
            <summary>OnClientSourceCollectionChangingプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CollectionViewServiceBuilder`1.OnClientSourceCollectionChanged(System.String)">
            <summary>OnClientSourceCollectionChangedプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CollectionViewServiceBuilder`1.OnClientError(System.String)">
            <summary>Configurates the <see cref="P:C1.Web.Mvc.CollectionViewService`1.OnClientError" /> client event. サーバー側からエラーがあった場合に発生します。</summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CollectionViewServiceBuilder`1.OnClientReponseTextParsing(System.String)">
            <summary>Configurates the <see cref="P:C1.Web.Mvc.CollectionViewService`1.OnClientReponseTextParsing" /> client event. 応答テキストの解析時に発生します。</summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CollectionViewServiceBuilder`1.OnClientRequestDataStringifying(System.String)">
            <summary>Configurates the <see cref="P:C1.Web.Mvc.CollectionViewService`1.OnClientRequestDataStringifying" /> client event. 要求データのシリアライズ時に発生します。</summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CollectionViewServiceBuilder`1.#ctor(C1.Web.Mvc.CollectionViewService{`0})">
            <summary>コンストラクタ。</summary>
            <param name="component">構成する<see cref="T:C1.Web.Mvc.CollectionViewService`1" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CollectionViewServiceBuilder`1.Create(System.String)">
            <summary>作成アクションURLを設定します。</summary>
            <param name="value">値。</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CollectionViewServiceBuilder`1.Update(System.String)">
            <summary>更新アクションURLを設定します。</summary>
            <param name="value">値。</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CollectionViewServiceBuilder`1.Delete(System.String)">
            <summary>削除アクションURLを設定します。</summary>
            <param name="value">値。</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CollectionViewServiceBuilder`1.BatchEdit(System.String)">
            <summary>一括編集アクションURLを設定します。</summary>
            <param name="value">値。</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CollectionViewServiceBuilder`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>コレクションに連結します。</summary>
            <param name="value">値。</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CollectionViewServiceBuilder`1.Bind(System.String)">
            <summary>読み取りアクションURLを設定します。</summary>
            <param name="value">値。</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ColorPickerBuilder">
            <summary>ColorPicker のビルダ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColorPickerBuilder.#ctor(C1.Web.Mvc.ColorPicker)">
            <summary>１つの ColorPickerBuilder インスタンスを作成します。</summary>
            <param name="component">構成する<see cref="T:C1.Web.Mvc.ColorPicker" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColorPickerBuilder.ShowAlphaChannel(System.Boolean)">
            <summary>ShowAlphaChannel プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColorPickerBuilder.ShowColorString(System.Boolean)">
            <summary>ShowColorString プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColorPickerBuilder.OnClientValueChanged(System.String)">
            <summary>OnClientValueChanged プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColorPickerBuilder.Palette(System.Drawing.Color[])">
            <summary>Palette プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColorPickerBuilder.Palette(System.Collections.Generic.List{System.Drawing.Color})">
            <summary>Palette プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColorPickerBuilder.Value(System.Drawing.Color)">
            <summary>Value プロパティを設定します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ComboBoxBuilder`1">
            <summary>ComboBox のビルダ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ComboBoxBuilder`1.#ctor(C1.Web.Mvc.ComboBox{`0})">
            <summary>１つの ComboBoxBuilder インスタンスを作成します。</summary>
            <param name="component">構成する<see cref="T:C1.Web.Mvc.ComboBox`1" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ComboBoxBuilder`1.Name(System.String)">
            <summary>Nameプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.FlexChartBuilder`1">
            <summary>FlexChart コントロールのビルダ。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.FlexChartCoreBuilder`3">
            <summary>FlexChartCoreのビルダ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartCoreBuilder`3.#ctor(`1)">
            <summary>FlexCharCoreBuilderインスタンスを作成します。</summary>
            <param name="component">構成する<see cref="T:C1.Web.Mvc.FlexChartCore`1" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartCoreBuilder`3.AxisX(System.Action{C1.Web.Mvc.Fluent.ChartAxisBuilder{`0}})">
            <summary>AxisXプロパティを設定します。</summary>
            <param name="build">構築関数</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartCoreBuilder`3.AxisY(System.Action{C1.Web.Mvc.Fluent.ChartAxisBuilder{`0}})">
            <summary>AxisYプロパティを設定します。</summary>
            <param name="build">構築関数</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartCoreBuilder`3.BindingX(System.String)">
            <summary>BindingXプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartCoreBuilder`3.SymbolSize(System.Single)">
            <summary>SymbolSizeプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartCoreBuilder`3.InterpolateNulls(System.Boolean)">
            <summary>InterpolateNullsプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartCoreBuilder`3.LegendToggle(System.Boolean)">
            <summary>LegendToggleプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartCoreBuilder`3.OnClientSeriesVisibilityChanged(System.String)">
            <summary>OnClientSeriesVisibilityChangedプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartCoreBuilder`3.DataLabel(System.Action{C1.Web.Mvc.Fluent.DataLabelBuilder})">
            <summary>DataLabelプロパティを設定します。</summary>
            <param name="build">構築関数</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartCoreBuilder`3.SelectionIndex(System.Nullable{System.Int32})">
            <summary>SelectionIndexプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartCoreBuilder`3.Binding(System.String)">
            <summary>Bindingプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartCoreBuilder`3.Bind(System.String,System.String)">
            <summary>指定されたxデータフィールド名およびデータの読み取りに使用されるアクションのURLを使用してデータを連結します。</summary>
            <param name="xDataFieldName">xデータフィールドの名前を設定します。</param>
            <param name="readActionUrl">データの読み取りに使用されるアクションのURL</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartCoreBuilder`3.Bind(System.String,System.String,System.String)">
            <summary>指定されたxデータフィールド名、値プロパティ、およびデータの読み取りに使用されるアクションのURLを使用してデータを連結します。</summary>
            <param name="xDataFieldName">xデータフィールドの名前を設定します。</param>
            <param name="valueProperty">値データフィールドの名前を設定します。</param>
            <param name="readActionUrl">データの読み取りに使用されるアクションのURL</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartCoreBuilder`3.Bind(System.String,System.Collections.Generic.IEnumerable{`0})">
            <summary>指定されたxデータフィールド名およびデータソースを使用してデータを連結します。</summary>
            <param name="xDataFieldName">xデータフィールドの名前を設定します。</param>
            <param name="sourceCollection">データソース</param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartCoreBuilder`3.Bind(System.String,System.String,System.Collections.Generic.IEnumerable{`0})">
            <summary>データソースの指定されたxデータフィールド名および値プロパティを使用してデータを連結します。</summary>
            <param name="xDataFieldName">xデータフィールドの名前を設定します。</param>
            <param name="valueProperty">値データフィールドの名前を設定します。</param>
            <param name="sourceCollection">データソース</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartCoreBuilder`3.AxisX(C1.Web.Mvc.Chart.Position)">
            <summary>x軸の位置を設定します。</summary>
            <param name="position">位置</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartCoreBuilder`3.AxisY(C1.Web.Mvc.Chart.Position)">
            <summary>y軸の位置を設定します。</summary>
            <param name="position">位置</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartBuilder`1.#ctor(C1.Web.Mvc.FlexChart{`0})">
            <summary>１つの FlexChartBuilder インスタンスを作成します。</summary>
            <param name="component">構成する<see cref="T:C1.Web.Mvc.FlexChart`1" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartBuilder`1.ChartType(C1.Web.Mvc.Chart.ChartType)">
            <summary>作成するチャートのタイプを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartBuilder`1.Rotated(System.Boolean)">
            <summary>Rotated プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartBuilder`1.Stacking(C1.Web.Mvc.Chart.Stacking)">
            <summary>すべての系列オブジェクトに使用されるシンボルのサイズを設定します。
            このプロパティは、各系列の symbolSize プロパティで上書きできます。</summary>
            <remarks>系列オブジェクトを積み重ねるかどうかと、積み重ねる場合はその方法を取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartBuilder`1.Options(System.Action{C1.Web.Mvc.Fluent.ExtraOptionsBuilder})">
            <summary>Optionsプロパティを設定します。</summary>
            <param name="build">構築関数</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartBuilder`1.Series(System.Action{C1.Web.Mvc.Fluent.SeriesListFactory{`0,C1.Web.Mvc.FlexChart{`0},C1.Web.Mvc.ChartSeries{`0},C1.Web.Mvc.Fluent.ChartSeriesBuilder{`0},C1.Web.Mvc.Chart.ChartType}})">
            <summary>FlexChart系列を設定します。</summary>
            <param name="build">構築関数</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartBuilder`1.PlotAreas(System.Action{C1.Web.Mvc.Fluent.PlotAreaListFactory{`0,C1.Web.Mvc.FlexChart{`0},C1.Web.Mvc.PlotArea,C1.Web.Mvc.Fluent.PlotAreaBuilder}})">
            <summary>PlotAreaを設定します。</summary>
            <param name="build">構築関数</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartBuilder`1.AddExtender(C1.Web.Mvc.Extender)">
            <summary>エクステンダを追加します。</summary>
            <remarks>これは使用されなくなったため、削除してください。代わりに、特定のエクステンダを使用してください。</remarks>
            <param name="extender">指定されたエクステンダ。</param>
            <returns></returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.FlexGridBuilder`1">
            <summary>FlexGrid のビルダ。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3">
            <summary>FlexGridBaseのビルダ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.#ctor(`1)">
            <summary>1つのFlexGridBaseBuilderインスタンスを作成します。</summary>
            <param name="component">構成する<see cref="T:C1.Web.Mvc.FlexGridBase`1" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.AllowAddNew(System.Boolean)">
            <summary>AllowAddNewプロパティを設定します。</summary>
            <remarks>ユーザーがソースコレクションに項目を追加できるように、グリッドに新しい行テンプレートを用意するかどうかを示す値を取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.AllowDelete(System.Boolean)">
            <summary>AllowDeleteプロパティを設定します。</summary>
            <remarks>ユーザーが［Delete］キーを押すと、グリッドで選択されている行が削除されるかどうかを示す値を取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.AllowDragging(C1.Web.Mvc.Grid.AllowDragging)">
            <summary>AllowDraggingプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.AllowMerging(C1.Web.Mvc.Grid.AllowMerging)">
            <summary>AllowMergingプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.AllowResizing(C1.Web.Mvc.Grid.AllowResizing)">
            <summary>AllowResizingプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.AllowSorting(System.Boolean)">
            <summary>AllowSortingプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.AutoClipboard(System.Boolean)">
            <summary>AutoClipboardプロパティを設定します。</summary>
            <remarks>グリッドがクリップボードショートカットを処理するかどうかを取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.AutoGenerateColumns(System.Boolean)">
            <summary>AutoGenerateColumnsプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.AutoSizeMode(C1.Web.Mvc.Grid.AutoSizeMode)">
            <summary>AutoSizeModeプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.ChildItemsPath(System.String)">
            <summary>ChildItemsPathプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.FrozenColumns(System.Int32)">
            <summary>FrozenColumnsプロパティを設定します。</summary>
            <remarks>固定列の数を取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.FrozenRows(System.Int32)">
            <summary>FrozenRowsプロパティを設定します。</summary>
            <remarks>固定列の数を取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.GroupHeaderFormat(System.String)">
            <summary>GroupHeaderFormatプロパティを設定します。</summary>
            <remarks>グループヘッダーコンテンツを作成するために使用される書式文字列を取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.HeadersVisibility(C1.Web.Mvc.Grid.HeadersVisibility)">
            <summary>HeadersVisibilityプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.IsReadOnly(System.Boolean)">
            <summary>IsReadOnlyプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.SelectionMode(C1.Web.Mvc.Grid.SelectionMode)">
            <summary>SelectionModeプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.ShowGroups(System.Boolean)">
            <summary>ShowGroupsプロパティを設定します。</summary>
            <remarks>データグループを区切るためにグリッドにグループ行を挿入するかどうかを取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.ShowSort(System.Boolean)">
            <summary>ShowSortプロパティを設定します。</summary>
            <remarks>グリッドの列ヘッダーにソートインジケータを表示するかどうかを取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.TreeIndent(System.Int32)">
            <summary>TreeIndentプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientAutoSizedColumn(System.String)">
            <summary>OnClientAutoSizedColumnプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientAutoSizedRow(System.String)">
            <summary>OnClientAutoSizedRowプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientAutoSizingColumn(System.String)">
            <summary>OnClientAutoSizingColumnプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientAutoSizingRow(System.String)">
            <summary>OnClientAutoSizingRowプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientBeginningEdit(System.String)">
            <summary>OnClientBeginningEditプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientCellEditEnded(System.String)">
            <summary>OnClientCellEditEndedプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientCellEditEnding(System.String)">
            <summary>OnClientCellEditEndingプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientCopied(System.String)">
            <summary>OnClientCopiedプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientCopying(System.String)">
            <summary>OnClientCopyingプロパティを設定します。</summary>
            <remarks>ユーザーがクリップボードショートカットキーの1つを押して、クリップボードに選択コンテンツをコピーするときに発生します（autoClipboardプロパティを参照）。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientDeletedRow(System.String)">
            <summary>OnClientDeletedRowプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientDeletingRow(System.String)">
            <summary>OnClientDeletingRowプロパティを設定します。</summary>
            <remarks>ユーザーが［Delete］キーを押して、選択されている行を削除するときに発生します（allowDeleteプロパティを参照）。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientDraggedColumn(System.String)">
            <summary>OnClientDraggedColumnプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientDraggedRow(System.String)">
            <summary>OnClientDraggedRowプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientDraggingColumn(System.String)">
            <summary>OnClientDraggingColumnプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientDraggingRow(System.String)">
            <summary>OnClientDraggingRowプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientFormatItem(System.String)">
            <summary>OnClientFormatItemプロパティを設定します。</summary>
            <remarks>セルを表す要素が作成されたときに発生します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientGroupCollapsedChanged(System.String)">
            <summary>OnClientGroupCollapsedChangedプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientGroupCollapsedChanging(System.String)">
            <summary>OnClientGroupCollapsedChangingプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientItemsSourceChanged(System.String)">
            <summary>OnClientItemsSourceChangedプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientLoadedRows(System.String)">
            <summary>OnClientLoadedRowsプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientLoadingRows(System.String)">
            <summary>OnClientLoadingRowsプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientPasted(System.String)">
            <summary>OnClientPastedプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientPasting(System.String)">
            <summary>OnClientPastingプロパティを設定します。</summary>
            <remarks>ユーザーがクリップボードショートカットキーの1つを押して、クリップボードからコンテンツを貼り付けるときに発生します（autoClipboardプロパティを参照）。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientPrepareCellForEdit(System.String)">
            <summary>OnClientPrepareCellForEditプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientResizedColumn(System.String)">
            <summary>OnClientResizedColumnプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientResizedRow(System.String)">
            <summary>OnClientResizedRowプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientResizingColumn(System.String)">
            <summary>OnClientResizingColumnプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientResizingRow(System.String)">
            <summary>OnClientResizingRowプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientRowAdded(System.String)">
            <summary>OnClientRowAddedプロパティを設定します。</summary>
            <remarks>ユーザーが新しい行テンプレートを編集して新しい項目を作成するときに発生します（allowAddNewプロパティを参照）。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientRowEditEnded(System.String)">
            <summary>OnClientRowEditEndedプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientRowEditEnding(System.String)">
            <summary>OnClientRowEditEndingプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientScrollPositionChanged(System.String)">
            <summary>OnClientScrollPositionChangedプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientSelectionChanged(System.String)">
            <summary>OnClientSelectionChangedプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientSelectionChanging(System.String)">
            <summary>OnClientSelectionChangingプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientSortedColumn(System.String)">
            <summary>OnClientSortedColumnプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientSortingColumn(System.String)">
            <summary>OnClientSortingColumnプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientUpdatedLayout(System.String)">
            <summary>OnClientUpdatedLayoutプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientUpdatingLayout(System.String)">
            <summary>OnClientUpdatingLayoutプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientUpdatedView(System.String)">
            <summary>OnClientUpdatedViewプロパティを設定します。</summary>
            <remarks>現在のビューを構成する要素の作成/更新をグリッドが終了したときに発生します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientUpdatingView(System.String)">
            <summary>OnClientUpdatingViewプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.ItemFormatter(System.String)">
            <summary>ItemFormatterプロパティを設定します。</summary>
            <remarks>このグリッドのセルをカスタマイズするために使用される書式設定関数を取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.RowHeadersTemplate(System.Action{C1.Web.Mvc.Fluent.CellTemplateBuilder})">
            <summary>RowHeadersTemplateプロパティを設定します。</summary>
            <param name="build">構築関数</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.ColumnHeadersTemplate(System.Action{C1.Web.Mvc.Fluent.CellTemplateBuilder})">
            <summary>ColumnHeadersTemplateプロパティを設定します。</summary>
            <param name="build">構築関数</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.CellsTemplate(System.Action{C1.Web.Mvc.Fluent.CellTemplateBuilder})">
            <summary>CellsTemplateプロパティを設定します。</summary>
            <param name="build">構築関数</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.TopLeftCellsTemplate(System.Action{C1.Web.Mvc.Fluent.CellTemplateBuilder})">
            <summary>TopLeftCellsTemplateプロパティを設定します。</summary>
            <param name="build">構築関数</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.DeferResizing(System.Boolean)">
            <summary>DeferResizingプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.SortRowIndex(System.Nullable{System.Int32})">
            <summary>SortRowIndexプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.ColumnLayout(System.String)">
            <summary>ColumnLayoutプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.ShowMarquee(System.Boolean)">
            <summary>ShowMarqueeプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.ShowSelectedHeaders(C1.Web.Mvc.Grid.HeadersVisibility)">
            <summary>ShowSelectedHeadersプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.StickyHeaders(System.Boolean)">
            <summary>StickyHeadersプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.ImeEnabled(System.Boolean)">
            <summary>ImeEnabledプロパティを設定します。</summary>
            <remarks>編集モードでないときに、グリッドがIME（Input Method Editor）をサポートするかどうかを決定する値を取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.PreserveOutlineState(System.Boolean)">
            <summary>PreserveOutlineStateプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.PreserveSelectedState(System.Boolean)">
            <summary>PreserveSelectedStateプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.ShowErrors(System.Boolean)">
            <summary>ShowErrorsプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.ValidateEdits(System.Boolean)">
            <summary>ValidateEditsプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientRowEditStarted(System.String)">
            <summary>OnClientRowEditStartedプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientRowEditStarting(System.String)">
            <summary>OnClientRowEditStartingプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.NewRowAtTop(System.Boolean)">
            <summary>NewRowAtTopプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientDraggingColumnOver(System.String)">
            <summary>OnClientDraggingColumnOverプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientDraggingRowOver(System.String)">
            <summary>OnClientDraggingRowOverプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientPastedCell(System.String)">
            <summary>OnClientPastedCellプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientPastingCell(System.String)">
            <summary>OnClientPastingCellプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.ShowAlternatingRows(System.Boolean)">
            <summary>ShowAlternatingRowsプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.ColumnFootersTemplate(System.Action{C1.Web.Mvc.Fluent.CellTemplateBuilder})">
            <summary>ColumnFootersTemplateプロパティを設定します。</summary>
            <param name="build">構築関数</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.BottomLeftCellsTemplate(System.Action{C1.Web.Mvc.Fluent.CellTemplateBuilder})">
            <summary>BottomLeftCellsTemplateプロパティを設定します。</summary>
            <param name="build">構築関数</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.CloneFrozenCells(System.Nullable{System.Boolean})">
            <summary>
                <see cref="P:C1.Web.Mvc.FlexGridBase`1.CloneFrozenCells" />を構成します。スクロール中にFlexGridの体感的なパフォーマンスを向上させるために、固定されたセルを複製して個別の要素に表示するかどうかを決定する値を設定します。</summary>
            <remarks>デフォルトでは、このプロパティはnullに設定されます。この場合、グリッドは、ブラウザに応じた最適な設定を選択します。</remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.ItemValidator(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.FlexGridBase`1.ItemValidator" />を構成します。セルに有効な値が含まれるかどうかを決定するための検証関数を設定します。</summary>
            <remarks>検証関数を指定する場合、その検証関数は、セルの行と列のインデックスを保持する2つのパラメータを受け取り、エラーの説明文字列を返す必要があります。連結グリッドでは代わりに<see cref="P:C1.Web.Mvc.CollectionViewService`1.GetError" />プロパティを使用して検証を実行できるため、このプロパティは、非連結グリッドを使用する場合に特に便利です。</remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.KeyActionEnter(C1.Web.Mvc.Grid.KeyAction)">
            <summary>
                <see cref="P:C1.Web.Mvc.FlexGridBase`1.KeyActionEnter" />を構成します。［Enter］キーが押されたときに実行するアクションを設定します。</summary>
            <remarks>このプロパティのデフォルトの設定は<see cref="F:C1.Web.Mvc.Grid.KeyAction.MoveDown" />です。この場合は、コントロールの選択が次の行に移動します。これは、Excelの標準の動作です。</remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.KeyActionTab(C1.Web.Mvc.Grid.KeyAction)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexGridBase`1.KeyActionTab" />.
            Sets the action to perform when the TAB key is pressed.
            </summary>
            <remarks>
            The default setting for this property is <see cref="F:C1.Web.Mvc.Grid.KeyAction.None" />, which causes the browser to select the next or previous controls on the page when the TAB key is pressed. This is the recommended setting to improve page accessibility.  In previous versions, the default was set to <see cref="F:C1.Web.Mvc.Grid.KeyAction.Cycle" />, which caused the control to move the selection across and down he grid. This is the standard Excel behavior, but is not good for accessibility.
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.RowHeaderPath(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.FlexGridBase`1.RowHeaderPath" />を構成します。行ヘッダーセルの作成に使用されるプロパティの名前を設定します。</summary>
            <remarks>行ヘッダーセルは非表示で、選択できません。これはアクセシビリティツールとして使用されます。</remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.QuickAutoSize(System.Nullable{System.Boolean})">
            <summary>
                <see cref="P:C1.Web.Mvc.FlexGridBase`1.QuickAutoSize" /> を構成します。
            列を自動サイズ変更する際に、精度よりパフォーマンスを優先して最適化を行うかどうかを決定する値を設定します。</summary>
            <remarks>このプロパティを false に設定すると、クイック自動サイズ変更が無効になります。このプロパティを true に設定すると、各列の QuickAutoSize プロパティの値に従って、この機能が有効になります。このプロパティを null（デフォルト値）に設定すると、カスタム itemFormatter またはハンドラが formatItem イベントにアタッチされていないグリッドでは、この機能が有効になります。</remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.ShowDropDown(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.FlexGridBase`1.ShowDropDown" /> を構成します。
            ShowDropDown プロパティが true に設定されている列のセルにドロップダウンボタンを追加するかどうかを示す値を設定します。</summary>
            <remarks>ドロップダウンボタンは、DataMap が設定された編集可能な列にのみ表示されます。ユーザーがドロップダウンボタンをクリックすると、セルの値を選択するために使用できるリストがグリッドに表示されます。</remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.VirtualizationThreshold(System.Int32)">
            <summary>
                <see cref="P:C1.Web.Mvc.FlexGridBase`1.VirtualizationThreshold" /> を構成します。
            仮想化を有効にするために必要な最小の行数を設定します。</summary>
            <remarks>このプロパティはデフォルトで 0 に設定されています。つまり、仮想化は常に有効です。これで、連結のパフォーマンスが向上し、メモリ要件を抑えることができますが、スクロール中のパフォーマンスが少し低下します。グリッドの行数が少ない場合は（約 50 ～ 100）、このプロパティに少し大きな値（150 など）を設定することで、スクロールのパフォーマンスを向上させることができます。こうすると、仮想化が無効になり、連結の速度は低下しますが、スクロールの体感的なパフォーマンスは向上します。このプロパティを 200 より大きな値に設定することはお勧めできません。ロード時間が長くなり、すべての行のセルを作成するまで、グリッドが数秒間停止します。また、ページに大量の要素が含まれるため、ブラウザの動作が遅くなります。</remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.ScrollIntoView(System.Int32,System.Int32)">
            <summary>グリッドをスクロールして特定のセルを表示範囲に入れます。</summary>
            <param name="left">グリッドのスクロールバーの左スクロール位置。</param>
            <param name="top">グリッドのスクロールバーの上スクロール位置。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.Select(System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>セルの範囲を選択し、オプションで選択範囲を表示範囲までスクロールします。</summary>
            <param name="row">この範囲の最初の行のインデックス。</param>
            <param name="col">この範囲の最初の列のインデックス。</param>
            <param name="row2">この範囲の最後の行のインデックス。</param>
            <param name="col2">この範囲の最後の列のインデックス。</param>
            <remarks>row2およびcol2が設定されていないか、Nullに設定されている場合は、rowおよびcolで指定される1つのセルが選択されます。</remarks>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.Columns(System.Action{C1.Web.Mvc.Fluent.ListItemFactory{C1.Web.Mvc.Column,C1.Web.Mvc.Fluent.ColumnBuilder}})">
            <summary>
                <see cref="T:C1.Web.Mvc.Column" /> を設定します。</summary>
            <param name="builder">ビルダアクション</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.AddExtender(C1.Web.Mvc.Extender)">
            <summary>エクステンダを追加します。</summary>
            <remarks>これは使用されなくなったため、削除してください。代わりに、特定のエクステンダを使用してください。</remarks>
            <param name="extender">指定されたエクステンダ。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.GroupBy(System.String[])">
            <summary>
                <see cref="T:C1.Web.Mvc.PropertyGroupDescription" />を設定します。</summary>
            <param name="names">グループ化で使用されるプロパティ名</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OrderBy(System.String[])">
            <summary>
                <see cref="T:C1.Web.Mvc.SortDescription" />を設定します。</summary>
            <param name="names">ソートの基準になる名前</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OrderByDescending(System.String[])">
            <summary>
                <see cref="T:C1.Web.Mvc.SortDescription" />を設定します。</summary>
            <param name="names">降順のソートの基準になる名前</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.PageSize(System.Int32)">
            <summary>指定されたページサイズでItemsSourceをページング可能にします。
            0はページングを無効にします。</summary>
            <param name="pageSize">ページサイズ</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.ShowColumnFooters(System.Boolean,System.String)">
            <summary>列フッターパネルに集計を表示するグループ行を表示するかどうかを設定します。</summary>
            <param name="value">グループ行を表示するかどうかを示すブール値。</param>
            <param name="rowHeaderText">グループ行の行ヘッダーテキスト。これを設定しない場合は、デフォルト値のシグマ文字が使用されます。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBuilder`1.#ctor(C1.Web.Mvc.FlexGrid{`0})">
            <summary>１つの FlexGridBuilder インスタンスを作成します。</summary>
            <param name="component">構成する<see cref="T:C1.Web.Mvc.FlexGrid`1" />オブジェクト。</param>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.FlexGridDetailProviderBuilder`1">
            <summary>FlexGridDetailProviderのビルダ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridDetailProviderBuilder`1.CreateDetailCell(System.String)">
            <summary>CreateDetailCellプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridDetailProviderBuilder`1.DetailVisibilityMode(C1.Web.Mvc.Grid.DetailVisibilityMode)">
            <summary>DetailVisibilityModeプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridDetailProviderBuilder`1.MaxHeight(System.Int32)">
            <summary>MaxHeightプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridDetailProviderBuilder`1.RowHasDetail(System.String)">
            <summary>RowHasDetailプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridDetailProviderBuilder`1.DetailRowTemplateId(System.String)">
            <summary>DetailRowTemplateIdプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridDetailProviderBuilder`1.DetailRowTemplateContent(System.String)">
            <summary>DetailRowTemplateContentプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridDetailProviderBuilder`1.DisposeDetailCell(System.String)">
            <summary>DisposeDetailCellプロパティを設定します。</summary>
            <remarks>詳細セルを破棄するためのコールバック関数を取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridDetailProviderBuilder`1.IsAnimated(System.Boolean)">
            <summary>IsAnimatedプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridDetailProviderBuilder`1.#ctor(C1.Web.Mvc.FlexGridDetailProvider{`0})">
            <summary>1つのFlexGridDetailProviderBuilderインスタンスを作成します。</summary>
            <param name="extender">FlexGridDetailProviderエクステンダ。</param>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.FlexGridGroupPanelBuilder`1">
            <summary>FlexGridGroupPanelのビルダ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridGroupPanelBuilder`1.MaxGroups(System.Int32)">
            <summary>MaxGroupsプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridGroupPanelBuilder`1.HideGroupedColumns(System.Boolean)">
            <summary>HideGroupedColumnsプロパティを設定します。</summary>
            <remarks>パネルでオーナーグリッドのグループ化列を非表示にするかどうかを示す値を取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridGroupPanelBuilder`1.Placeholder(System.String)">
            <summary>Placeholderプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridGroupPanelBuilder`1.IsDisabled(System.Boolean)">
            <summary>IsDisabledプロパティを設定します。</summary>
            <remarks>コントロールが無効かどうかを判定する値を取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridGroupPanelBuilder`1.#ctor(C1.Web.Mvc.FlexGridGroupPanel{`0})">
            <summary>1つのFlexGridGroupPanelBuilderインスタンスを作成します。</summary>
            <param name="extender">FlexGridGroupPanelエクステンダ。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridGroupPanelBuilder`1.Selector(System.String)">
            <summary>Selectorプロパティを設定します。</summary>
            <remarks>セレクタを指定する値を取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.FlexPieBuilder`1">
            <summary>FlexPie コントロールのビルダ。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.FlexPieBaseBuilder`3">
            <summary>FlexPieコントロールのビルダ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexPieBaseBuilder`3.#ctor(`1)">
            <summary>1つのFlexPieBaseBuilderインスタンスを作成します。</summary>
            <param name="component">構成する<see cref="T:C1.Web.Mvc.FlexPieBase`1" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexPieBaseBuilder`3.BindingName(System.String)">
            <summary>BindingNameプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexPieBaseBuilder`3.InnerRadius(System.Single)">
            <summary>InnerRadiusプロパティを設定します。</summary>
            <remarks>円の内側半径のサイズを取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexPieBaseBuilder`3.IsAnimated(System.Boolean)">
            <summary>IsAnimatedプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexPieBaseBuilder`3.Offset(System.Single)">
            <summary>Offsetプロパティを設定します。</summary>
            <remarks>円の中心からのセグメントのオフセットを取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexPieBaseBuilder`3.Reversed(System.Boolean)">
            <summary>Reversedプロパティを設定します。</summary>
            <remarks>角度を反転（反時計回り）するかどうかを取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexPieBaseBuilder`3.SelectedItemOffset(System.Single)">
            <summary>SelectedItemOffsetプロパティを設定します。</summary>
            <remarks>円の中心からの選択されたセグメントのオフセットを取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexPieBaseBuilder`3.SelectedItemPosition(C1.Web.Mvc.Chart.Position)">
            <summary>SelectedItemPositionプロパティを設定します。</summary>
            <remarks>選択されたセグメントの位置を取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexPieBaseBuilder`3.StartAngle(System.Single)">
            <summary>StartAngleプロパティを設定します。</summary>
            <remarks>円グラフセグメントの開始角度（度単位）を取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexPieBaseBuilder`3.DataLabel(System.Action{C1.Web.Mvc.Fluent.PieDataLabelBuilder})">
            <summary>DataLabelプロパティを設定します。</summary>
            <param name="build">構築関数</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexPieBaseBuilder`3.SelectedIndex(System.Int32)">
            <summary>SelectedIndexプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexPieBaseBuilder`3.Binding(System.String)">
            <summary>Bindingプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexPieBaseBuilder`3.Bind(System.String,System.String,System.String)">
            <summary>指定された名前プロパティ、値プロパティ、およびデータの読み取りに使用されるアクションのURLを使用してデータを連結します。</summary>
            <param name="nameProperty">データ項目の名前を含むプロパティの名前を取得または設定します。</param>
            <param name="valueProperty">Y値を含むプロパティの名前。</param>
            <param name="readActionUrl">データの読み取りに使用されるアクションのURL</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexPieBaseBuilder`3.Bind(System.String,System.String,System.Collections.Generic.IEnumerable{`0})">
            <summary>データソースの指定された名前プロパティおよび値プロパティを使用してデータを連結します。</summary>
            <param name="nameProperty">データ項目の名前を含むプロパティの名前を取得または設定します。</param>
            <param name="valueProperty">Y値を含むプロパティの名前。</param>
            <param name="sourceCollection">データソース</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexPieBuilder`1.#ctor(C1.Web.Mvc.FlexPie{`0})">
            <summary>１つの FlexPieBuilder インスタンスを作成します。</summary>
            <param name="component">構成する<see cref="T:C1.Web.Mvc.FlexPie`1" />オブジェクト。</param>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.FlexRadarBuilder`1">
            <summary>FlexRadarのビルダ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexRadarBuilder`1.#ctor(C1.Web.Mvc.FlexRadar{`0})">
            <summary>1つのFlexRadarBuilderインスタンスを作成します。</summary>
            <param name="component">構成する<see cref="T:C1.Web.Mvc.FlexRadar`1" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexRadarBuilder`1.ChartType(C1.Web.Mvc.Chart.RadarChartType)">
            <summary>ChartTypeプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexRadarBuilder`1.Reversed(System.Boolean)">
            <summary>Reversedプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexRadarBuilder`1.Stacking(C1.Web.Mvc.Chart.Stacking)">
            <summary>Stackingプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexRadarBuilder`1.StartAngle(System.Int32)">
            <summary>StartAngleプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexRadarBuilder`1.TotalAngle(System.Int32)">
            <summary>TotalAngleプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexRadarBuilder`1.Series(System.Action{C1.Web.Mvc.Fluent.SeriesListBaseFactory{`0,C1.Web.Mvc.FlexRadar{`0},C1.Web.Mvc.FlexRadarSeries{`0},C1.Web.Mvc.Fluent.FlexRadarSeriesBuilder{`0},C1.Web.Mvc.Chart.RadarChartType}})">
            <summary>FlexChart系列を設定します。</summary>
            <param name="build">構築関数</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.InputDateBuilder">
            <summary>InputDate のビルダ。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.InputDateBaseBuilder`2">
            <summary>InputDateBaseのビルダ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputDateBaseBuilder`2.#ctor(`0)">
            <summary>１つのInputDateBaseBuilderインスタンスを作成します。</summary>
            <param name="component">構成する<see cref="T:C1.Web.Mvc.InputDateBase" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputDateBaseBuilder`2.Value(System.Nullable{System.DateTime})">
            <summary>Valueプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputDateBaseBuilder`2.Required(System.Boolean)">
            <summary>Requiredプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputDateBaseBuilder`2.Min(System.DateTime)">
            <summary>Minプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputDateBaseBuilder`2.Max(System.DateTime)">
            <summary>Maxプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputDateBaseBuilder`2.Format(System.String)">
            <summary>Formatプロパティを設定します。</summary>
            <remarks>選択した日付の表示に使用される書式を取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputDateBaseBuilder`2.Mask(System.String)">
            <summary>Maskプロパティを設定します。</summary>
            <remarks>編集中に使用するマスクを取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputDateBaseBuilder`2.OnClientValueChanged(System.String)">
            <summary>OnClientValueChangedプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputDateBaseBuilder`2.ItemValidator(System.String)">
            <summary>ItemValidatorプロパティを設定します。</summary>
            <remarks>日付が選択の対象になるかどうかを決定するJavaScript validator関数の名前を取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputDateBaseBuilder`2.InputType(System.String)">
            <summary>InputTypeプロパティを設定します。</summary>
            <remarks>コントロールによってホストされるHTML入力要素の"type"属性を取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputDateBaseBuilder`2.ItemFormatter(System.String)">
            <summary>ItemFormatterプロパティを設定します。</summary>
            <remarks>ドロップダウンカレンダーの日付をカスタマイズするための書式設定関数を取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputDateBaseBuilder`2.IsRequired(System.Boolean)">
            <summary>IsRequiredプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputDateBaseBuilder`2.SelectionMode(C1.Web.Mvc.DateSelectionMode)">
            <summary>SelectionModeプロパティを設定します。</summary>
            <remarks>ユーザーが日または月を選択できるか、何も値を選択できないかを示す値を取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputDateBuilder.#ctor(C1.Web.Mvc.InputDate)">
            <summary>１つの InputDateBuilder インスタンスを作成します。</summary>
            <param name="component">構成する<see cref="T:C1.Web.Mvc.InputDate" />オブジェクト。</param>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.InputDateTimeBuilder">
            <summary>InputDateTimeのビルダ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputDateTimeBuilder.#ctor(C1.Web.Mvc.InputDateTime)">
            <summary>１つのInputDateTimeBuilderインスタンスを作成します。</summary>
            <param name="component">構成する<see cref="T:C1.Web.Mvc.InputDateTime" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputDateTimeBuilder.TimeFormat(System.String)">
            <summary>TimeFormatプロパティを設定します。</summary>
            <remarks>ドロップダウンリスト内の時刻の表示に使用される書式を取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputDateTimeBuilder.TimeMax(System.DateTime)">
            <summary>TimeMaxプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputDateTimeBuilder.TimeMin(System.DateTime)">
            <summary>TimeMinプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputDateTimeBuilder.TimeStep(System.Int32)">
            <summary>TimeStepプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.InputMaskBuilder">
            <summary>InputMask のビルダ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputMaskBuilder.#ctor(C1.Web.Mvc.InputMask)">
            <summary>１つの InputMaskBuilder インスタンスを作成します。</summary>
            <param name="component">構成する<see cref="T:C1.Web.Mvc.InputMask" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputMaskBuilder.Value(System.String)">
            <summary>Value プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputMaskBuilder.Mask(System.String)">
            <summary>Mask プロパティを設定します。</summary>
            <remarks>ユーザーのキー入力に伴って入力を検証するために使用されるマスクを取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputMaskBuilder.PromptChar(System.Char)">
            <summary>PromptChar プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputMaskBuilder.Placeholder(System.String)">
            <summary>Placeholder プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputMaskBuilder.OnClientValueChanged(System.String)">
            <summary>OnClientValueChanged プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputMaskBuilder.RawValue(System.String)">
            <summary>RawValueプロパティを設定します。</summary>
            <remarks>コントロールの未加工の値を取得または設定します（マスクリテラルを除く）。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputMaskBuilder.IsRequired(System.Boolean)">
            <summary>IsRequiredプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.InputNumberBuilder">
            <summary>InputNumber のビルダ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputNumberBuilder.#ctor(C1.Web.Mvc.InputNumber)">
            <summary>１つの InputNumberBuilder インスタンスを作成します。</summary>
            <param name="component">構成する<see cref="T:C1.Web.Mvc.InputNumber" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputNumberBuilder.InputType(System.String)">
            <summary>InputType プロパティを設定します。</summary>
            <remarks>コントロールによってホストされる HTML 入力要素の "type" 属性を取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputNumberBuilder.Value(System.Nullable{System.Double})">
            <summary>Value プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputNumberBuilder.Required(System.Boolean)">
            <summary>Required プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputNumberBuilder.Min(System.Nullable{System.Double})">
            <summary>Min プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputNumberBuilder.Max(System.Nullable{System.Double})">
            <summary>Max プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputNumberBuilder.Step(System.Double)">
            <summary>Step プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputNumberBuilder.Format(System.String)">
            <summary>Format プロパティを設定します。</summary>
            <remarks>編集中の数値を表示するために使用される書式を取得または設定します（Globalize を参照）。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputNumberBuilder.Text(System.String)">
            <summary>Text プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputNumberBuilder.Placeholder(System.String)">
            <summary>Placeholder プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputNumberBuilder.ShowSpinner(System.Boolean)">
            <summary>ShowSpinner プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputNumberBuilder.OnClientTextChanged(System.String)">
            <summary>OnClientTextChanged プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputNumberBuilder.OnClientValueChanged(System.String)">
            <summary>OnClientValueChanged プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputNumberBuilder.IsReadOnly(System.Boolean)">
            <summary>IsReadOnlyプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputNumberBuilder.IsRequired(System.Boolean)">
            <summary>IsRequiredプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.InputTimeBuilder`1">
            <summary>InputTimeのビルダ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputTimeBuilder`1.#ctor(C1.Web.Mvc.InputTime{`0})">
            <summary>1つのInputTimeBuilderインスタンスを作成します。</summary>
            <param name="component">構成する<see cref="T:C1.Web.Mvc.InputTime`1" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputTimeBuilder`1.Value(System.Nullable{System.DateTime})">
            <summary>Valueプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputTimeBuilder`1.Min(System.DateTime)">
            <summary>Minプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputTimeBuilder`1.Max(System.DateTime)">
            <summary>Maxプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputTimeBuilder`1.Format(System.String)">
            <summary>Formatプロパティを設定します。</summary>
            <remarks>選択された時間を表示するために使用される書式を取得または設定します（Globalizeを参照）。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputTimeBuilder`1.Mask(System.String)">
            <summary>Maskプロパティを設定します。</summary>
            <remarks>編集中に使用するマスクを取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputTimeBuilder`1.OnClientValueChanged(System.String)">
            <summary>OnClientValueChangedプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputTimeBuilder`1.Step(System.Int32)">
            <summary>Stepプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputTimeBuilder`1.InputType(System.String)">
            <summary>InputTypeプロパティを設定します。</summary>
            <remarks>コントロールによってホストされるHTML入力要素の"type"属性を取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputTimeBuilder`1.Name(System.String)">
            <summary>Nameプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputTimeBuilder`1.Step(System.TimeSpan)">
            <summary>Stepプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputTimeBuilder`1.Step(System.Double)">
            <summary>Stepプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.LinearGaugeBuilder">
            <summary>LinearGauge のビルダ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.LinearGaugeBuilder.#ctor(C1.Web.Mvc.LinearGauge)">
            <summary>１つの LinearGaugeBuilder インスタンスを作成します。</summary>
            <param name="component">構成する<see cref="T:C1.Web.Mvc.LinearGauge" />オブジェクト。</param>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.LineMarkerBuilder`1">
            <summary>LineMarkerのビルダ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.LineMarkerBuilder`1.IsVisible(System.Boolean)">
            <summary>IsVisibleプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.LineMarkerBuilder`1.SeriesIndex(System.Nullable{System.Int32})">
            <summary>SeriesIndexプロパティを設定します。</summary>
            <remarks>LineMarkerが表示されるチャート内の系列のインデックスを取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.LineMarkerBuilder`1.HorizontalPosition(System.Nullable{System.Single})">
            <summary>HorizontalPositionプロパティを設定します。</summary>
            <remarks>プロットエリアに対するLineMarkerの水平位置を取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.LineMarkerBuilder`1.Content(System.String)">
            <summary>Contentプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.LineMarkerBuilder`1.VerticalPosition(System.Nullable{System.Single})">
            <summary>VerticalPositionプロパティを設定します。</summary>
            <remarks>プロットエリアに対するLineMarkerの垂直位置を取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.LineMarkerBuilder`1.OnClientPositionChanged(System.String)">
            <summary>OnClientPositionChangedプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.LineMarkerBuilder`1.DragThreshold(System.Int32)">
            <summary>DragThresholdプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.LineMarkerBuilder`1.DragContent(System.Boolean)">
            <summary>DragContentプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.LineMarkerBuilder`1.DragLines(System.Boolean)">
            <summary>DragLinesプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.LineMarkerBuilder`1.#ctor(C1.Web.Mvc.LineMarker{`0})">
            <summary>1つのFlexGridFilterBuilderインスタンスを作成します。</summary>
            <param name="extender">FlexGridFilterエクステンダ。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.LineMarkerBuilder`1.Alignment(C1.Web.Mvc.Chart.LineMarkerAlignment)">
            <summary>Alignmentプロパティを設定します。</summary>
            <remarks></remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.LineMarkerBuilder`1.Lines(C1.Web.Mvc.Chart.LineMarkerLines)">
            <summary>Linesプロパティを設定します。</summary>
            <remarks></remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.LineMarkerBuilder`1.Interaction(C1.Web.Mvc.Chart.LineMarkerInteraction)">
            <summary>Interactionプロパティを設定します。</summary>
            <remarks></remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ListBoxBuilder`1">
            <summary>ListBox のビルダ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ListBoxBuilder`1.#ctor(C1.Web.Mvc.ListBox{`0})">
            <summary>１つの ListBoxBuilder インスタンスを作成します。</summary>
            <param name="component">構成する<see cref="T:C1.Web.Mvc.ListBox`1" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ListBoxBuilder`1.DisplayMemberPath(System.String)">
            <summary>DisplayMemberPath プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ListBoxBuilder`1.SelectedValuePath(System.String)">
            <summary>SelectedValuePath プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ListBoxBuilder`1.IsContentHtml(System.Boolean)">
            <summary>IsContentHtml プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ListBoxBuilder`1.ItemFormatter(System.String)">
            <summary>ItemFormatter プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ListBoxBuilder`1.SelectedIndex(System.Int32)">
            <summary>SelectedIndex プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ListBoxBuilder`1.SelectedItem(`0)">
            <summary>SelectedItem プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ListBoxBuilder`1.SelectedValue(System.Object)">
            <summary>SelectedValue プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ListBoxBuilder`1.MaxHeight(System.Double)">
            <summary>MaxHeight プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ListBoxBuilder`1.ItemTemplateId(System.String)">
            <summary>ItemTemplateId プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ListBoxBuilder`1.OnClientSelectedIndexChanged(System.String)">
            <summary>OnClientSelectedIndexChanged プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ListBoxBuilder`1.OnClientItemsChanged(System.String)">
            <summary>OnClientItemsChanged プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ListBoxBuilder`1.CheckedMemberPath(System.String)">
            <summary>CheckedMemberPathプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ListBoxBuilder`1.OnClientItemChecked(System.String)">
            <summary>OnClientItemCheckedプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ListBoxBuilder`1.ItemTemplateContent(System.String)">
            <summary>ItemTemplateContentプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ListBoxBuilder`1.OnClientCheckedItemsChanged(System.String)">
            <summary>OnClientCheckedItemsChangedプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ListBoxBuilder`1.OnClientFormatItem(System.String)">
            <summary>OnClientFormatItemプロパティを設定します。</summary>
            <remarks>リスト項目を表す要素が作成されたときに発生します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ListBoxBuilder`1.OnClientLoadedItems(System.String)">
            <summary>OnClientLoadedItemsプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ListBoxBuilder`1.OnClientLoadingItems(System.String)">
            <summary>OnClientLoadingItemsプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ListBoxBuilder`1.CheckedIndexes(System.Collections.Generic.IList{System.Int32})">
            <summary>CheckedIndexesプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ListBoxBuilder`1.CheckedValues(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>CheckedValuesプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ListBoxBuilder`1.ItemRole(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.ListBox`1.ItemRole" />を構成します。リスト項目に追加された"role"属性の値を設定します。</summary>
            <remarks>このプロパティのデフォルト値は"option"です。</remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ListBoxBuilder`1.CheckedIndexes(System.Int32[])">
            <summary>CheckedIndexesプロパティを設定します。</summary>
            <remarks>現在オンに設定されているインデックスが含まれる配列を取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ListBoxBuilder`1.CheckedValues(System.Object[])">
            <summary>CheckedValuesプロパティを設定します。</summary>
            <remarks>現在オンに設定されている値を含むリストを取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.MenuBaseBuilder`3">
            <summary>MenuBase のビルダ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MenuBaseBuilder`3.#ctor(`1)">
            <summary>１つの MenuBaseBuilder インスタンスを作成します。</summary>
            <param name="component">構成する<see cref="T:C1.Web.Mvc.MenuBase`1" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MenuBaseBuilder`3.Header(System.String)">
            <summary>Header プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MenuBaseBuilder`3.Command(System.Action{C1.Web.Mvc.Fluent.MenuCommandBuilder})">
            <summary>Command プロパティを設定します。</summary>
            <param name="build">構築関数</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MenuBaseBuilder`3.CommandPath(System.String)">
            <summary>CommandPath プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MenuBaseBuilder`3.CommandParameterPath(System.String)">
            <summary>CommandParameterPath プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MenuBaseBuilder`3.OnClientItemClicked(System.String)">
            <summary>OnClientItemClicked プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MenuBaseBuilder`3.Owner(System.String)">
            <summary>Ownerプロパティを設定します。</summary>
            <remarks>このメニューを所有する要素のセレクタ文字列を取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MenuBaseBuilder`3.IsButton(System.Boolean)">
            <summary>IsButtonプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MenuBaseBuilder`3.HeaderPath(System.String)">
            <summary>このメソッドを削除するためにオーバーライドします。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MenuBaseBuilder`3.AutoExpandSelection(System.Boolean)">
            <summary>このメソッドを削除するためにオーバーライドします。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.MultiSelectBuilder`1">
            <summary>MultiSelectのビルダ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiSelectBuilder`1.#ctor(C1.Web.Mvc.MultiSelect{`0})">
            <summary>1つのMultiSelectBuilderインスタンスを作成します。</summary>
            <param name="component">構成する<see cref="T:C1.Web.Mvc.MultiSelect`1" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiSelectBuilder`1.CheckedIndexes(System.Collections.Generic.IList{System.Int32})">
            <summary>CheckedIndexesプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiSelectBuilder`1.CheckedMemberPath(System.String)">
            <summary>CheckedMemberPathプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiSelectBuilder`1.HeaderFormat(System.String)">
            <summary>HeaderFormatプロパティを設定します。</summary>
            <remarks>コントロール内のオンに設定された項目がMaxHeaderItemsよりも多いときに、ヘッダーコンテンツの作成に使用される書式文字列を取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiSelectBuilder`1.HeaderFormatter(System.String)">
            <summary>HeaderFormatterプロパティを設定します。</summary>
            <remarks>コントロールヘッダー内のHTMLを取得する関数を取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiSelectBuilder`1.MaxHeaderItems(System.Int32)">
            <summary>MaxHeaderItemsプロパティを設定します。</summary>
            <remarks>コントロールヘッダーに表示する項目の最大数を取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiSelectBuilder`1.OnClientCheckedItemsChanged(System.String)">
            <summary>OnClientCheckedItemsChangedプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiSelectBuilder`1.CheckedValues(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>CheckedValuesプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiSelectBuilder`1.AutoExpandSelection(System.Boolean)">
            <summary>このメソッドを削除するためにオーバーライドします。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiSelectBuilder`1.HeaderPath(System.String)">
            <summary>このメソッドを削除するためにオーバーライドします。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiSelectBuilder`1.IsRequired(System.Boolean)">
            <summary>このメソッドを削除するためにオーバーライドします。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiSelectBuilder`1.IsEditable(System.Boolean)">
            <summary>このメソッドを削除するためにオーバーライドします。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiSelectBuilder`1.SelectedIndex(System.Int32)">
            <summary>このメソッドを削除するためにオーバーライドします。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiSelectBuilder`1.SelectedItem(`0)">
            <summary>このメソッドを削除するためにオーバーライドします。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiSelectBuilder`1.SelectedValue(System.Object)">
            <summary>このメソッドを削除するためにオーバーライドします。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiSelectBuilder`1.OnClientTextChanged(System.String)">
            <summary>このメソッドを削除するためにオーバーライドします。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiSelectBuilder`1.Text(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.MultiSelect`1.Text" />を構成します。このプロパティを削除するためにオーバーライドします。</summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiSelectBuilder`1.SelectAllLabel(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.MultiSelect`1.SelectAllLabel" /> を構成します。
            「Select All（すべて選択）」チェックボックスのラベルとして使用される文字列を設定します。このチェックボックスは、ShowSelectAllCheckbox プロパティが true に設定されている場合に表示されます。</summary>
            <remarks>このプロパティはデフォルトで null に設定されています。この場合、コントロールには、「Select All（すべて選択）」に相当するローカライズされた文字列が表示されます。</remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiSelectBuilder`1.ShowSelectAllCheckbox(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.MultiSelect`1.ShowSelectAllCheckbox" /> を構成します。
            コントロールの項目の上に「Select All（すべて選択）」チェックボックスを表示して、すべての項目の選択または選択解除を可能にするかどうかを設定します。</summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiSelectBuilder`1.Name(System.String)">
            <summary>Nameプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiSelectBuilder`1.CheckedIndexes(System.Int32[])">
            <summary>CheckedIndexesプロパティを設定します。</summary>
            <remarks>現在オンに設定されているインデックスが含まれる配列を取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiSelectBuilder`1.CheckedValues(System.Object[])">
            <summary>CheckedValuesプロパティを設定します。</summary>
            <remarks>現在オンに設定されている値を含むリストを取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.PagerBuilder">
            <summary>Pagerのビルダ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PagerBuilder.#ctor(C1.Web.Mvc.Pager)">
            <summary>1つのPagerBuilderインスタンスを作成します。</summary>
            <param name="component">構成する<see cref="T:C1.Web.Mvc.Pager" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PagerBuilder.Owner(System.String)">
            <summary>Ownerプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.PopupBuilder">
            <summary>Popupのビルダ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PopupBuilder.#ctor(C1.Web.Mvc.Popup)">
            <summary>1つのPopupBuilderインスタンスを作成します。</summary>
            <param name="component">構成する<see cref="T:C1.Web.Mvc.Popup" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PopupBuilder.Owner(System.String)">
            <summary>Ownerプロパティを設定します。</summary>
            <remarks>このポップアップを所有する要素を決定するセレクタ文字列を取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PopupBuilder.FadeIn(System.Boolean)">
            <summary>FadeInプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PopupBuilder.FadeOut(System.Boolean)">
            <summary>FadeOutプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PopupBuilder.Modal(System.Boolean)">
            <summary>Modalプロパティを設定します。</summary>
            <remarks>Popupをモーダルダイアログとして表示するかどうかを判定する値を取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PopupBuilder.HideTrigger(C1.Web.Mvc.PopupTrigger)">
            <summary>HideTriggerプロパティを設定します。</summary>
            <remarks>Popupを非表示にするアクションを取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PopupBuilder.ShowTrigger(C1.Web.Mvc.PopupTrigger)">
            <summary>ShowTriggerプロパティを設定します。</summary>
            <remarks>Popupを表示するアクションを取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PopupBuilder.OnClientHiding(System.String)">
            <summary>OnClientHidingプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PopupBuilder.OnClientHidden(System.String)">
            <summary>OnClientHiddenプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PopupBuilder.OnClientShowing(System.String)">
            <summary>OnClientShowingプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PopupBuilder.OnClientShown(System.String)">
            <summary>OnClientShownプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PopupBuilder.RemoveOnHide(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.Popup.RemoveOnHide" /> を構成します。
            ポップアップが非表示にされたときに、ポップアップ要素を非表示にするのではなく、DOM から削除するかどうかを決定する値を設定します。</summary>
            <remarks>このプロパティは、デフォルトで true に設定されます。</remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PopupBuilder.Content(System.String)">
            <summary>Contentプロパティを設定します。</summary>
            <remarks>ポップアップが表示するHTMLコンテンツを設定します。</remarks>
            <param name="value">文字列値。</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PopupBuilder.Content(System.Func{System.Object,System.Object})">
            <summary>Contentプロパティを設定します。</summary>
            <remarks>ポップアップが表示するHTMLコンテンツを設定します。</remarks>
            <param name="value">標準のHTMLタグまたはテキストタグ（Razor構文）でラップされたコンテンツ。</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.RadialGaugeBuilder">
            <summary>RadialGauge のビルダ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.RadialGaugeBuilder.#ctor(C1.Web.Mvc.RadialGauge)">
            <summary>１つの RadialGaugeBuilder インスタンスを作成します。</summary>
            <param name="component">構成する<see cref="T:C1.Web.Mvc.RadialGauge" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.RadialGaugeBuilder.AutoScale(System.Boolean)">
            <summary>AutoScale プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.RadialGaugeBuilder.StartAngle(System.Double)">
            <summary>StartAngle プロパティを設定します。</summary>
            <remarks>ゲージの開始角度（度単位）を取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.RadialGaugeBuilder.SweepAngle(System.Double)">
            <summary>SweepAngle プロパティを設定します。</summary>
            <remarks>ゲージの移動角度（度単位）を取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.RadialGaugeBuilder.ShowText(C1.Web.Mvc.ShowText)">
            <summary>ShowText プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.RangeSelectorBuilder`1">
            <summary>RangeSelectorのビルダ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.RangeSelectorBuilder`1.IsVisible(System.Boolean)">
            <summary>IsVisibleプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.RangeSelectorBuilder`1.Min(System.Nullable{System.Single})">
            <summary>Minプロパティを設定します。</summary>
            <remarks>範囲の最小値を取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.RangeSelectorBuilder`1.Max(System.Nullable{System.Single})">
            <summary>Maxプロパティを設定します。</summary>
            <remarks>範囲の最大値を取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.RangeSelectorBuilder`1.OnClientRangeChanged(System.String)">
            <summary>OnClientRangeChangedプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.RangeSelectorBuilder`1.Seamless(System.Boolean)">
            <summary>Seamlessプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.RangeSelectorBuilder`1.MinScale(System.Double)">
            <summary>MinScaleプロパティを設定します。</summary>
            <remarks>範囲セレクタの最小範囲スケールを取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.RangeSelectorBuilder`1.MaxScale(System.Double)">
            <summary>MaxScaleプロパティを設定します。</summary>
            <remarks>範囲セレクタの最小範囲スケールを取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.RangeSelectorBuilder`1.#ctor(C1.Web.Mvc.RangeSelector{`0})">
            <summary>1つのFlexGridFilterBuilderインスタンスを作成します。</summary>
            <param name="extender">FlexGridFilterエクステンダ。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.RangeSelectorBuilder`1.Orientation(C1.Web.Mvc.Chart.Orientation)">
            <summary>Orientationプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.SunburstBuilder`1">
            <summary>Sunburstのビルダ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SunburstBuilder`1.#ctor(C1.Web.Mvc.Sunburst{`0})">
            <summary>1つのSunburstBuilderインスタンスを作成します。</summary>
            <param name="component">構成する<see cref="T:C1.Web.Mvc.Sunburst`1" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SunburstBuilder`1.ChildItemsPath(System.String)">
            <summary>ChildItemsPathプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SunburstBuilder`1.BindingName(System.String[])">
            <summary>BindingNameプロパティを設定します。</summary>
            <remarks>データ項目の名前を含むプロパティの名前を取得または設定します。これは配列または文字列である必要があります。</remarks>
            <param name="names">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.TreeViewBuilder">
            <summary>TreeViewのビルダ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeViewBuilder.#ctor(C1.Web.Mvc.TreeView)">
            <summary>1つのTreeViewBuilderインスタンスを作成します。</summary>
            <param name="component">構成する<see cref="T:C1.Web.Mvc.TreeView" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeViewBuilder.IsContentHtml(System.Boolean)">
            <summary>IsContentHtmlプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeViewBuilder.ShowCheckboxes(System.Boolean)">
            <summary>ShowCheckboxesプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeViewBuilder.AutoCollapse(System.Boolean)">
            <summary>AutoCollapseプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeViewBuilder.IsAnimated(System.Boolean)">
            <summary>IsAnimatedプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeViewBuilder.IsReadOnly(System.Boolean)">
            <summary>IsReadOnlyプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeViewBuilder.AllowDragging(System.Boolean)">
            <summary>AllowDraggingプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeViewBuilder.ExpandOnClick(System.Boolean)">
            <summary>ExpandOnClickプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeViewBuilder.LazyLoadFunction(System.String)">
            <summary>LazyLoadFunctionプロパティを設定します。</summary>
            <remarks>オンデマンドで子ノードをロードする関数を取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeViewBuilder.OnClientItemsSourceChanged(System.String)">
            <summary>OnClientItemsSourceChangedプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeViewBuilder.OnClientLoadingItems(System.String)">
            <summary>OnClientLoadingItemsプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeViewBuilder.OnClientLoadedItems(System.String)">
            <summary>OnClientLoadedItemsプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeViewBuilder.OnClientItemClicked(System.String)">
            <summary>OnClientItemClickedプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeViewBuilder.OnClientSelectedItemChanged(System.String)">
            <summary>OnClientSelectedItemChangedプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeViewBuilder.OnClientCheckedItemsChanged(System.String)">
            <summary>OnClientCheckedItemsChangedプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeViewBuilder.OnClientIsCollapsedChanging(System.String)">
            <summary>OnClientIsCollapsedChangingプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeViewBuilder.OnClientIsCollapsedChanged(System.String)">
            <summary>OnClientIsCollapsedChangedプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeViewBuilder.OnClientIsCheckedChanging(System.String)">
            <summary>OnClientIsCheckedChangingプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeViewBuilder.OnClientIsCheckedChanged(System.String)">
            <summary>OnClientIsCheckedChangedプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeViewBuilder.OnClientFormatItem(System.String)">
            <summary>OnClientFormatItemプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeViewBuilder.OnClientDragStart(System.String)">
            <summary>OnClientDragStartプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeViewBuilder.OnClientDragOver(System.String)">
            <summary>OnClientDragOverプロパティを設定します。</summary>
            <remarks>ユーザーが<see cref="T:C1.Web.Mvc.TreeView" />で1つのノードを他のノードの上にドラッグしているときに発生します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeViewBuilder.OnClientDrop(System.String)">
            <summary>OnClientDropプロパティを設定します。</summary>
            <remarks>ユーザーが<see cref="T:C1.Web.Mvc.TreeView" />でノードをドロップしたときに発生します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeViewBuilder.OnClientDragEnd(System.String)">
            <summary>OnClientDragEndプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeViewBuilder.OnClientNodeEditStarting(System.String)">
            <summary>OnClientNodeEditStartingプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeViewBuilder.OnClientNodeEditStarted(System.String)">
            <summary>OnClientNodeEditStartedプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeViewBuilder.OnClientNodeEditEnding(System.String)">
            <summary>OnClientNodeEditEndingプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeViewBuilder.OnClientNodeEditEnded(System.String)">
            <summary>OnClientNodeEditEndedプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeViewBuilder.OnClientReponseTextParsing(System.String)">
            <summary>Configurates the <see cref="P:C1.Web.Mvc.TreeView.OnClientReponseTextParsing" /> client event. 応答テキストの解析時に発生します。</summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeViewBuilder.OnClientRequestDataStringifying(System.String)">
            <summary>Configurates the <see cref="P:C1.Web.Mvc.TreeView.OnClientRequestDataStringifying" /> client event. 要求データのシリアライズ時に発生します。</summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeViewBuilder.ChildItemsPath(System.String[])">
            <summary>ChildItemsPathプロパティを設定します。</summary>
            <remarks>Gets or sets the name of the property (or properties) that contains the child items for each node. When it is not set, [‘items’] will be used.</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeViewBuilder.DisplayMemberPath(System.String[])">
            <summary>DisplayMemberPathプロパティを設定します。</summary>
            <remarks>Gets or sets the name of the property (or properties) to use as the visual representation of the nodes. When it is not set, [‘header’] will be used.</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeViewBuilder.ImageMemberPath(System.String[])">
            <summary>ImageMemberPathプロパティを設定します。</summary>
            <remarks>ノードの画像のソースとして使用する1つ以上のプロパティの名前を取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeViewBuilder.Bind(System.Collections.Generic.IEnumerable{System.Object},System.String)">
            <summary>指定されたデータからノードをロードします。</summary>
            <param name="data">ノードデータ。</param>
            <param name="lazyLoadActionUrl">遅延ノードのロードアクションのURL。これはオプションです。これを指定すると、<see cref="T:C1.Web.Mvc.TreeView" />コントロールは遅延ロードモードで動作します。そうでない場合は、データからすべてのノードがロードされます。</param>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.TreeViewBuilder" />。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeViewBuilder.Bind(System.String,System.String)">
            <summary>指定されたURLからノードをロードします。</summary>
            <param name="loadActionUrl">ロードアクションのURL。</param>
            <param name="lazyLoadActionUrl">遅延ノードのロードアクションのURL。これはオプションです。これを指定すると、<see cref="T:C1.Web.Mvc.TreeView" />コントロールは遅延ロードモードで動作します。そうでない場合は、データからすべてのノードがロードされます。</param>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.TreeViewBuilder" />。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ControlBuilderFactory">
            <summary>さまざまなコントロールビルダを作成するためのファクトリクラスを定義します。</summary>
            <summary>さまざまなコントロールビルダを作成するためのファクトリクラスを定義します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.AutoComplete``1(System.String)">
            <summary>AutoCompleteBuilder を作成します。</summary>
            <typeparam name="T">データ項目タイプ</typeparam>
            <param name="selector">セレクタ</param>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.AutoCompleteBuilder`1" />。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.AutoComplete(System.String)">
            <summary>AutoCompleteBuilder を作成します。</summary>
            <param name="selector">セレクタ</param>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.AutoCompleteBuilder`1" />。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.BulletGraph(System.String)">
            <summary>BulletGraphBuilder を作成します。</summary>
            <param name="selector">セレクタ</param>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.BulletGraphBuilder" />。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.Calendar(System.String)">
            <summary>CalendarBuilder を作成します。</summary>
            <param name="selector">セレクタ</param>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.CalendarBuilder" />。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.ColorPicker(System.String)">
            <summary>ColorPickerBuilder を作成します。</summary>
            <param name="selector">セレクタ</param>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.ColorPickerBuilder" />。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.ComboBox``1(System.String)">
            <summary>ComboBoxBuilder を作成します。</summary>
            <typeparam name="T">データ項目タイプ</typeparam>
            <param name="selector">セレクタ</param>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.ComboBoxBuilder`1" />。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.ComboBox(System.String)">
            <summary>ComboBoxBuilder を作成します。</summary>
            <param name="selector">セレクタ</param>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.ComboBoxBuilder`1" />。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.FlexChart``1(System.String)">
            <summary>FlexChartBuilder を作成します。</summary>
            <typeparam name="T">データ項目タイプ</typeparam>
            <param name="selector">セレクタ</param>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.FlexChartBuilder`1" />。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.FlexChart(System.String)">
            <summary>FlexChartBuilder を作成します。</summary>
            <param name="selector">セレクタ</param>
            <returns>ビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.FlexGrid``1(System.String)">
            <summary>FlexGridBuilder を作成します。</summary>
            <typeparam name="T">データ項目タイプ</typeparam>
            <param name="selector">セレクタ</param>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.FlexGridBuilder`1" />。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.FlexGrid(System.String)">
            <summary>FlexGridBuilder を作成します。</summary>
            <param name="selector">セレクタ</param>
            <returns>ビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.FlexPie``1(System.String)">
            <summary>FlexPieBuilder を作成します。</summary>
            <typeparam name="T">データ項目タイプ</typeparam>
            <param name="selector">セレクタ</param>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.FlexPieBuilder`1" />。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.FlexPie(System.String)">
            <summary>FlexPieBuilder を作成します。</summary>
            <param name="selector">セレクタ</param>
            <returns>ビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.FlexRadar``1(System.String)">
            <summary>FlexRadarBuilderを作成します。</summary>
            <typeparam name="T">データ項目タイプ</typeparam>
            <param name="selector">セレクタ</param>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.FlexRadarBuilder`1" />。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.FlexRadar(System.String)">
            <summary>FlexRadarBuilderを作成します。</summary>
            <param name="selector">セレクタ</param>
            <returns>ビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.InputColor(System.String)">
            <summary>InputColorBuilder を作成します。</summary>
            <param name="selector">セレクタ</param>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.InputColorBuilder" />。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.InputDate(System.String)">
            <summary>InputDateBuilder を作成します。</summary>
            <param name="selector">セレクタ</param>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.InputDateBuilder" />。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.InputDateTime(System.String)">
            <summary>InputDateTimeBuilderを作成します。</summary>
            <param name="selector">セレクタ</param>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.InputDateTimeBuilder" />。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.InputMask(System.String)">
            <summary>InputMaskBuilder を作成します。</summary>
            <param name="selector">セレクタ</param>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.InputMaskBuilder" />。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.InputNumber(System.String)">
            <summary>InputNumberBuilder を作成します。</summary>
            <param name="selector">セレクタ</param>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.InputNumberBuilder" />。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.InputTime``1(System.String)">
            <summary>InputTimeBuilderを作成します。</summary>
            <typeparam name="T">データ項目タイプ</typeparam>
            <param name="selector">セレクタ</param>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.InputTimeBuilder`1" />。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.InputTime(System.String)">
            <summary>InputTimeBuilder を作成します。</summary>
            <param name="selector">セレクタ</param>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.InputTimeBuilder`1" />。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.LinearGauge(System.String)">
            <summary>LinearGaugeBuilder を作成します。</summary>
            <param name="selector">セレクタ</param>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.LinearGaugeBuilder" />。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.ListBox``1(System.String)">
            <summary>ListBoxBuilder を作成します。</summary>
            <typeparam name="T">データ項目タイプ</typeparam>
            <param name="selector">セレクタ</param>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.ListBoxBuilder`1" />。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.ListBox(System.String)">
            <summary>ListBoxBuilder を作成します。</summary>
            <param name="selector">セレクタ</param>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.ListBoxBuilder`1" />。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.MultiAutoComplete``1(System.String)">
            <summary>MultiAutoCompleteBuilderを作成します。</summary>
            <typeparam name="T">データ項目タイプ</typeparam>
            <param name="selector">セレクタ</param>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.MultiAutoCompleteBuilder`1" />。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.MultiAutoComplete(System.String)">
            <summary>MultiAutoCompleteBuilderを作成します。</summary>
            <param name="selector">セレクタ</param>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.MultiAutoCompleteBuilder`1" />。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.MultiSelect``1(System.String)">
            <summary>MultiSelectBuilderを作成します。</summary>
            <typeparam name="T">データ項目タイプ</typeparam>
            <param name="selector">セレクタ</param>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.MultiSelectBuilder`1" />。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.MultiSelect(System.String)">
            <summary>MultiSelectBuilderを作成します。</summary>
            <param name="selector">セレクタ</param>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.MultiSelectBuilder`1" />。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.Pager(System.String)">
            <summary>PagerBuilderを作成します。</summary>
            <param name="selector">セレクタ</param>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.PagerBuilder" />。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.Popup(System.String)">
            <summary>PopupBuilderを作成します。</summary>
            <param name="selector">セレクタ</param>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.PopupBuilder" />。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.RadialGauge(System.String)">
            <summary>RadialGaugeBuilder を作成します。</summary>
            <param name="selector">セレクタ</param>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.RadialGaugeBuilder" />。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.Sunburst``1(System.String)">
            <summary>SunburstBuilderを作成します。</summary>
            <typeparam name="T">データ項目タイプ</typeparam>
            <param name="selector">セレクタ</param>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.SunburstBuilder`1" />。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.Sunburst(System.String)">
            <summary>
                <see cref="T:C1.Web.Mvc.Sunburst`1" />コントロールを作成して、指定されたセレクタに対応するDOM要素にアタッチします。</summary>
            <param name="selector">セレクタを指定します。これはオプションです。設定されなかった場合は、デフォルトのDOM要素が生成されます。</param>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.SunburstBuilder`1" />。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.TreeMap``1(System.String)">
            <summary>
                <see cref="T:C1.Web.Mvc.TreeMap`1" />コントロールを作成して、指定されたセレクタに対応するDOM要素にアタッチします。</summary>
            <typeparam name="T">データ項目タイプ。</typeparam>
            <param name="selector">セレクタを指定します。これはオプションです。設定されなかった場合は、デフォルトのDOM要素が生成されます。</param>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.TreeMapBuilder`1" />。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.TreeMap(System.String)">
            <summary>
                <see cref="T:C1.Web.Mvc.TreeMap`1" />コントロールを作成して、指定されたセレクタに対応するDOM要素にアタッチします。</summary>
            <param name="selector">セレクタを指定します。これはオプションです。設定されなかった場合は、デフォルトのDOM要素が生成されます。</param>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.TreeMapBuilder`1" />。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.TreeView(System.String)">
            <summary>TreeViewBuilderを作成します。</summary>
            <param name="selector">セレクタ</param>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.TreeViewBuilder" />。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.#ctor(System.Web.Mvc.HtmlHelper)">
            <summary>
                <see cref="T:C1.Web.Mvc.Fluent.ControlBuilderFactory" />クラスの新しいインスタンスを 
            指定されたHTMLヘルパーインスタンスを使用して初期化します。</summary>
            <param name="helper">指定されたHtmlHelperオブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.Resources(System.Type[])">
            <summary>指定されたコントロールタイプの css および js リソースをレンダリングします。</summary>
            <param name="controlTypes">コントロールタイプ。コントロールタイプを設定しないと、すべてのコントロールタイプが指定されます。</param>
            <returns>HTML 文字列</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.Resources(System.String,System.Type[])">
            <summary>指定されたコントロールタイプの css および js リソースをレンダリングします。</summary>
            <param name="theme">テーマ名</param>
            <param name="controlTypes">コントロールタイプ。コントロールタイプを設定しないと、すべてのコントロールタイプが指定されます。</param>
            <returns>HTML 文字列</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.DeferredScripts">
            <summary>遅延スクリプトをレンダリングします。</summary>
            <returns>HTML文字列。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.Scripts">
            <summary>指定されたスクリプトを登録します。</summary>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.ScriptsBuilder" />。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.Styles">
            <summary>スタイルシートを登録します。</summary>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.StylesBuilder" />。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.Menu(System.String)">
            <summary>Menu を作成します。</summary>
            <param name="selector">セレクタ</param>
            <returns>MenuBuilder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.CollectionViewService``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>CollectionViewServiceBuilderを作成します。</summary>
            <typeparam name="T">データ項目タイプ</typeparam>
            <param name="sourceCollection">sourceCollection</param>
            <returns>CollectionViewServiceBuilder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.CollectionViewService(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>CollectionViewServiceBuilderを作成します。</summary>
            <param name="sourceCollection">sourceCollection</param>
            <returns>CollectionViewServiceBuilder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.ODataCollectionViewService">
            <summary>ODataCollectionViewServiceBuilder を作成します。</summary>
            <returns>ODataCollectionViewServiceBuilder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.ODataVirtualCollectionViewService">
            <summary>ODataVirtualCollectionViewServiceBuilder を作成します。</summary>
            <returns>ODataVirtualCollectionViewServiceBuilder</returns>
        </member>
        <member name="T:C1.Web.Mvc.ColumnFilter">
            <summary>FlexGrid コントロールの列のフィルタを定義します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ColumnFilter.Condition1">
            <summary>フィルタの最初の条件を取得します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ColumnFilter.Condition2">
            <summary>フィルタの２番目の条件を取得します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ColumnFilter.And">
            <summary>２つの条件を AND または OR 演算子のどちらで組み合わせるかを取得します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ColumnFilter.ShowValues">
            <summary>表示するすべての書式設定された値を含むコレクションを取得または設定します。</summary>
            <remarks>Nullはすべてのデータを表示することを意味します。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.ColumnFilter.Column">
            <summary>列の名前または連結を示す文字列値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ColumnFilter.FilterType">
            <summary>このフィルタから提供されるフィルタリングのタイプを取得または設定します。</summary>
            <remarks>このプロパティをnullに設定すると、フィルタはDefaultFilterTypeプロパティで定義された値を使用します。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.ColumnFilter.ValueFilter">
            <summary>この列フィルタの値フィルタを取得します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ColumnFilter.ConditionFilter">
            <summary>この列フィルタの条件フィルタを取得します。</summary>
            <remarks>これは、条件フィルタ設定を表すために提供されています。ユーザーには変更を許可しないでください。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.ColumnFilter.Format">
            <summary>未加工の値をこの列の表示値に変換するために使用される書式文字列を取得または設定します（Globalizeを参照）。</summary>
        </member>
        <member name="T:C1.Web.Mvc.ConditionFilter">
            <summary>列の条件フィルタを定義します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ConditionFilter.And">
            <summary>2つの条件をANDまたはOR演算子のどちらで組み合わせるかを取得します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ConditionFilter.Condition1">
            <summary>フィルタの最初の条件を取得します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ConditionFilter.Condition2">
            <summary>フィルタの2番目の条件を取得します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.ValueFilter">
            <summary>列の値フィルタを定義します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ValueFilter.ShowValues">
            <summary>表示するすべての書式設定された値を含むコレクションを取得します。</summary>
            <remarks>Nullはすべてのデータを表示することを意味します。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.ValueFilter.FilterText">
            <summary>表示値のリストをフィルタする文字列を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ValueFilter.MaxValues">
            <summary>表示値のリスト内にある要素の最大数を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ValueFilter.UniqueValues">
            <summary>リストに表示する一意の値を含む配列を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ValueFilter.SortValues">
            <summary>エディタに表示するときに値をソートするかどうかを決定する値を取得または設定します。</summary>
            <remarks>このプロパティは、<see cref="P:C1.Web.Mvc.ValueFilter.UniqueValues" />を使用して値プロパティのカスタムリストを提供するが、値の順序を維持したい場合に特に便利です。</remarks>
        </member>
        <member name="T:C1.Web.Mvc.CellTemplate">
            <summary>セルテンプレートクラスを定義します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.CellTemplate.Template">
            <summary>このプロパティは廃止されたため、削除してください。</summary>
        </member>
        <member name="P:C1.Web.Mvc.CellTemplate.EditTemplate">
            <summary>このプロパティは廃止されたため、削除してください。</summary>
        </member>
        <member name="P:C1.Web.Mvc.CellTemplate.TemplateId">
            <summary>グリッドセルのテンプレートのIDを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.CellTemplate.TemplateContent">
            <summary>グリッドセルのテンプレートのコンテンツを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.CellTemplate.EditTemplateId">
            <summary>編集モードにあるグリッドセルのテンプレートのIDを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.CellTemplate.EditTemplateContent">
            <summary>編集モードにあるグリッドセルのテンプレートのコンテンツを取得または設定します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.ColumnBase">
            <summary>グリッド内の1つの列を表します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.ColumnBase.#ctor">
            <summary>
                <see cref="T:C1.Web.Mvc.ColumnBase" />の新しいインスタンスを初期化します</summary>
        </member>
        <member name="M:C1.Web.Mvc.ColumnBase.#ctor(System.Web.Mvc.HtmlHelper)">
            <summary>
                <see cref="T:C1.Web.Mvc.ColumnBase" />の新しいインスタンスを初期化します</summary>
            <param name="helper">HtmlHelperインスタンス。</param>
        </member>
        <member name="M:C1.Web.Mvc.ColumnBase.ShouldSerializeDataMap">
            <summary>DataMapプロパティをシリアライズするかどうかを指定します。</summary>
            <returns>trueの場合、プロパティはシリアライズされます。
            そうでない場合は、シリアライズされません。</returns>
        </member>
        <member name="P:C1.Web.Mvc.ColumnBase.AllowDragging">
            <summary>ユーザーがマウスでこの行または列を新しい位置に移動できるかどうかを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ColumnBase.AllowMerging">
            <summary>この行または列にあるセルを結合できるかどうかを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ColumnBase.AllowResizing">
            <summary>ユーザーがマウスで行または列をサイズ変更できるかどうかを示す値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ColumnBase.CssClass">
            <summary>この行または列にある非ヘッダーセルをレンダリングする際に使用されるCSSクラス名を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ColumnBase.IsContentHtml">
            <summary>この行または列にあるセルにプレーンテキストではなくHTMLコンテンツを表示するかどうかを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ColumnBase.IsReadOnly">
            <summary>この行または列にあるセルを編集できるかどうかを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ColumnBase.IsSelected">
            <summary>この行または列が選択されているかどうかを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ColumnBase.Visible">
            <summary>この行または列が表示されているかどうかを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ColumnBase.WordWrap">
            <summary>この行または列にあるセルがそのコンテンツをラップするかどうかを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ColumnBase.Aggregate">
            <summary>この列のグループヘッダー行に表示する集計を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ColumnBase.Align">
            <summary>この列内の項目の水平方向の配置を取得または設定します。</summary>
            <remarks>このプロパティのデフォルト値はnullです。この場合は、グリッド内の列のdataTypeに基づいて自動的に配置が選択されます（数値は右揃え、ブール値は中央揃え、その他のタイプは左揃え）。デフォルトの配置をオーバーライドする場合は、このプロパティを'left'、'right'、または'center'に設定します。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.ColumnBase.AllowSorting">
            <summary>ユーザーがこの列のヘッダーをクリックしてソートできるかどうかを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ColumnBase.Binding">
            <summary>この列が連結されているプロパティの名前を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ColumnBase.DataType">
            <summary>この列に格納される値のタイプを取得または設定します。値は、グリッドの編集時に適切なタイプに変換されます。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ColumnBase.Format">
            <summary>未加工の値をこの列の表示値に変換するために使用される書式文字列を取得または設定します（Globalizeを参照）。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ColumnBase.Header">
            <summary>列ヘッダーに表示されるテキストを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ColumnBase.InputType">
            <summary>この列の値を編集する際に使用されるHTML入力要素の"type"属性を取得または設定します。</summary>
            <remarks>現在のカルチャ、デバイス、またはアプリケーションにデフォルトが適さない場合は、このプロパティを使用してデフォルト設定を変更します。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.ColumnBase.Mask">
            <summary>この列の値を編集する際に使用されるマスクを取得または設定します。</summary>
            <remarks>マスクの書式は、InputMaskコントロールで使用される書式と同じです。指定する場合、このマスクは書式設定プロパティの値と互換性がある必要があります。たとえば、'MM/dd/yyyy'と書式設定された日付の入力には、マスク'99/99/9999'を使用できます。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.ColumnBase.MaxWidth">
            <summary>この列の最大幅を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ColumnBase.MinWidth">
            <summary>この列の最小幅を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ColumnBase.Name">
            <summary>この列の名前を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ColumnBase.Required">
            <summary>非推奨になりました。HTMLの'required'属性との混同を避けるため、代わりにIsRequiredを使用してください。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ColumnBase.IsRequired">
            <summary>列の値が必須かどうかを決定する値を取得または設定します。</summary>
            <remarks>デフォルトでは、このプロパティはnullに設定されます。この場合、値は必須ですが、文字列の列は空の文字列でもかまいません。trueに設定した場合、値は必須で、空の文字列は許可されません。falseに設定した場合は、null値と空の文字列が許可されます。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.ColumnBase.Width">
            <summary>この列の幅を取得または設定します。</summary>
            <remarks>列幅は、正の値（ピクセル単位の列幅）、null、または負の値（コレクションのデフォルト幅）、または書式 '{number}*' の文字列（スターサイズ）を指定できます。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.ColumnBase.CellTemplate">
            <summary>この列のセルテンプレートを取得します。</summary>
            <remarks>これはセルパネルに対してのみ機能します。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.ColumnBase.SortMemberPath">
            <summary>この列のソートに使用するプロパティの名前を取得または設定します。</summary>
            <remarks>Bindingプロパティで指定された値以外の値に基づいてソートを実行する場合は、このプロパティを使用します。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.ColumnBase.DataMap">
            <summary>未加工の値を列の表示値に変換するために使用されるDataMapを取得します。</summary>
            <remarks>これらのドロップダウンボタンは、列にDataMapが設定され、編集可能である場合にのみ表示されます。ユーザーがドロップダウンボタンをクリックすると、セルの値を選択するために使用できるリストがグリッドに表示されます。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.ColumnBase.ShowDropDown">
            <summary>グリッドで、この列のセルにドロップダウンボタンを追加するかどうかを示す値を取得または設定します。</summary>
            <remarks>これらのドロップダウンボタンは、列にDataMapが設定され、編集可能である場合にのみ表示されます。ユーザーがドロップダウンボタンをクリックすると、セルの値を選択するために使用できるリストがグリッドに表示されます。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.ColumnBase.DropDownCssClass">
            <summary>この列のドロップダウンに追加するCSSクラス名を取得または設定します。</summary>
            <remarks>これらのドロップダウンボタンは、列にDataMapが設定され、編集可能である場合にのみ表示されます。ユーザーがドロップダウンボタンをクリックすると、セルの値を選択するために使用できるリストがグリッドに表示されます。セルのドロップダウンを使用するには、wijmo.inputモジュールをロードしておく必要があります。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.ColumnBase.MaxLength">
            <summary>セルに入力可能な最大文字数を取得または設定します。</summary>
            <remarks>入力文字数を制限しない場合は、このプロパティを null に設定します。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.ColumnBase.QuickAutoSize">
            <summary>この列を自動サイズ変更する際に、精度よりパフォーマンスを優先して最適化を行うかどうかを決定する値を取得または設定します。</summary>
            <remarks>このプロパティを false に設定すると、この列のクイック自動サイズ変更が無効になります。このプロパティを true に設定すると、グリッドの QuickAutoSize プロパティの値に従って、この機能が有効になります。このプロパティを null（デフォルト値）に設定すると、テンプレートがなく、プレーンテキストが表示されている列では、この機能が有効になります。</remarks>
        </member>
        <member name="T:C1.Web.Mvc.Column">
            <summary>グリッド内の１つの列を表します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Column.#ctor">
            <summary>
                <see cref="T:C1.Web.Mvc.Column" /> の新しいインスタンスを初期化します</summary>
        </member>
        <member name="M:C1.Web.Mvc.Column.#ctor(System.Web.Mvc.HtmlHelper)">
            <summary>
                <see cref="T:C1.Web.Mvc.Column" />の新しいインスタンスを初期化します</summary>
            <param name="helper">HtmlHelperインスタンス。</param>
        </member>
        <member name="T:C1.Web.Mvc.TreeNode">
            <summary>
                <see cref="T:C1.Web.Mvc.TreeView" />内の1つのノードを表します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeNode.Level">
            <summary>Indicates the node’s level. Top-level nodes have level zero.</summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeNode.IsChecked">
            <summary>ノードがオンに設定されているかどうかを示します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeNode.DataItem">
            <summary>このノードが表すデータ項目。</summary>
        </member>
        <member name="T:C1.Web.Mvc.BatchOperatingData`1">
            <summary></summary>
        </member>
        <member name="P:C1.Web.Mvc.BatchOperatingData`1.ItemsCreated">
            <summary>作成される項目。</summary>
        </member>
        <member name="P:C1.Web.Mvc.BatchOperatingData`1.ItemsUpdated">
            <summary>更新される項目。</summary>
        </member>
        <member name="P:C1.Web.Mvc.BatchOperatingData`1.ItemsDeleted">
            <summary>削除される項目。</summary>
        </member>
        <member name="T:C1.Web.Mvc.BoxWhisker`1">
            <summary>通常、BoxWhisker系列は、複数の数値データセット間の分布を比較するために使用されます。</summary>
        </member>
        <member name="T:C1.Web.Mvc.ExtraSeries`1">
            <summary>チャートに表示する一連のデータポイントを表します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.ExtraSeries`1.#ctor(C1.Web.Mvc.FlexChartCore{`0})">
            <summary>ExtraSeriesクラスの新しいインスタンスを初期化します。</summary>
            <param name="owner">FlexChartCoreから派生したオブジェクト。</param>
        </member>
        <member name="P:C1.Web.Mvc.ExtraSeries`1.ExtraSeriesTypeName">
            <summary>この系列がExtraSeriesであることを示すクライアント側ラッパーのフラグ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.BoxWhisker`1.ShouldSerializeMeanLineStyle">
            <summary>MeanLineStyleプロパティをシリアライズするかどうかを指定します。</summary>
            <returns>trueの場合、プロパティはシリアライズされます。
            そうでない場合は、シリアライズされません。</returns>
        </member>
        <member name="M:C1.Web.Mvc.BoxWhisker`1.ShouldSerializeMeanMarkerStyle">
            <summary>MeanMarkerStyleプロパティをシリアライズするかどうかを指定します。</summary>
            <returns>trueの場合、プロパティはシリアライズされます。
            そうでない場合は、シリアライズされません。</returns>
        </member>
        <member name="M:C1.Web.Mvc.BoxWhisker`1.#ctor(C1.Web.Mvc.FlexChartCore{`0})">
            <summary>BoxWhiskerクラスの新しいインスタンスを初期化します。</summary>
            <param name="owner">FlexChartCoreから派生したオブジェクト。</param>
        </member>
        <member name="P:C1.Web.Mvc.BoxWhisker`1.GapWidth">
            <summary>箱ひげ図のギャップ幅をパーセント値で指定する値を取得または設定します。このプロパティのデフォルト値は0.1です。最小値は0で、最大値は1です。</summary>
        </member>
        <member name="P:C1.Web.Mvc.BoxWhisker`1.GroupWidth">
            <summary>箱ひげ図のグループ幅をパーセント値で指定する値を取得または設定します。このプロパティのデフォルト値は0.8です。最小値は0で、最大値は1です。</summary>
        </member>
        <member name="P:C1.Web.Mvc.BoxWhisker`1.MeanLineStyle">
            <summary>平均線のスタイルを指定する値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.BoxWhisker`1.MeanMarkerStyle">
            <summary>平均マーカーのスタイルを指定する値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.BoxWhisker`1.QuartileCalculation">
            <summary>箱ひげ図の四分位数計算を指定する値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.BoxWhisker`1.ShowInnerPoints">
            <summary>箱ひげ図の内側ポイントを表示するかどうかを決定する値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.BoxWhisker`1.ShowMeanLine">
            <summary>箱ひげ図の平均線を表示するかどうかを決定する値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.BoxWhisker`1.ShowMeanMarker">
            <summary>箱ひげ図の平均マーカーを表示するかどうかを決定する値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.BoxWhisker`1.ShowOutliers">
            <summary>箱ひげ図の異常値を表示するかどうかを決定する値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.BoxWhisker`1.ExtraSeriesTypeName">
            <summary>系列名を取得します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.ChartSeries`1">
            <summary>チャートに表示する一連のデータポイントを表します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.ChartSeries`1.#ctor(C1.Web.Mvc.FlexChart{`0})">
            <summary>ChartSeriesクラスの新しいインスタンスを初期化します。</summary>
            <param name="owner">
                <see cref="T:C1.Web.Mvc.FlexChart`1" />から派生したオブジェクト。</param>
        </member>
        <member name="P:C1.Web.Mvc.ChartSeries`1.ChartType">
            <summary>チャート全体に設定されているチャートタイプを上書きする、特定の系列のチャートタイプを取得または設定します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.ChartTooltip">
            <summary>チャートツールチップを表します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartTooltip.Content">
            <summary>ツールチップのコンテンツを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartTooltip.Gap">
            <summary>ツールチップとターゲット要素の間の距離を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartTooltip.HideDelay">
            <summary>マウスがターゲット要素から出てからツールチップを非表示にするまでの遅延（ミリ秒）を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartTooltip.IsContentHtml">
            <summary>ツールチップのコンテンツをプレーンテキストで表示するか、HTML として表示するかを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartTooltip.ShowDelay">
            <summary>マウスがターゲット要素に入ってからツールチップを表示するまでの遅延（ミリ秒）を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartTooltip.Threshold">
            <summary>ツールチップを表示する範囲の要素からの最大距離を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartTooltip.OnClientPopup">
            <summary>ツールチップコンテンツが表示される前に発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartTooltip.ShowAtMouse">
            <summary>ツールチップをターゲット要素ではなくマウスの位置を基準にして配置するかどうかを決定する値を取得または設定します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Circle">
            <summary>AnnotationLayerの円注釈を表します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Circle.#ctor">
            <summary>Circleインスタンスを作成します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Circle.Radius">
            <summary>Circle注釈の半径を取得または設定します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.CollectionViewBatchEditRequest`1">
            <summary>一括更新用の要求データを定義します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.CollectionViewRequest`1">
            <summary>クライアント側から渡される要求データ。</summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewRequest`1.Command">
            <summary>要求コマンドタイプ。</summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewRequest`1.PageIndex">
            <summary>ページインデックス。</summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewRequest`1.PageSize">
            <summary>ページサイズ。</summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewRequest`1.SortDescriptions">
            <summary>ソートの説明。</summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewRequest`1.Skip">
            <summary>最初からのスキップ項目数を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewRequest`1.Top">
            <summary>必要な項目数を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewRequest`1.Column">
            <summary>取得されるデータの列を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewRequest`1.Distinct">
            <summary>列のデータが固有であることを指定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewRequest`1.ExtraRequestData">
            <summary>追加の要求データを取得します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewBatchEditRequest`1.OperatingItems">
            <summary>一括操作データ。</summary>
        </member>
        <member name="T:C1.Web.Mvc.CollectionViewEditRequest`1">
            <summary>クライアント側から渡される編集用の要求データ。</summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewEditRequest`1.OperatingItems">
            <summary>作成、更新、または削除に使用される項目。</summary>
        </member>
        <member name="T:C1.Web.Mvc.CollectionViewItemResult`1">
            <summary>CollectionView 項目の操作の結果。</summary>
        </member>
        <member name="T:C1.Web.Mvc.OperationResult">
            <summary>操作の結果。</summary>
            <summary>操作の結果。</summary>
        </member>
        <member name="P:C1.Web.Mvc.OperationResult.Success">
            <summary>操作が成功したかどうかを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.OperationResult.Error">
            <summary>エラーメッセージを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewItemResult`1.Data">
            <summary>操作された項目のデータ。</summary>
        </member>
        <member name="T:C1.Web.Mvc.CollectionViewResponse`1">
            <summary>CollectionView の応答データ。</summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewResponse`1.Items">
            <summary>Read コマンドの項目データ。</summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewResponse`1.PageIndex">
            <summary>項目があるページのインデックス。</summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewResponse`1.TotalItemCount">
            <summary>ページングを適用する前のビュー内の項目の合計数。</summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewResponse`1.OperatedItemResults">
            <summary>項目の作成、削除、または更新の結果。</summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewResponse`1.Skip">
            <summary>最初からのスキップ項目数を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewResponse`1.ColumnData">
            <summary>特定の列のデータを取得または設定します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.DataLabel">
            <summary>FlexChart のポイントデータラベル。</summary>
        </member>
        <member name="T:C1.Web.Mvc.DataLabelBase">
            <summary>ポイントデータラベルの基本タイプ</summary>
        </member>
        <member name="P:C1.Web.Mvc.DataLabelBase.Content">
            <summary>データラベルのコンテンツを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.DataLabelBase.Border">
            <summary>データラベルに境界線を表示するかどうかを示す値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.DataLabelBase.OnClientRendering">
            <summary>データラベルをレンダリングする前に発生します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.DataLabelBase.ConnectingLine">
            <summary>ラベルをデータポイントに接続する線を描画するかどうかを示す値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.DataLabelBase.Offset">
            <summary>ラベルからデータポイントまでのオフセットを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.DataLabel.Position">
            <summary>データラベルの位置を取得または設定します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.DataPoint">
            <summary>データポイントを（x座標とy座標で）表すクラス。</summary>
            <remarks>X座標とY座標は、数値またはDateオブジェクト（時間ベースのデータの場合）として指定できます。</remarks>
        </member>
        <member name="M:C1.Web.Mvc.DataPoint.#ctor(System.Object,System.Object)">
            <summary>1つのDataPointインスタンスを作成します。</summary>
            <param name="x">このDataPointのX座標値。</param>
            <param name="y">このDataPointのY座標値。</param>
        </member>
        <member name="M:C1.Web.Mvc.DataPoint.#ctor">
            <summary>1つのDataPointインスタンスを作成します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.DataPoint.X">
            <summary>このDataPointのX座標値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.DataPoint.Y">
            <summary>このDataPointのY座標値を取得または設定します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Ellipse">
            <summary>AnnotationLayerの楕円注釈を表します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Ellipse.#ctor">
            <summary>Ellipseインスタンスを作成します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Ellipse.Height">
            <summary>Ellipse注釈の高さを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Ellipse.Width">
            <summary>Ellipse注釈の幅を取得または設定します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.ErrorBar`1">
            <summary>ErrorBar系列を使用すると、誤差の範囲や標準偏差を一目で確認することができます。これらは、標準誤差量、パーセント値、または標準偏差として表示することができます。必要に応じて、正確な誤差量を表示するために独自の値を設定することもできます。</summary>
        </member>
        <member name="M:C1.Web.Mvc.ErrorBar`1.ShouldSerializeErrorBarStyle">
            <summary>ErrorBarStyleプロパティをシリアライズするかどうかを指定します。</summary>
            <returns>trueの場合、プロパティはシリアライズされます。
            そうでない場合は、シリアライズされません。</returns>
        </member>
        <member name="M:C1.Web.Mvc.ErrorBar`1.#ctor(C1.Web.Mvc.FlexChartCore{`0})">
            <summary>ErrorBarクラスの新しいインスタンスを初期化します。</summary>
            <param name="owner">FlexChartCoreから派生したオブジェクト。</param>
        </member>
        <member name="P:C1.Web.Mvc.ErrorBar`1.Direction">
            <summary>系列の方向を指定する値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ErrorBar`1.ErrorAmount">
            <summary>系列の誤差量を指定する値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ErrorBar`1.ErrorBarStyle">
            <summary>誤差範囲のスタイルを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ErrorBar`1.Value">
            <summary>系列の誤差値を指定する値を取得または設定します。このプロパティは、ErrorAmountプロパティと組み合わせて使用する必要があります。ErrorAmountがErrorAmount.FixedValueの場合、Valueプロパティは固定値になります。ErrorAmountがErrorAmount.Percentageの場合、Valueプロパティは0から1までのパーセント値になります。errorAmountがErrorAmount.Customの場合、Valueプロパティはマイナス/プラス値のオブジェクトまたはマイナス/プラス値の配列になります。ErrorAmountがErrorAmount.StandardDeviationの場合、Valueプロパティは計算された標準偏差値のパーセント数値になります。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ErrorBar`1.EndStyle">
            <summary>系列の終点スタイルを指定する値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ErrorBar`1.ExtraSeriesTypeName">
            <summary>系列名を取得します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.ExtraOptions">
            <summary>FlexChartの追加オプション。</summary>
        </member>
        <member name="M:C1.Web.Mvc.ExtraOptions.ShouldSerializeFunnel">
            <summary>Funnelプロパティをシリアライズするかどうかを指定します。</summary>
            <returns>trueの場合、プロパティはシリアライズされます。
            そうでない場合は、シリアライズされません。</returns>
        </member>
        <member name="P:C1.Web.Mvc.ExtraOptions.BubbleMaxSize">
            <summary>バブルチャートのシンボルの最大サイズ（ピクセル）を指定します。</summary>
            <remarks>デフォルト値は、30です</remarks>
        </member>
        <member name="P:C1.Web.Mvc.ExtraOptions.BubbleMinSize">
            <summary>バブルチャートのシンボルの最小サイズ（ピクセル）を指定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ExtraOptions.GroupWidth">
            <summary>縦棒グラフのグループ幅、または横棒グラフの高さを指定します。グループ幅は、ピクセル単位または有効なスペースに対するパーセンテージで指定できます。</summary>
            <remarks>デフォルト値は「70%」です</remarks>
        </member>
        <member name="P:C1.Web.Mvc.ExtraOptions.Funnel">
            <summary>Funnelのオプションを取得します。サポートされるオプションは、NeckWidth、NeckHeight、およびTypeです。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Filter">
            <summary>フィルタクラスを定義します。</summary>
            <remarks>これは廃止されました。代わりに、ColumnFilterを使用してください。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.Filter.ColumnFilter">
            <summary>指定されたフィルタを取得します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.FilterCondition">
            <summary>フィルタ条件を定義します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FilterCondition.Operator">
            <summary>この条件で使用される演算子を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FilterCondition.Value">
            <summary>この条件で使用される値を取得または設定します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.FlexRadarSeries`1">
            <summary>チャートに表示する一連のデータポイントを表します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.FlexRadarSeries`1.#ctor(C1.Web.Mvc.FlexRadar{`0})">
            <summary>FlexRadarSeriesクラスの新しいインスタンスを初期化します。</summary>
            <param name="owner">
                <see cref="T:C1.Web.Mvc.FlexRadar`1" />から派生したオブジェクト。</param>
        </member>
        <member name="P:C1.Web.Mvc.FlexRadarSeries`1.ChartType">
            <summary>チャート全体に設定されているチャートタイプをオーバーライドする、特定の系列のチャートタイプを取得または設定します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.FunctionSeries`1">
            <summary>FlexChartのFunctionSeries拡張を表します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.TrendLineBase`1">
            <summary>さまざまな傾向線の基本クラスを表します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.TrendLineBase`1.#ctor(C1.Web.Mvc.FlexChartCore{`0})">
            <summary>TrendLineBaseクラスの新しいインスタンスを初期化します。</summary>
            <param name="owner">FlexChartCoreから派生したオブジェクト。</param>
        </member>
        <member name="P:C1.Web.Mvc.TrendLineBase`1.SampleCount">
            <summary>関数計算のためのサンプル数を取得または設定します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.FunctionSeries`1.#ctor(C1.Web.Mvc.FlexChartCore{`0})">
            <summary>FunctionSeriesクラスの新しいインスタンスを初期化します。</summary>
            <param name="owner">FlexChartCoreから派生したオブジェクト。</param>
        </member>
        <member name="P:C1.Web.Mvc.FunctionSeries`1.Min">
            <summary>関数計算の最小値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FunctionSeries`1.Max">
            <summary>関数計算の最大値を取得または設定します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.FunnelOptions">
            <summary>ファンネルグラフのオプション。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FunnelOptions.NeckWidth">
            <summary>ファンネルグラフのネックの幅をパーセント値で指定します。デフォルト値は0.2です。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FunnelOptions.NeckHeight">
            <summary>ファンネルグラフのネックの高さをパーセント値で指定します。デフォルト値は0です。</summary>
        </member>
        <member name="P:C1.Web.Mvc.FunnelOptions.Type">
            <summary>ファンネルグラフのタイプを指定します。これは、'Rectangle'または'Default'である必要があります。タイプがRectangleに設定されている場合、NeckWidthとNeckHeightは機能しません。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Image">
            <summary>AnnotationLayerの画像注釈を定義します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Image.#ctor">
            <summary>Imageインスタンスを作成します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Image.Height">
            <summary>Image注釈の高さを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Image.Width">
            <summary>Image注釈の幅を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Image.Href">
            <summary>Image注釈のhrefを取得または設定します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Line">
            <summary>AnnotationLayerの線注釈を表します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Line.#ctor">
            <summary>Line注釈インスタンスを作成します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Line.Start">
            <summary>Line注釈の開始点を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Line.End">
            <summary>Line注釈の終了点を取得または設定します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.MenuCommand">
            <summary>実行する MenuItem のアクションを表します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.MenuCommand.ExecuteCommand">
            <summary>このメソッドはこのコマンドを実行します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.MenuCommand.CanExecuteCommand">
            <summary>このメソッドは、コントローラがコマンドを実行できるかどうかを決定するブール値を返します。</summary>
            <remarks>このメソッドが false を返す場合、このメニューオプションは無効になります。</remarks>
        </member>
        <member name="T:C1.Web.Mvc.MenuItem">
            <summary>Menu に表示される項目を表します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.MenuItem.Header">
            <summary>メニュー項目のヘッダーを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.MenuItem.Command">
            <summary>関連付けられたメニューコマンドを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.MenuItem.CommandParameter">
            <summary>関連付けられたメニューコマンドパラメータを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.MenuItem.IsSeparator">
            <summary>MenuItem がセパレータであるかどうかを取得または設定します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.MovingAverage`1">
            <summary>FlexChartのMovingAverage系列拡張を表します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.MovingAverage`1.#ctor(C1.Web.Mvc.FlexChartCore{`0})">
            <summary>MovingAverageクラスの新しいインスタンスを初期化します。</summary>
            <param name="owner">FlexChartCoreから派生したオブジェクト。</param>
        </member>
        <member name="P:C1.Web.Mvc.MovingAverage`1.Type">
            <summary>移動平均線のタイプを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.MovingAverage`1.Period">
            <summary>移動平均線の期間を取得または設定します。</summary>
            <remarks>これは、1より大きな整数値に設定する必要があります。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.MovingAverage`1.ExtraSeriesTypeName">
            <summary>系列名を取得します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.ParametricFunctionSeries`1">
            <summary>FlexChartのFunctionSeriesパラメータ拡張を表します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.ParametricFunctionSeries`1.#ctor(C1.Web.Mvc.FlexChartCore{`0})">
            <summary>ParametricFunctionSeriesクラスの新しいインスタンスを初期化します。</summary>
            <param name="owner">FlexChartCoreから派生したオブジェクト。</param>
        </member>
        <member name="P:C1.Web.Mvc.ParametricFunctionSeries`1.XFunc">
            <summary>x値の計算に使用される関数を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ParametricFunctionSeries`1.YFunc">
            <summary>y値の計算に使用される関数を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ParametricFunctionSeries`1.ExtraSeriesTypeName">
            <summary>系列名を取得します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.PieDataLabel">
            <summary>FlexPie のポイントデータラベル。</summary>
        </member>
        <member name="P:C1.Web.Mvc.PieDataLabel.Position">
            <summary>データラベルの位置を取得または設定します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.PlotArea">
            <summary>チャートのプロットエリアを表します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.PlotArea.#ctor">
            <summary>PlotAreaクラスの新しいインスタンスを初期化します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.PlotArea.Column">
            <summary>プロットエリアの列番号を取得または設定します。columnプロパティを使用して、チャートのプロットエリアの垂直位置を設定できます。</summary>
        </member>
        <member name="P:C1.Web.Mvc.PlotArea.Row">
            <summary>プロットエリアの行番号を取得または設定します。rowプロパティを使用して、チャートのプロットエリアの水平位置を設定できます。</summary>
        </member>
        <member name="P:C1.Web.Mvc.PlotArea.Width">
            <summary>プロットエリアの幅を取得または設定します。幅は、数値（ピクセル単位で幅を設定）または'{number}*'形式の文字列（スターサイズ）で指定できます。</summary>
        </member>
        <member name="P:C1.Web.Mvc.PlotArea.Height">
            <summary>プロットエリアの高さを取得または設定します。高さは、数値（ピクセル単位で高さを設定）または'{number}*'形式の文字列（スターサイズ）で指定できます。</summary>
        </member>
        <member name="P:C1.Web.Mvc.PlotArea.Style">
            <summary>プロットエリアのスタイルを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.PlotArea.Name">
            <summary>プロット領域名を取得または設定します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Polygon">
            <summary>AnnotationLayerの多角形注釈を表します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Polygon.Points">
            <summary>Polygon注釈のポイントのコレクションを取得します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.PropertyGroupDescription">
            <summary>基準としてプロパティ名を使用して、項目のグループ化を記述します。</summary>
            <summary>基準としてプロパティ名を使用して、項目のグループ化を記述します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.PropertyGroupDescription.PropertyName">
            <summary></summary>
        </member>
        <member name="P:C1.Web.Mvc.PropertyGroupDescription.ClientConverter">
            <summary>項目およびプロパティ名を受け取り、グループ名を返すコールバック関数を取得または設定します。</summary>
            <remarks>指定されない場合は、項目のプロパティ値がグループ名になります。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.PropertyGroupDescription.ClientClass">
            <summary>クライアント側オブジェクトのクラス名を取得します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Range">
            <summary>Gauge コントロールで使用する範囲を定義します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Range.Max">
            <summary>この範囲の最大値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Range.Min">
            <summary>この範囲の最小値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Range.Name">
            <summary>この範囲の名前を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Range.Thickness">
            <summary>この範囲の太さを親ゲージの太さに対するパーセンテージで取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Range.OnClientPropertyChanged">
            <summary>ツールチップを表示する範囲の要素からの最大距離を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Range.Color">
            <summary>この範囲の表示に使用される色を取得または設定します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Rectangle">
            <summary>AnnotationLayerの四角形注釈を表します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Rectangle.#ctor">
            <summary>Rectangleインスタンスを作成します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Rectangle.Height">
            <summary>Rectangle注釈の高さを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Rectangle.Width">
            <summary>Rectangle注釈の幅を取得または設定します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.SortDescription">
            <summary>ソートの説明。</summary>
        </member>
        <member name="P:C1.Web.Mvc.SortDescription.Ascending">
            <summary>昇順でソートするかどうかを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.SortDescription.Property">
            <summary>ソートに使用されるプロパティを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.SortDescription.SortConverter">
            <summary>マップされた列を表示値に基づいてソートするために使用するソートコンバータを取得または設定します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Square">
            <summary>AnnotationLayerの正方形注釈を表します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Square.#ctor">
            <summary>Squareインスタンスを作成します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Square.Length">
            <summary>Square注釈の長さを取得または設定します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.SVGStyle">
            <summary>SVG スタイルを表します。</summary>
            <summary>SVG スタイルを表します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.SVGStyle.#ctor">
            <summary>SVGStyleクラスの新しいインスタンスを初期化します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.SVGStyle.ArrowEnd">
            <summary>パスの終端の矢印を取得または設定します。文字列の書式は、&lt;タイプ&gt;[-&lt;幅&gt;[-&lt;長さ&gt;]]です。有効な値は、タイプがclassic、block、open、oval、diamond、none、幅がwide、narrow、medium、長さがlong、short、mediumです。</summary>
        </member>
        <member name="P:C1.Web.Mvc.SVGStyle.ClipRect">
            <summary>カンマまたはスペース区切り値：x、y、幅、高さ</summary>
        </member>
        <member name="P:C1.Web.Mvc.SVGStyle.Cursor">
            <summary>カーソルの CSS タイプ。</summary>
        </member>
        <member name="P:C1.Web.Mvc.SVGStyle.Cx">
            <summary>円または楕円の中心の x 軸座標</summary>
        </member>
        <member name="P:C1.Web.Mvc.SVGStyle.Cy">
            <summary>円または楕円の中心の y 軸座標</summary>
        </member>
        <member name="P:C1.Web.Mvc.SVGStyle.Fill">
            <summary>チャートスタイルの塗りつぶし色を示す値。</summary>
        </member>
        <member name="P:C1.Web.Mvc.SVGStyle.FillOpacity">
            <summary>SVG 要素の塗りつぶしの不透明度を示す値。</summary>
        </member>
        <member name="P:C1.Web.Mvc.SVGStyle.Font">
            <summary>チャートスタイルのフォントを示す値。</summary>
        </member>
        <member name="P:C1.Web.Mvc.SVGStyle.FontFamily">
            <summary>SVG 要素のフォントファミリを示す値。</summary>
        </member>
        <member name="P:C1.Web.Mvc.SVGStyle.FontSize">
            <summary>SVG 要素のフォントサイズを示す値。</summary>
        </member>
        <member name="P:C1.Web.Mvc.SVGStyle.FontWeight">
            <summary>SVG 要素のフォントウェイトを示す値。</summary>
        </member>
        <member name="P:C1.Web.Mvc.SVGStyle.Height">
            <summary>SVG 要素の高さを示す値。</summary>
        </member>
        <member name="P:C1.Web.Mvc.SVGStyle.Href">
            <summary>指定された要素がハイパーリンクとして動作する場合に、URL を示す値。</summary>
        </member>
        <member name="P:C1.Web.Mvc.SVGStyle.Opacity">
            <summary>不透明度を示す値。</summary>
        </member>
        <member name="P:C1.Web.Mvc.SVGStyle.Path">
            <summary>SVG パス文字列書式</summary>
        </member>
        <member name="P:C1.Web.Mvc.SVGStyle.R">
            <summary>円、楕円、または四角形の角丸の半径</summary>
        </member>
        <member name="P:C1.Web.Mvc.SVGStyle.Rx">
            <summary>楕円の横方向の半径</summary>
        </member>
        <member name="P:C1.Web.Mvc.SVGStyle.Ry">
            <summary>楕円の縦方向の半径</summary>
        </member>
        <member name="P:C1.Web.Mvc.SVGStyle.Src">
            <summary>画像の URL。Element.image 要素でのみ機能します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.SVGStyle.Stroke">
            <summary>ストローク色を示す値。</summary>
        </member>
        <member name="P:C1.Web.Mvc.SVGStyle.StrokeDasharray">
            <summary>ストローク破線配列を示す値。設定可能な値：［""、"-"、"."、"-."、"-.."、". "、"- "、"--"、"- ."、"--."、"--.."］</summary>
        </member>
        <member name="P:C1.Web.Mvc.SVGStyle.StrokeLinecap">
            <summary>ストロークラインキャップを示す値。設定可能な値：［"butt"、"square"、"round"］</summary>
        </member>
        <member name="P:C1.Web.Mvc.SVGStyle.StrokeLinejoin">
            <summary>ストロークの線の結合方法を示す値。設定可能な値：［"bevel"、"round"、"miter"］</summary>
        </member>
        <member name="P:C1.Web.Mvc.SVGStyle.StrokeMiterlimit">
            <summary>ストロークのマイターリミットを示す値。</summary>
        </member>
        <member name="P:C1.Web.Mvc.SVGStyle.StrokeOpacity">
            <summary>ストロークの不透明度を示す値。</summary>
        </member>
        <member name="P:C1.Web.Mvc.SVGStyle.StrokeWidth">
            <summary>ストローク幅を示す値。</summary>
        </member>
        <member name="P:C1.Web.Mvc.SVGStyle.Target">
            <summary>href と共に使用します</summary>
        </member>
        <member name="P:C1.Web.Mvc.SVGStyle.Text">
            <summary>テキスト要素のコンテンツ。複数行のテキストには \n を使用します</summary>
        </member>
        <member name="P:C1.Web.Mvc.SVGStyle.TextAnchor">
            <summary>設定可能な値：［"start"、"middle"、"end"］。デフォルトは "middle" です</summary>
        </member>
        <member name="P:C1.Web.Mvc.SVGStyle.Title">
            <summary>ツールチップを作成するためのテキスト値。</summary>
        </member>
        <member name="P:C1.Web.Mvc.SVGStyle.Transform">
            <summary>SVG 要素が変換アクションを行うための文字列値。</summary>
        </member>
        <member name="P:C1.Web.Mvc.SVGStyle.Width">
            <summary>チャートスタイルの幅を示す値。</summary>
        </member>
        <member name="P:C1.Web.Mvc.SVGStyle.X">
            <summary>チャートスタイルの x ポイントを示す値。</summary>
        </member>
        <member name="P:C1.Web.Mvc.SVGStyle.Y">
            <summary>チャートスタイルの y ポイントを示す値。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Text">
            <summary>AnnotationLayerのテキスト注釈を表します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Text.#ctor">
            <summary>Text注釈インスタンスを作成します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Text.Content">
            <summary>注釈のテキストを取得または設定します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.TitleStyle">
            <summary>FlexChart と FlexPie のタイトルのスタイル</summary>
        </member>
        <member name="P:C1.Web.Mvc.TitleStyle.FontSize">
            <summary>タイトルのフォントサイズを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.TitleStyle.Foreground">
            <summary>タイトルの前景色を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.TitleStyle.Fill">
            <summary>タイトルの塗りつぶしスタイルを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.TitleStyle.FontFamily">
            <summary>タイトルのフォントファミリを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.TitleStyle.Halign">
            <summary>タイトルの水平方向の配置を取得または設定します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.TrendLine`1">
            <summary>FlexChartのTrendLine系列拡張を表します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.TrendLine`1.#ctor(C1.Web.Mvc.FlexChartCore{`0})">
            <summary>TrendLineクラスの新しいインスタンスを初期化します。</summary>
            <param name="owner">FlexChartCoreから派生したオブジェクト。</param>
        </member>
        <member name="P:C1.Web.Mvc.TrendLine`1.FitType">
            <summary>傾向線のフィッティングタイプを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.TrendLine`1.TrendLineOrder">
            <summary>多項式またはフーリエ方程式の項の数を取得または設定します。</summary>
            <remarks>この値は、1より大きい整数に設定してください。これは、fitTypeがTrendLineFitType.PolynomialまたはTrendLineFitType.Fourierに設定されている場合に動作します。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.TrendLine`1.ExtraSeriesTypeName">
            <summary>系列名を取得します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Waterfall`1">
            <summary>通常、ウォータフォール系列は、開始位置からの増加または減少の様子を一連の変化量によって表示するために使用されます。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Waterfall`1.#ctor(C1.Web.Mvc.FlexChartCore{`0})">
            <summary>Waterfallクラスの新しいインスタンスを初期化します。</summary>
            <param name="owner">FlexChartCoreから派生したオブジェクト。</param>
        </member>
        <member name="P:C1.Web.Mvc.Waterfall`1.ConnectorLines">
            <summary>接続線を表示するかどうかを決定する値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Waterfall`1.IntermediateTotalLabels">
            <summary>小計バーのラベルを含むプロパティの値を取得または設定します。プロパティは、ShowIntermediateTotalおよびIntermediateToolPositionsプロパティと組み合わせて使用する必要があります。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Waterfall`1.IntermediateTotalPositions">
            <summary>小計バーの位置のインデックスを含むプロパティの値を取得または設定します。プロパティは、ShowIntermediateTotalおよびIntermediateToolLabelsプロパティと組み合わせて使用する必要があります。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Waterfall`1.RelativeData">
            <summary>指定されたデータが相対的かどうかを判定する値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Waterfall`1.ShowIntermediateTotal">
            <summary>小計バーを表示するかどうかを決定する値を取得または設定します。このプロパティは、IntermediateToolPositionsおよびIntermediateToolLabelsプロパティと組み合わせて使用する必要があります。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Waterfall`1.ShowTotal">
            <summary>合計バーを表示するかどうかを決定する値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Waterfall`1.Start">
            <summary>開始バーの値を決定する値を取得または設定します。開始値がnullの場合、開始バーは表示されません。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Waterfall`1.StartLabel">
            <summary>開始バーのラベルを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Waterfall`1.Styles">
            <summary>ウォータフォールのスタイルを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Waterfall`1.TotalLabel">
            <summary>合計バーのラベルを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Waterfall`1.ExtraSeriesTypeName">
            <summary>系列名を取得します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.WaterfallStyles">
            <summary>ウォータフォール系列でサポートされるスタイル</summary>
        </member>
        <member name="M:C1.Web.Mvc.WaterfallStyles.#ctor">
            <summary>WaterfallStylesクラスの新しいインスタンスを初期化します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.WaterfallStyles.Start">
            <summary>開始バーのスタイルを指定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.WaterfallStyles.Total">
            <summary>合計バーのスタイルを指定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.WaterfallStyles.IntermediateTotal">
            <summary>小計バーのスタイルを指定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.WaterfallStyles.Falling">
            <summary>減少バーのスタイルを指定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.WaterfallStyles.Rising">
            <summary>増加バーのスタイルを指定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.WaterfallStyles.ConnectorLines">
            <summary>connectorLinesのスタイルを指定します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.YFunctionSeries`1">
            <summary>FlexChartのYFunctionSeries拡張を表します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.YFunctionSeries`1.#ctor(C1.Web.Mvc.FlexChartCore{`0})">
            <summary>YFunctionSeriesクラスの新しいインスタンスを初期化します。</summary>
            <param name="owner">FlexChartCoreから派生したオブジェクト。</param>
        </member>
        <member name="P:C1.Web.Mvc.YFunctionSeries`1.Func">
            <summary>値の計算に使用される関数を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.YFunctionSeries`1.ExtraSeriesTypeName">
            <summary>系列名を取得します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.AnnotationBaseBuilder`2">
            <summary>AnnotationBaseのビルダ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AnnotationBaseBuilder`2.#ctor(`0)">
            <summary>1つのAnnotationBaseBuilderインスタンスを作成します。</summary>
            <param name="obj">AnnotationBaseオブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AnnotationBaseBuilder`2.Attachment(C1.Web.Mvc.AnnotationAttachment)">
            <summary>Attachmentプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AnnotationBaseBuilder`2.IsVisible(System.Boolean)">
            <summary>IsVisibleプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AnnotationBaseBuilder`2.Name(System.String)">
            <summary>Nameプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AnnotationBaseBuilder`2.Offset(System.Drawing.PointF)">
            <summary>Offsetプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AnnotationBaseBuilder`2.Point(C1.Web.Mvc.DataPoint)">
            <summary>Pointプロパティを設定します。</summary>
            <remarks>注釈のポイントを取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AnnotationBaseBuilder`2.PointIndex(System.Int32)">
            <summary>PointIndexプロパティを設定します。</summary>
            <remarks>注釈のデータポイントインデックスを取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AnnotationBaseBuilder`2.Position(C1.Web.Mvc.AnnotationPosition)">
            <summary>Positionプロパティを設定します。</summary>
            <remarks>注釈の位置を取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AnnotationBaseBuilder`2.SeriesIndex(System.Int32)">
            <summary>SeriesIndexプロパティを設定します。</summary>
            <remarks>注釈のデータ系列インデックスを取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AnnotationBaseBuilder`2.Style(System.Action{C1.Web.Mvc.Fluent.SVGStyleBuilder})">
            <summary>Styleプロパティを設定します。</summary>
            <param name="build">構築関数</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AnnotationBaseBuilder`2.Tooltip(System.String)">
            <summary>Tooltipプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AnnotationBaseBuilder`2.Style(C1.Web.Mvc.SVGStyle)">
            <summary>Styleプロパティを設定します。</summary>
            <remarks>注釈のスタイルを取得または設定します。</remarks>
            <param name="style">SVGStyleインスタンス</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.BoxWhiskerBuilder`1">
            <summary>BoxWhiskerのビルダ。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ExtraSeriesBuilder`3">
            <summary>ExtraSeriesのビルダ。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ChartSeriesBaseBuilder`3">
            <summary>ChartSeriesBaseのビルダ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartSeriesBaseBuilder`3.#ctor(`1)">
            <summary>1つのChartSeriesBaseBuilderインスタンスを作成します。</summary>
            <param name="obj">ChartSeriesBaseオブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartSeriesBaseBuilder`3.SymbolSize(System.Int32)">
            <summary>SymbolSizeプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartSeriesBaseBuilder`3.BindingX(System.String)">
            <summary>BindingXプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartSeriesBaseBuilder`3.Binding(System.String)">
            <summary>Bindingプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartSeriesBaseBuilder`3.Name(System.String)">
            <summary>Nameプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartSeriesBaseBuilder`3.CssClass(System.String)">
            <summary>CssClassプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartSeriesBaseBuilder`3.Style(System.Action{C1.Web.Mvc.Fluent.SVGStyleBuilder})">
            <summary>Styleプロパティを設定します。</summary>
            <param name="build">構築関数</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartSeriesBaseBuilder`3.SymbolStyle(System.Action{C1.Web.Mvc.Fluent.SVGStyleBuilder})">
            <summary>SymbolStyleプロパティを設定します。</summary>
            <param name="build">構築関数</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartSeriesBaseBuilder`3.OnClientRendering(System.String)">
            <summary>OnClientRenderingプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartSeriesBaseBuilder`3.AltStyle(System.Action{C1.Web.Mvc.Fluent.SVGStyleBuilder})">
            <summary>AltStyleプロパティを設定します。</summary>
            <remarks>系列の代替スタイルを取得または設定します。このプロパティから得られる値は、横棒グラフ、縦棒グラフ、および散布図での負の値、およびCandlestick、LineBreak、EquiVolumeなど株価チャートタイプの上昇値に使用されます。</remarks>
            <param name="build">構築関数</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartSeriesBaseBuilder`3.OnClientRendered(System.String)">
            <summary>OnClientRenderedプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartSeriesBaseBuilder`3.#ctor(`1,C1.Web.Mvc.FlexChart{`0})">
            <summary>1つのChartSeriesBaseBuilderインスタンスを作成します。</summary>
            <param name="obj">ChartSeriesオブジェクト。</param>
            <param name="Owner">この系列を所有するチャート。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartSeriesBaseBuilder`3.Visibility(C1.Web.Mvc.Chart.SeriesVisibility)">
            <summary>Visibilityプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartSeriesBaseBuilder`3.AxisX(C1.Web.Mvc.Chart.Position)">
            <summary>AxisXプロパティを設定します。</summary>
            <param name="position">AxisXの位置</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartSeriesBaseBuilder`3.AxisX(System.Action{C1.Web.Mvc.Fluent.ChartAxisBuilder{`0}})">
            <summary>AxisXプロパティを設定します。</summary>
            <param name="build">構築関数</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartSeriesBaseBuilder`3.AxisY(C1.Web.Mvc.Chart.Position)">
            <summary>AxisYプロパティを設定します。</summary>
            <param name="position">AxisYの位置</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartSeriesBaseBuilder`3.AxisY(System.Action{C1.Web.Mvc.Fluent.ChartAxisBuilder{`0}})">
            <summary>AxisYプロパティを設定します。</summary>
            <param name="build">構築関数</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartSeriesBaseBuilder`3.Symbol(C1.Web.Mvc.Chart.Marker,System.Int32)">
            <summary>系列にシンボルを設定します。</summary>
            <param name="marker">シンボルマーカータイプ</param>
            <param name="symbolSize">シンボルのサイズ</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartSeriesBaseBuilder`3.Symbol(C1.Web.Mvc.Chart.Marker,System.Int32,System.Action{C1.Web.Mvc.Fluent.SVGStyleBuilder})">
            <summary>系列にシンボルを設定します。</summary>
            <param name="marker">シンボルマーカータイプ</param>
            <param name="symbolSize">シンボルのサイズ</param>
            <param name="symbolStyleBuilder">シンボルスタイルのビルダ</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartSeriesBaseBuilder`3.SymbolMarker(C1.Web.Mvc.Chart.Marker)">
            <summary>SymbolMarkerプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartSeriesBaseBuilder`3.Bind(System.String)">
            <summary>データの読み取りに使用されるアクションのURLを使用してデータを連結します。</summary>
            <param name="readActionUrl">データの読み取りに使用されるアクションのURL</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartSeriesBaseBuilder`3.Bind(System.String,System.String)">
            <summary>指定されたxデータフィールド名およびデータの読み取りに使用されるアクションのURLを使用してデータを連結します。</summary>
            <param name="xDataFieldName">xデータフィールドの名前を設定します。</param>
            <param name="readActionUrl">データの読み取りに使用されるアクションのURL</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartSeriesBaseBuilder`3.Bind(System.String,System.String,System.String)">
            <summary>指定されたxデータフィールド名、値プロパティ、およびデータの読み取りに使用されるアクションのURLを使用してデータを連結します。</summary>
            <param name="xDataFieldName">xデータフィールドの名前を設定します。</param>
            <param name="valueProperty">値データフィールドの名前を設定します。</param>
            <param name="readActionUrl">データの読み取りに使用されるアクションのURL</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartSeriesBaseBuilder`3.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>データをデータソースと連結します。</summary>
            <param name="sourceCollection">データソース</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartSeriesBaseBuilder`3.Bind(System.String,System.Collections.Generic.IEnumerable{`0})">
            <summary>指定されたxデータフィールド名およびデータソースを使用してデータを連結します。</summary>
            <param name="xDataFieldName">xデータフィールドの名前を設定します。</param>
            <param name="sourceCollection">データソース</param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartSeriesBaseBuilder`3.Bind(System.String,System.String,System.Collections.Generic.IEnumerable{`0})">
            <summary>データソースの指定されたxデータフィールド名および値プロパティを使用してデータを連結します。</summary>
            <param name="xDataFieldName">xデータフィールドの名前を設定します。</param>
            <param name="valueProperty">値データフィールドの名前を設定します。</param>
            <param name="sourceCollection">データソース</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartSeriesBaseBuilder`3.BindODataSource(System.Action{C1.Web.Mvc.Fluent.ODataCollectionViewServiceBuilder{`0}})">
            <summary>
                <see cref="P:C1.Web.Mvc.ChartSeriesBase`1.ItemsSource" /> を構成します。
            ItemsSource を設定します。</summary>
            <param name="build">
                <see cref="T:C1.Web.Mvc.ODataCollectionViewService`1" /> を構築するアクション。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartSeriesBaseBuilder`3.BindODataVirtualSource(System.Action{C1.Web.Mvc.Fluent.ODataVirtualCollectionViewServiceBuilder{`0}})">
            <summary>
                <see cref="P:C1.Web.Mvc.ChartSeriesBase`1.ItemsSource" /> を構成します。
            ItemsSource を設定します。</summary>
            <param name="build">
                <see cref="T:C1.Web.Mvc.ODataVirtualCollectionViewService`1" /> を構築するアクション。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ExtraSeriesBuilder`3.#ctor(`1)">
            <summary>1つのExtraSeriesBuilderインスタンスを作成します。</summary>
            <param name="obj">ExtraSeriesオブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BoxWhiskerBuilder`1.#ctor(C1.Web.Mvc.BoxWhisker{`0})">
            <summary>1つのBoxWhiskerBuilderインスタンスを作成します。</summary>
            <param name="obj">BoxWhiskerオブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BoxWhiskerBuilder`1.GapWidth(System.Single)">
            <summary>GapWidthプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BoxWhiskerBuilder`1.GroupWidth(System.Single)">
            <summary>GroupWidthプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BoxWhiskerBuilder`1.MeanLineStyle(System.Action{C1.Web.Mvc.Fluent.SVGStyleBuilder})">
            <summary>MeanLineStyleプロパティを設定します。</summary>
            <param name="build">構築関数</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BoxWhiskerBuilder`1.MeanMarkerStyle(System.Action{C1.Web.Mvc.Fluent.SVGStyleBuilder})">
            <summary>MeanMarkerStyleプロパティを設定します。</summary>
            <param name="build">構築関数</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BoxWhiskerBuilder`1.QuartileCalculation(C1.Web.Mvc.Chart.QuartileCalculation)">
            <summary>QuartileCalculationプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BoxWhiskerBuilder`1.ShowInnerPoints(System.Boolean)">
            <summary>ShowInnerPointsプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BoxWhiskerBuilder`1.ShowMeanLine(System.Boolean)">
            <summary>ShowMeanLineプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BoxWhiskerBuilder`1.ShowMeanMarker(System.Boolean)">
            <summary>ShowMeanMarkerプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BoxWhiskerBuilder`1.ShowOutliers(System.Boolean)">
            <summary>ShowOutliersプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.CellTemplateBuilder">
            <summary>CellTemplate のビルダ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CellTemplateBuilder.#ctor(C1.Web.Mvc.CellTemplate)">
            <summary>１つの CellTemplateBuilder インスタンスを作成します。</summary>
            <param name="obj">CellTemplate オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CellTemplateBuilder.TemplateId(System.String)">
            <summary>TemplateIdプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CellTemplateBuilder.TemplateContent(System.String)">
            <summary>TemplateContentプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CellTemplateBuilder.EditTemplateId(System.String)">
            <summary>EditTemplateIdプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CellTemplateBuilder.EditTemplateContent(System.String)">
            <summary>EditTemplateContentプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CellTemplateBuilder.Template(System.String)">
            <summary>このメソッドは廃止されたため、削除してください。</summary>
            <param name="value">テンプレートのコンテンツ。</param>
            <returns>セルテンプレートビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CellTemplateBuilder.EditTemplate(System.String)">
            <summary>このメソッドは廃止されたため、削除してください。</summary>
            <param name="value">エディタテンプレートのコンテンツ。</param>
            <returns>セルテンプレートビルダ。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ChartAxisBuilder`1">
            <summary>ChartAxis のビルダ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAxisBuilder`1.#ctor(C1.Web.Mvc.ChartAxis{`0})">
            <summary>１つの ChartAxisBuilder インスタンスを作成します。</summary>
            <param name="obj">ChartAxis オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAxisBuilder`1.Reversed(System.Boolean)">
            <summary>Reversed プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAxisBuilder`1.MajorUnit(System.Double)">
            <summary>MajorUnit プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAxisBuilder`1.MinorUnit(System.Double)">
            <summary>MinorUnit プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAxisBuilder`1.Name(System.String)">
            <summary>Name プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAxisBuilder`1.Title(System.String)">
            <summary>Title プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAxisBuilder`1.Format(System.String)">
            <summary>Format プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAxisBuilder`1.MajorGrid(System.Boolean)">
            <summary>MajorGrid プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAxisBuilder`1.MinorGrid(System.Boolean)">
            <summary>MinorGrid プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAxisBuilder`1.AxisLine(System.Boolean)">
            <summary>AxisLine プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAxisBuilder`1.Labels(System.Boolean)">
            <summary>Labels プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAxisBuilder`1.LabelAngle(System.Nullable{System.Int32})">
            <summary>
                <see cref="P:C1.Web.Mvc.ChartAxis`1.LabelAngle" /> を構成します。
            軸ラベルの回転角度を設定します。この角度は、-90 から 90 の有効な値で測定されます。</summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAxisBuilder`1.Origin(System.Nullable{System.Double})">
            <summary>Origin プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAxisBuilder`1.ItemFormatter(System.String)">
            <summary>ItemFormatter プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAxisBuilder`1.OnClientRangeChanged(System.String)">
            <summary>OnClientRangeChanged プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAxisBuilder`1.Binding(System.String)">
            <summary>Binding プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAxisBuilder`1.LogBase(System.Nullable{System.Double})">
            <summary>LogBaseプロパティを設定します。</summary>
            <remarks>軸の対数の底を取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAxisBuilder`1.LabelAlign(System.String)">
            <summary>LabelAlignプロパティを設定します。</summary>
            <remarks>ラベルの配置を取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAxisBuilder`1.PlotAreaIndex(System.Nullable{System.Int32})">
            <summary>PlotAreaIndexプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAxisBuilder`1.LabelPadding(System.Int32)">
            <summary>LabelPaddingプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAxisBuilder`1.Position(C1.Web.Mvc.Chart.Position)">
            <summary>列挙された軸位置を設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAxisBuilder`1.MajorTickMarks(C1.Web.Mvc.Chart.AxisTickMark)">
            <summary>軸の大目盛りマークの位置を設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAxisBuilder`1.MinorTickMarks(C1.Web.Mvc.Chart.AxisTickMark)">
            <summary>軸の小目盛りマークの位置を設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAxisBuilder`1.OverlappingLabels(C1.Web.Mvc.Chart.AxisOverlappingLabels)">
            <summary>軸ラベルを重ねる方法を設定します。</summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAxisBuilder`1.Bind(System.String)">
            <summary>軸を特別なデータソースと連結して、ラベルをカスタマイズします。</summary>
            <param name="readActionUrl">データの読み取りに使用されるアクションの URL</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAxisBuilder`1.Bind(System.String,System.String)">
            <summary>軸を特別なデータソースと連結して、ラベルをカスタマイズします。</summary>
            <param name="bindingFields">データソースと連結するフィールド。</param>
            <param name="readActionUrl">データの読み取りに使用されるアクションの URL</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAxisBuilder`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>軸を特別なデータソースと連結して、ラベルをカスタマイズします。</summary>
            <param name="sourceCollection">データソース</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAxisBuilder`1.Bind(System.String,System.Collections.Generic.IEnumerable{`0})">
            <summary>軸を特別なデータソースと連結して、ラベルをカスタマイズします。</summary>
            <param name="bindingFields">データソースと連結するフィールド。</param>
            <param name="sourceCollection">データソース</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAxisBuilder`1.Min(System.Nullable{System.Double})">
            <summary>Min プロパティを設定します。</summary>
            <remarks>軸に表示される最小値を取得または設定します。設定されない場合は、最小値が自動的に計算されます。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAxisBuilder`1.Min(System.DateTime)">
            <summary>Minプロパティを設定します。</summary>
            <remarks>軸に表示される最小値を取得または設定します。設定されない場合は、最小値が自動的に計算されます。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAxisBuilder`1.Max(System.Nullable{System.Double})">
            <summary>Max プロパティを設定します。</summary>
            <remarks>軸に表示される最大値を取得または設定します。設定されない場合は、最大値が自動的に計算されます。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAxisBuilder`1.Max(System.DateTime)">
            <summary>Maxプロパティを設定します。</summary>
            <remarks>軸に表示される最大値を取得または設定します。設定されない場合は、最大値が自動的に計算されます。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAxisBuilder`1.BindODataSource(System.Action{C1.Web.Mvc.Fluent.ODataCollectionViewServiceBuilder{`0}})">
            <summary>
                <see cref="P:C1.Web.Mvc.ChartAxis`1.ItemsSource" /> を構成します。
            ItemsSource を設定します。</summary>
            <param name="build">
                <see cref="T:C1.Web.Mvc.ODataCollectionViewService`1" /> を構築するアクション。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAxisBuilder`1.BindODataVirtualSource(System.Action{C1.Web.Mvc.Fluent.ODataVirtualCollectionViewServiceBuilder{`0}})">
            <summary>
                <see cref="P:C1.Web.Mvc.ChartAxis`1.ItemsSource" /> を構成します。
            ItemsSource を設定します。</summary>
            <param name="build">
                <see cref="T:C1.Web.Mvc.ODataVirtualCollectionViewService`1" /> を構築するアクション。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ChartSeriesBuilder`1">
            <summary>ChartSeries のビルダ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartSeriesBuilder`1.#ctor(C1.Web.Mvc.ChartSeries{`0})">
            <summary>１つの ChartSeriesBuilder インスタンスを作成します。</summary>
            <param name="obj">ChartSeries オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartSeriesBuilder`1.ChartType(C1.Web.Mvc.Chart.ChartType)">
            <summary>ChartTypeプロパティを設定します。</summary>
            <remarks>チャート全体に設定されているチャートタイプを上書きする、特定の系列のチャートタイプを取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ChartTooltipBuilder">
            <summary>ChartTooltip のビルダ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartTooltipBuilder.#ctor(C1.Web.Mvc.ChartTooltip)">
            <summary>１つの ChartTooltipBuilder インスタンスを作成します。</summary>
            <param name="obj">ChartTooltip オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartTooltipBuilder.Content(System.String)">
            <summary>Content プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartTooltipBuilder.Gap(System.Int32)">
            <summary>Gap プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartTooltipBuilder.HideDelay(System.Int32)">
            <summary>HideDelay プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartTooltipBuilder.IsContentHtml(System.Boolean)">
            <summary>IsContentHtml プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartTooltipBuilder.ShowDelay(System.Int32)">
            <summary>ShowDelay プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartTooltipBuilder.Threshold(System.Int32)">
            <summary>Threshold プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartTooltipBuilder.OnClientPopup(System.String)">
            <summary>OnClientPopupプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartTooltipBuilder.ShowAtMouse(System.Boolean)">
            <summary>ShowAtMouseプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.CircleBuilder">
            <summary>Circleのビルダ。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ShapeBuilder`2">
            <summary>Shapeのビルダ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ShapeBuilder`2.#ctor(`0)">
            <summary>1つのShapeBuilderインスタンスを作成します。</summary>
            <param name="obj">Shapeオブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ShapeBuilder`2.Content(System.String)">
            <summary>Contentプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CircleBuilder.#ctor(C1.Web.Mvc.Circle)">
            <summary>1つのCircleBuilderインスタンスを作成します。</summary>
            <param name="obj">Circleオブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CircleBuilder.Radius(System.Single)">
            <summary>Radiusプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ColumnBuilder">
            <summary>Column のビルダ。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ColumnBaseBuilder`2">
            <summary>ColumnBaseのビルダ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnBaseBuilder`2.#ctor(`0)">
            <summary>1つのColumnBaseBuilderインスタンスを作成します。</summary>
            <param name="obj">ColumnBaseオブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnBaseBuilder`2.AllowDragging(System.Boolean)">
            <summary>AllowDraggingプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnBaseBuilder`2.AllowMerging(System.Boolean)">
            <summary>AllowMergingプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnBaseBuilder`2.AllowResizing(System.Boolean)">
            <summary>AllowResizingプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnBaseBuilder`2.CssClass(System.String)">
            <summary>CssClassプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnBaseBuilder`2.IsContentHtml(System.Boolean)">
            <summary>IsContentHtmlプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnBaseBuilder`2.IsReadOnly(System.Boolean)">
            <summary>IsReadOnlyプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnBaseBuilder`2.IsSelected(System.Boolean)">
            <summary>IsSelectedプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnBaseBuilder`2.Visible(System.Boolean)">
            <summary>Visibleプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnBaseBuilder`2.WordWrap(System.Boolean)">
            <summary>WordWrapプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnBaseBuilder`2.Aggregate(C1.Web.Mvc.Grid.Aggregate)">
            <summary>Aggregateプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnBaseBuilder`2.Align(System.String)">
            <summary>Alignプロパティを設定します。</summary>
            <remarks>この列内の項目の水平方向の配置を取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnBaseBuilder`2.AllowSorting(System.Boolean)">
            <summary>AllowSortingプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnBaseBuilder`2.Binding(System.String)">
            <summary>Bindingプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnBaseBuilder`2.DataType(System.Nullable{C1.Web.Mvc.Grid.DataType})">
            <summary>DataTypeプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnBaseBuilder`2.Format(System.String)">
            <summary>Formatプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnBaseBuilder`2.Header(System.String)">
            <summary>Headerプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnBaseBuilder`2.InputType(System.String)">
            <summary>InputTypeプロパティを設定します。</summary>
            <remarks>この列の値を編集する際に使用されるHTML入力要素の"type"属性を取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnBaseBuilder`2.Mask(System.String)">
            <summary>Maskプロパティを設定します。</summary>
            <remarks>この列の値を編集する際に使用されるマスクを取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnBaseBuilder`2.MaxWidth(System.Nullable{System.Int32})">
            <summary>MaxWidthプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnBaseBuilder`2.MinWidth(System.Nullable{System.Int32})">
            <summary>MinWidthプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnBaseBuilder`2.Name(System.String)">
            <summary>Nameプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnBaseBuilder`2.Required(System.Nullable{System.Boolean})">
            <summary>Requiredプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnBaseBuilder`2.IsRequired(System.Nullable{System.Boolean})">
            <summary>IsRequiredプロパティを設定します。</summary>
            <remarks>列の値が必須かどうかを決定する値を取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnBaseBuilder`2.Width(System.String)">
            <summary>Widthプロパティを設定します。</summary>
            <remarks>この列の幅を取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnBaseBuilder`2.CellTemplate(System.Action{C1.Web.Mvc.Fluent.CellTemplateBuilder})">
            <summary>CellTemplateプロパティを設定します。</summary>
            <remarks>この列のセルテンプレートを取得します。</remarks>
            <param name="build">構築関数</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnBaseBuilder`2.SortMemberPath(System.String)">
            <summary>SortMemberPathプロパティを設定します。</summary>
            <remarks>この列のソートに使用するプロパティの名前を取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnBaseBuilder`2.DataMap(System.Action{C1.Web.Mvc.Fluent.DataMapBuilder})">
            <summary>DataMapプロパティを設定します。</summary>
            <remarks>未加工の値を列の表示値に変換するために使用されるDataMapを取得します。</remarks>
            <param name="build">構築関数</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnBaseBuilder`2.ShowDropDown(System.Boolean)">
            <summary>ShowDropDownプロパティを設定します。</summary>
            <remarks>グリッドで、この列のセルにドロップダウンボタンを追加するかどうかを示す値を取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnBaseBuilder`2.DropDownCssClass(System.String)">
            <summary>DropDownCssClassプロパティを設定します。</summary>
            <remarks>この列のドロップダウンに追加するCSSクラス名を取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnBaseBuilder`2.MaxLength(System.Nullable{System.Int32})">
            <summary>
                <see cref="P:C1.Web.Mvc.ColumnBase.MaxLength" /> を構成します。
            セルに入力可能な最大文字数を設定します。</summary>
            <remarks>入力文字数を制限しない場合は、このプロパティを null に設定します。</remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnBaseBuilder`2.QuickAutoSize(System.Nullable{System.Boolean})">
            <summary>
                <see cref="P:C1.Web.Mvc.ColumnBase.QuickAutoSize" /> を構成します。
            この列を自動サイズ変更する際に、精度よりパフォーマンスを優先して最適化を行うかどうかを決定する値を設定します。</summary>
            <remarks>このプロパティを false に設定すると、この列のクイック自動サイズ変更が無効になります。このプロパティを true に設定すると、グリッドの QuickAutoSize プロパティの値に従って、この機能が有効になります。このプロパティを null（デフォルト値）に設定すると、テンプレートがなく、プレーンテキストが表示されている列では、この機能が有効になります。</remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnBuilder.#ctor(C1.Web.Mvc.Column)">
            <summary>１つの ColumnBuilder インスタンスを作成します。</summary>
            <param name="obj">Column オブジェクト。</param>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ColumnFilterBuilder">
            <summary>ColumnFilterのビルダ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnFilterBuilder.#ctor(C1.Web.Mvc.ColumnFilter)">
            <summary>1つのColumnFilterBuilderインスタンスを作成します。</summary>
            <param name="obj">ColumnFilterオブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnFilterBuilder.Column(System.String)">
            <summary>Columnプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnFilterBuilder.FilterType(System.Nullable{C1.Web.Mvc.FilterType})">
            <summary>FilterTypeプロパティを設定します。</summary>
            <remarks>このフィルタから提供されるフィルタリングのタイプを取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnFilterBuilder.ValueFilter(System.Action{C1.Web.Mvc.Fluent.ValueFilterBuilder})">
            <summary>ValueFilterプロパティを設定します。</summary>
            <param name="build">構築関数</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.DataLabelBuilder">
            <summary>DataLabel のビルダ。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.DataLabelBaseBuilder`2">
            <summary>DataLabelBase のビルダ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DataLabelBaseBuilder`2.#ctor(`0)">
            <summary>１つの DataLabelBaseBuilder インスタンスを作成します。</summary>
            <param name="obj">DataLabelBase オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DataLabelBaseBuilder`2.Content(System.String)">
            <summary>Content プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DataLabelBaseBuilder`2.Border(System.Boolean)">
            <summary>Border プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DataLabelBaseBuilder`2.OnClientRendering(System.String)">
            <summary>OnClientRenderingプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DataLabelBaseBuilder`2.ConnectingLine(System.Boolean)">
            <summary>ConnectingLineプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DataLabelBaseBuilder`2.Offset(System.Double)">
            <summary>Offsetプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DataLabelBuilder.#ctor(C1.Web.Mvc.DataLabel)">
            <summary>１つの DataLabelBuilder インスタンスを作成します。</summary>
            <param name="obj">DataLabel オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DataLabelBuilder.Position(C1.Web.Mvc.Chart.LabelPosition)">
            <summary>Position プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.DataMapBuilder">
            <summary>DataMapのビルダ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DataMapBuilder.#ctor(C1.Web.Mvc.DataMap)">
            <summary>1つのDataMapBuilderインスタンスを作成します。</summary>
            <param name="obj">DataMapオブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DataMapBuilder.DisplayMemberPath(System.String)">
            <summary>DisplayMemberPathプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DataMapBuilder.SelectedValuePath(System.String)">
            <summary>SelectedValuePathプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DataMapBuilder.OnClientMapChanged(System.String)">
            <summary>OnClientMapChangedプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DataMapBuilder.IsEditable(System.Boolean)">
            <summary>IsEditableプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DataMapBuilder.SortByDisplayValues(System.Boolean)">
            <summary>SortByDisplayValuesプロパティを設定します。</summary>
            <remarks>データのソート時にマップされた（表示）値と未加工の値どちらを使用するかを決定する値を取得または設定します。デフォルト値はfalseです。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DataMapBuilder.Bind(System.Action{C1.Web.Mvc.Fluent.CollectionViewServiceBuilder{System.Object}})">
            <summary>ビルダによってItemsSourceを設定します。</summary>
            <param name="itemsSourceBuild">ItemsSourceを設定するためのビルドアクション</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DataMapBuilder.Bind(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>コレクションに連結します。</summary>
            <param name="sourceCollection">ソースコレクション</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DataMapBuilder.Bind(System.String)">
            <summary>読み取りアクションURLを設定します。</summary>
            <param name="readActionUrl">アクションURL。</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DataMapBuilder.BindODataVirtualSource(System.Action{C1.Web.Mvc.Fluent.ODataVirtualCollectionViewServiceBuilder{System.Object}})">
            <summary>
                <see cref="P:C1.Web.Mvc.DataMap.ItemsSource" /> を構成します。
            ItemsSource を設定します。</summary>
            <param name="build">
                <see cref="T:C1.Web.Mvc.ODataVirtualCollectionViewService`1" /> を構築するアクション。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DataMapBuilder.BindODataSource(System.Action{C1.Web.Mvc.Fluent.ODataCollectionViewServiceBuilder{System.Object}})">
            <summary>
                <see cref="P:C1.Web.Mvc.DataMap.ItemsSource" /> を構成します。
            ItemsSource を設定します。</summary>
            <param name="build">
                <see cref="T:C1.Web.Mvc.ODataCollectionViewService`1" /> を構築するアクション。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.DataPointBuilder">
            <summary>DataPointのビルダ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DataPointBuilder.#ctor(C1.Web.Mvc.DataPoint)">
            <summary>1つのDataPointBuilderインスタンスを作成します。</summary>
            <param name="obj">DataPointオブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DataPointBuilder.X(System.Object)">
            <summary>Xプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DataPointBuilder.Y(System.Object)">
            <summary>Yプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.EllipseBuilder">
            <summary>Ellipseのビルダ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.EllipseBuilder.#ctor(C1.Web.Mvc.Ellipse)">
            <summary>1つのEllipseBuilderインスタンスを作成します。</summary>
            <param name="obj">Ellipseオブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.EllipseBuilder.Height(System.Single)">
            <summary>Heightプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.EllipseBuilder.Width(System.Single)">
            <summary>Widthプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ErrorBarBuilder`1">
            <summary>ErrorBarのビルダ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ErrorBarBuilder`1.#ctor(C1.Web.Mvc.ErrorBar{`0})">
            <summary>1つのErrorBarBuilderインスタンスを作成します。</summary>
            <param name="obj">ErrorBarオブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ErrorBarBuilder`1.Direction(C1.Web.Mvc.Chart.ErrorBarDirection)">
            <summary>Directionプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ErrorBarBuilder`1.ErrorAmount(C1.Web.Mvc.Chart.ErrorAmount)">
            <summary>ErrorAmountプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ErrorBarBuilder`1.ErrorBarStyle(System.Action{C1.Web.Mvc.Fluent.SVGStyleBuilder})">
            <summary>ErrorBarStyleプロパティを設定します。</summary>
            <param name="build">構築関数</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ErrorBarBuilder`1.Value(System.Object)">
            <summary>Valueプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ErrorBarBuilder`1.EndStyle(C1.Web.Mvc.Chart.ErrorBarEndStyle)">
            <summary>EndStyleプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ExtraOptionsBuilder">
            <summary>ExtraOptionsのビルダ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ExtraOptionsBuilder.#ctor(C1.Web.Mvc.ExtraOptions)">
            <summary>1つのExtraOptionsBuilderインスタンスを作成します。</summary>
            <param name="obj">ExtraOptionsオブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ExtraOptionsBuilder.BubbleMaxSize(System.Int32)">
            <summary>BubbleMaxSizeプロパティを設定します。</summary>
            <remarks>バブルチャートのシンボルの最大サイズ（ピクセル）を指定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ExtraOptionsBuilder.BubbleMinSize(System.Int32)">
            <summary>BubbleMinSizeプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ExtraOptionsBuilder.GroupWidth(System.String)">
            <summary>GroupWidthプロパティを設定します。</summary>
            <remarks>縦棒グラフのグループ幅、または横棒グラフの高さを指定します。グループ幅は、ピクセル単位または有効なスペースに対するパーセンテージで指定できます。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ExtraOptionsBuilder.Funnel(System.Action{C1.Web.Mvc.Fluent.FunnelOptionsBuilder})">
            <summary>Funnelプロパティを設定します。</summary>
            <param name="build">構築関数</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.FlexRadarSeriesBuilder`1">
            <summary>FlexRadarSeriesのビルダ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexRadarSeriesBuilder`1.#ctor(C1.Web.Mvc.FlexRadarSeries{`0})">
            <summary>1つのFlexRadarSeriesBuilderインスタンスを作成します。</summary>
            <param name="obj">FlexRadarSeriesオブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexRadarSeriesBuilder`1.ChartType(C1.Web.Mvc.Chart.RadarChartType)">
            <summary>ChartTypeプロパティを設定します。</summary>
            <remarks>チャート全体に設定されているチャートタイプをオーバーライドする、特定の系列のチャートタイプを取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.FunctionSeriesBuilder`3">
            <summary>FunctionSeriesのビルダ。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.TrendLineBaseBuilder`3">
            <summary>TrendLineBaseのビルダ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TrendLineBaseBuilder`3.#ctor(`1)">
            <summary>1つのTrendLineBaseBuilderインスタンスを作成します。</summary>
            <param name="obj">TrendLineBaseオブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TrendLineBaseBuilder`3.SampleCount(System.Int32)">
            <summary>SampleCountプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FunctionSeriesBuilder`3.#ctor(`1)">
            <summary>1つのFunctionSeriesBuilderインスタンスを作成します。</summary>
            <param name="obj">FunctionSeriesオブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FunctionSeriesBuilder`3.Min(System.Nullable{System.Double})">
            <summary>Minプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FunctionSeriesBuilder`3.Max(System.Nullable{System.Double})">
            <summary>Maxプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.FunnelOptionsBuilder">
            <summary>FunnelOptionsのビルダ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FunnelOptionsBuilder.#ctor(C1.Web.Mvc.FunnelOptions)">
            <summary>1つのFunnelOptionsBuilderインスタンスを作成します。</summary>
            <param name="obj">FunnelOptionsオブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FunnelOptionsBuilder.NeckWidth(System.Single)">
            <summary>NeckWidthプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FunnelOptionsBuilder.NeckHeight(System.Single)">
            <summary>NeckHeightプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FunnelOptionsBuilder.Type(C1.Web.Mvc.FunnelType)">
            <summary>Typeプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ImageBuilder">
            <summary>Imageのビルダ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ImageBuilder.#ctor(C1.Web.Mvc.Image)">
            <summary>1つのImageBuilderインスタンスを作成します。</summary>
            <param name="obj">Imageオブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ImageBuilder.Height(System.Single)">
            <summary>Heightプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ImageBuilder.Width(System.Single)">
            <summary>Widthプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ImageBuilder.Href(System.String)">
            <summary>Hrefプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.LineBuilder">
            <summary>Lineのビルダ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.LineBuilder.#ctor(C1.Web.Mvc.Line)">
            <summary>1つのLineBuilderインスタンスを作成します。</summary>
            <param name="obj">Lineオブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.LineBuilder.Start(C1.Web.Mvc.DataPoint)">
            <summary>Startプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.LineBuilder.End(C1.Web.Mvc.DataPoint)">
            <summary>Endプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.MenuCommandBuilder">
            <summary>MenuCommand のビルダ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MenuCommandBuilder.#ctor(C1.Web.Mvc.MenuCommand)">
            <summary>１つの MenuCommandBuilder インスタンスを作成します。</summary>
            <param name="obj">MenuCommand オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MenuCommandBuilder.ExecuteCommand(System.String)">
            <summary>ExecuteCommand プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MenuCommandBuilder.CanExecuteCommand(System.String)">
            <summary>CanExecuteCommand プロパティを設定します。</summary>
            <remarks>このメソッドは、コントローラがコマンドを実行できるかどうかを決定するブール値を返します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.MenuItemBuilder">
            <summary>MenuItem のビルダ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MenuItemBuilder.#ctor(C1.Web.Mvc.MenuItem)">
            <summary>１つの MenuItemBuilder インスタンスを作成します。</summary>
            <param name="obj">MenuItem オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MenuItemBuilder.Header(System.String)">
            <summary>Header プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MenuItemBuilder.CommandParameter(System.Object)">
            <summary>CommandParameter プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MenuItemBuilder.IsSeparator(System.Boolean)">
            <summary>IsSeparator プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MenuItemBuilder.Command(System.Action{C1.Web.Mvc.Fluent.MenuCommandBuilder})">
            <summary>Command プロパティを設定します。</summary>
            <param name="build">ビルドアクション</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MenuItemBuilder.Command(System.String,System.String)">
            <summary>Command プロパティを設定します。</summary>
            <param name="execute">execute クライアント関数</param>
            <param name="canExecute">canExecute クライアント関数</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.MovingAverageBuilder`1">
            <summary>MovingAverageのビルダ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MovingAverageBuilder`1.#ctor(C1.Web.Mvc.MovingAverage{`0})">
            <summary>1つのMovingAverageBuilderインスタンスを作成します。</summary>
            <param name="obj">MovingAverageオブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MovingAverageBuilder`1.Period(System.Int32)">
            <summary>Periodプロパティを設定します。</summary>
            <remarks>移動平均線の期間を取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MovingAverageBuilder`1.Type(C1.Web.Mvc.Chart.MovingAverageType)">
            <summary>移動平均線のタイプを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ParametricFunctionSeriesBuilder`1">
            <summary>ParametricFunctionSeriesのビルダ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ParametricFunctionSeriesBuilder`1.#ctor(C1.Web.Mvc.ParametricFunctionSeries{`0})">
            <summary>1つのParametricFunctionSeriesBuilderインスタンスを作成します。</summary>
            <param name="obj">ParametricFunctionSeriesオブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ParametricFunctionSeriesBuilder`1.XFunc(System.String)">
            <summary>XFuncプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ParametricFunctionSeriesBuilder`1.YFunc(System.String)">
            <summary>YFuncプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.PieDataLabelBuilder">
            <summary>PieDataLabel のビルダ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PieDataLabelBuilder.#ctor(C1.Web.Mvc.PieDataLabel)">
            <summary>１つの PieDataLabelBuilder インスタンスを作成します。</summary>
            <param name="obj">PieDataLabel オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PieDataLabelBuilder.Position(C1.Web.Mvc.Chart.PieLabelPosition)">
            <summary>Position プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.PlotAreaBuilder">
            <summary>PlotAreaのビルダ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PlotAreaBuilder.#ctor(C1.Web.Mvc.PlotArea)">
            <summary>１つのPlotAreaBuilderインスタンスを作成します。</summary>
            <param name="obj">PlotAreaオブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PlotAreaBuilder.Column(System.Int32)">
            <summary>Columnプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PlotAreaBuilder.Row(System.Int32)">
            <summary>Rowプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PlotAreaBuilder.Width(System.String)">
            <summary>Widthプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PlotAreaBuilder.Height(System.String)">
            <summary>Heightプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PlotAreaBuilder.Style(System.Action{C1.Web.Mvc.Fluent.SVGStyleBuilder})">
            <summary>Styleプロパティを設定します。</summary>
            <param name="build">構築関数</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PlotAreaBuilder.Name(System.String)">
            <summary>Nameプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.PolygonBuilder">
            <summary>Polygonのビルダ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PolygonBuilder.#ctor(C1.Web.Mvc.Polygon)">
            <summary>1つのPolygonBuilderインスタンスを作成します。</summary>
            <param name="obj">Polygonオブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PolygonBuilder.AddPoint(C1.Web.Mvc.DataPoint)">
            <summary>Polygon注釈のポイントを追加します。</summary>
            <param name="point">DataPointインスタンス</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PolygonBuilder.AddPoint(System.Action{C1.Web.Mvc.Fluent.DataPointBuilder})">
            <summary>Polygon注釈のポイントを追加します。</summary>
            <param name="build">構築関数</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PolygonBuilder.AddPoint(System.Object,System.Object)">
            <summary>Polygon注釈のポイントを追加します。</summary>
            <param name="x">このDataPointのX座標値。</param>
            <param name="y">このDataPointのY座標値。</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PolygonBuilder.AddPoints(C1.Web.Mvc.DataPoint[])">
            <summary>Polygon注釈のポイント配列を追加します。</summary>
            <param name="points">DataPoint配列</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PolygonBuilder.AddPoints(System.Collections.Generic.IEnumerable{C1.Web.Mvc.DataPoint})">
            <summary>Polygon注釈のポイント配列を追加します。</summary>
            <param name="points">DataPointリスト</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.PropertyGroupDescriptionBuilder">
            <summary>PropertyGroupDescription のビルダ。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.GroupDescriptionBuilder`2">
            <summary>GroupDescription のビルダ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.GroupDescriptionBuilder`2.#ctor(`0)">
            <summary>１つの ChartTooltipBuilder インスタンスを作成します。</summary>
            <param name="control">ChartTooltip コントロール。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PropertyGroupDescriptionBuilder.#ctor(C1.Web.Mvc.PropertyGroupDescription)">
            <summary>１つの PropertyGroupDescriptionBuilder インスタンスを作成します。</summary>
            <param name="obj">PropertyGroupDescription オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PropertyGroupDescriptionBuilder.PropertyName(System.String)">
            <summary>PropertyName プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PropertyGroupDescriptionBuilder.ClientConverter(System.String)">
            <summary>ClientConverter プロパティを設定します。</summary>
            <remarks>項目およびプロパティ名を受け取り、グループ名を返すコールバック関数を取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.RangeBuilder">
            <summary>Range のビルダ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.RangeBuilder.#ctor(C1.Web.Mvc.Range)">
            <summary>１つの RangeBuilder インスタンスを作成します。</summary>
            <param name="obj">Range オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.RangeBuilder.Max(System.Double)">
            <summary>Max プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.RangeBuilder.Min(System.Double)">
            <summary>Min プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.RangeBuilder.Name(System.String)">
            <summary>Name プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.RangeBuilder.Thickness(System.Double)">
            <summary>Thickness プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.RangeBuilder.OnClientPropertyChanged(System.String)">
            <summary>OnClientPropertyChanged プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.RangeBuilder.Color(System.Drawing.Color)">
            <summary>Color プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.RectangleBuilder">
            <summary>Rectangleのビルダ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.RectangleBuilder.#ctor(C1.Web.Mvc.Rectangle)">
            <summary>1つのRectangleBuilderインスタンスを作成します。</summary>
            <param name="obj">Rectangleオブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.RectangleBuilder.Height(System.Single)">
            <summary>Heightプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.RectangleBuilder.Width(System.Single)">
            <summary>Widthプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.SortDescriptionBuilder">
            <summary>SortDescription のビルダ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SortDescriptionBuilder.#ctor(C1.Web.Mvc.SortDescription)">
            <summary>１つの SortDescriptionBuilder インスタンスを作成します。</summary>
            <param name="obj">SortDescription オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SortDescriptionBuilder.Ascending(System.Boolean)">
            <summary>Ascending プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SortDescriptionBuilder.Property(System.String)">
            <summary>Property プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.SquareBuilder">
            <summary>Squareのビルダ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SquareBuilder.#ctor(C1.Web.Mvc.Square)">
            <summary>1つのSquareBuilderインスタンスを作成します。</summary>
            <param name="obj">Squareオブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SquareBuilder.Length(System.Single)">
            <summary>Lengthプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.SVGStyleBuilder">
            <summary>SVGStyle のビルダ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SVGStyleBuilder.#ctor(C1.Web.Mvc.SVGStyle)">
            <summary>１つの SVGStyleBuilder インスタンスを作成します。</summary>
            <param name="obj">SVGStyle オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SVGStyleBuilder.ArrowEnd(System.String)">
            <summary>ArrowEndプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SVGStyleBuilder.ClipRect(System.String)">
            <summary>ClipRect プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SVGStyleBuilder.Cursor(System.String)">
            <summary>Cursor プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SVGStyleBuilder.Cx(System.Nullable{System.Double})">
            <summary>Cx プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SVGStyleBuilder.Cy(System.Nullable{System.Double})">
            <summary>Cy プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SVGStyleBuilder.Fill(System.String)">
            <summary>Fill プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SVGStyleBuilder.FillOpacity(System.Nullable{System.Double})">
            <summary>FillOpacity プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SVGStyleBuilder.Font(System.String)">
            <summary>Font プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SVGStyleBuilder.FontFamily(System.String)">
            <summary>FontFamily プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SVGStyleBuilder.FontSize(System.Nullable{System.Single})">
            <summary>FontSize プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SVGStyleBuilder.FontWeight(System.String)">
            <summary>FontWeight プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SVGStyleBuilder.Height(System.Nullable{System.Int32})">
            <summary>Height プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SVGStyleBuilder.Href(System.String)">
            <summary>Href プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SVGStyleBuilder.Opacity(System.Nullable{System.Double})">
            <summary>Opacity プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SVGStyleBuilder.Path(System.String)">
            <summary>Path プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SVGStyleBuilder.R(System.String)">
            <summary>R プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SVGStyleBuilder.Rx(System.Nullable{System.Double})">
            <summary>Rx プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SVGStyleBuilder.Ry(System.Nullable{System.Double})">
            <summary>Ry プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SVGStyleBuilder.Src(System.String)">
            <summary>Src プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SVGStyleBuilder.Stroke(System.String)">
            <summary>Stroke プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SVGStyleBuilder.StrokeDasharray(System.String)">
            <summary>StrokeDasharray プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SVGStyleBuilder.StrokeLinecap(System.String)">
            <summary>StrokeLinecap プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SVGStyleBuilder.StrokeLinejoin(System.String)">
            <summary>StrokeLinejoin プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SVGStyleBuilder.StrokeMiterlimit(System.Nullable{System.Double})">
            <summary>StrokeMiterlimit プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SVGStyleBuilder.StrokeOpacity(System.Nullable{System.Double})">
            <summary>StrokeOpacity プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SVGStyleBuilder.StrokeWidth(System.Nullable{System.Int32})">
            <summary>StrokeWidth プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SVGStyleBuilder.Target(System.String)">
            <summary>Target プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SVGStyleBuilder.Text(System.String)">
            <summary>Text プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SVGStyleBuilder.TextAnchor(System.String)">
            <summary>TextAnchor プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SVGStyleBuilder.Title(System.String)">
            <summary>Title プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SVGStyleBuilder.Transform(System.String)">
            <summary>Transform プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SVGStyleBuilder.Width(System.Nullable{System.Double})">
            <summary>Width プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SVGStyleBuilder.X(System.Nullable{System.Double})">
            <summary>X プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SVGStyleBuilder.Y(System.Nullable{System.Double})">
            <summary>Y プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.TextBuilder">
            <summary>Textのビルダ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TextBuilder.#ctor(C1.Web.Mvc.Text)">
            <summary>1つのTextBuilderインスタンスを作成します。</summary>
            <param name="obj">Textオブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TextBuilder.Content(System.String)">
            <summary>Contentプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.TitleStyleBuilder">
            <summary>TitleStyle のビルダ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TitleStyleBuilder.#ctor(C1.Web.Mvc.TitleStyle)">
            <summary>１つの TitleStyleBuilder インスタンスを作成します。</summary>
            <param name="obj">TitleStyle オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TitleStyleBuilder.FontSize(System.String)">
            <summary>FontSize プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TitleStyleBuilder.Foreground(System.String)">
            <summary>Foreground プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TitleStyleBuilder.Fill(System.String)">
            <summary>Fill プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TitleStyleBuilder.FontFamily(System.String)">
            <summary>FontFamily プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TitleStyleBuilder.Halign(System.String)">
            <summary>Halign プロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.TrendLineBuilder`1">
            <summary>TrendLineのビルダ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TrendLineBuilder`1.#ctor(C1.Web.Mvc.TrendLine{`0})">
            <summary>1つのTrendLineBuilderインスタンスを作成します。</summary>
            <param name="obj">TrendLineオブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TrendLineBuilder`1.TrendLineOrder(System.Int32)">
            <summary>TrendLineOrderプロパティを設定します。</summary>
            <remarks>多項式またはフーリエ方程式の項の数を取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TrendLineBuilder`1.FitType(C1.Web.Mvc.Chart.TrendLineFitType)">
            <summary>傾向線のフィッティングタイプを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ValueFilterBuilder">
            <summary>ValueFilterのビルダ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ValueFilterBuilder.#ctor(C1.Web.Mvc.ValueFilter)">
            <summary>1つのValueFilterBuilderインスタンスを作成します。</summary>
            <param name="obj">ValueFilterオブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ValueFilterBuilder.FilterText(System.String)">
            <summary>FilterTextプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ValueFilterBuilder.MaxValues(System.Int32)">
            <summary>MaxValuesプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ValueFilterBuilder.UniqueValues(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>UniqueValuesプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ValueFilterBuilder.SortValues(System.Boolean)">
            <summary>SortValuesプロパティを設定します。</summary>
            <remarks>エディタに表示するときに値をソートするかどうかを決定する値を取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ValueFilterBuilder.UniqueValues(System.Object[])">
            <summary>UniqueValuesプロパティを設定します。</summary>
            <remarks>リストに表示する一意の値を含む配列を取得または設定します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.WaterfallBuilder`1">
            <summary>Waterfallのビルダ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.WaterfallBuilder`1.#ctor(C1.Web.Mvc.Waterfall{`0})">
            <summary>1つのWaterfallBuilderインスタンスを作成します。</summary>
            <param name="obj">Waterfallオブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.WaterfallBuilder`1.ConnectorLines(System.Boolean)">
            <summary>ConnectorLinesプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.WaterfallBuilder`1.RelativeData(System.Boolean)">
            <summary>RelativeDataプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.WaterfallBuilder`1.ShowIntermediateTotal(System.Boolean)">
            <summary>ShowIntermediateTotalプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.WaterfallBuilder`1.ShowTotal(System.Boolean)">
            <summary>ShowTotalプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.WaterfallBuilder`1.Start(System.Nullable{System.Int32})">
            <summary>Startプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.WaterfallBuilder`1.StartLabel(System.String)">
            <summary>StartLabelプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.WaterfallBuilder`1.Styles(System.Action{C1.Web.Mvc.Fluent.WaterfallStylesBuilder})">
            <summary>Stylesプロパティを設定します。</summary>
            <param name="build">構築関数</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.WaterfallBuilder`1.TotalLabel(System.String)">
            <summary>TotalLabelプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.WaterfallBuilder`1.IntermediateTotalPositions(System.Int32[])">
            <summary>IntermediateTotalPositionsプロパティを設定します。</summary>
            <remarks>小計バーの位置のインデックスを含むプロパティの値を取得または設定します。プロパティは、ShowIntermediateTotalおよびIntermediateToolLabelsプロパティと組み合わせて使用する必要があります。</remarks>
            <param name="positions">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.WaterfallBuilder`1.IntermediateTotalLabels(System.String[])">
            <summary>IntermediateTotalLabelsプロパティを設定します。</summary>
            <remarks>小計バーのラベルを含むプロパティの値を取得または設定します。プロパティは、ShowIntermediateTotalおよびIntermediateToolPositionsプロパティと組み合わせて使用する必要があります。</remarks>
            <param name="labels">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.WaterfallStylesBuilder">
            <summary>WaterfallStylesのビルダ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.WaterfallStylesBuilder.#ctor(C1.Web.Mvc.WaterfallStyles)">
            <summary>1つのWaterfallStylesBuilderインスタンスを作成します。</summary>
            <param name="obj">WaterfallStylesオブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.WaterfallStylesBuilder.Start(System.Action{C1.Web.Mvc.Fluent.SVGStyleBuilder})">
            <summary>Startプロパティを設定します。</summary>
            <param name="build">構築関数</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.WaterfallStylesBuilder.Total(System.Action{C1.Web.Mvc.Fluent.SVGStyleBuilder})">
            <summary>Totalプロパティを設定します。</summary>
            <param name="build">構築関数</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.WaterfallStylesBuilder.IntermediateTotal(System.Action{C1.Web.Mvc.Fluent.SVGStyleBuilder})">
            <summary>IntermediateTotalプロパティを設定します。</summary>
            <param name="build">構築関数</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.WaterfallStylesBuilder.Falling(System.Action{C1.Web.Mvc.Fluent.SVGStyleBuilder})">
            <summary>Fallingプロパティを設定します。</summary>
            <param name="build">構築関数</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.WaterfallStylesBuilder.Rising(System.Action{C1.Web.Mvc.Fluent.SVGStyleBuilder})">
            <summary>Risingプロパティを設定します。</summary>
            <param name="build">構築関数</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.WaterfallStylesBuilder.ConnectorLines(System.Action{C1.Web.Mvc.Fluent.SVGStyleBuilder})">
            <summary>ConnectorLinesプロパティを設定します。</summary>
            <param name="build">構築関数</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.YFunctionSeriesBuilder`1">
            <summary>YFunctionSeriesのビルダ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.YFunctionSeriesBuilder`1.#ctor(C1.Web.Mvc.YFunctionSeries{`0})">
            <summary>1つのYFunctionSeriesBuilderインスタンスを作成します。</summary>
            <param name="obj">YFunctionSeriesオブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.YFunctionSeriesBuilder`1.Func(System.String)">
            <summary>Funcプロパティを設定します。</summary>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="T:C1.Web.Mvc.AttrDictionary`1">
            <summary>この辞書は大文字小文字を区別しません。
            Items[文字列キー] を呼び出し、キーが存在しない場合、これはデフォルト（TValue）を返します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.TemplateBindingsConverter">
            <summary>
                <see cref="T:C1.Web.Mvc.TemplateBindings" /> のコンバータを定義します</summary>
        </member>
        <member name="T:C1.JsonNet.JsonConverter">
            <summary>JSON コンバータの抽象クラスを定義します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Serialization.BaseConverter">
            <summary>コンバータの基本クラスを定義します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Serialization.BaseConverter.CanConvert(System.Type,C1.Web.Mvc.Serialization.IContext)">
            <summary>このインスタンスが指定されたオブジェクトタイプを変換できるかどうかを決定します。</summary>
            <param name="objectType">オブジェクトのタイプ。</param>
            <param name="context">コンテキスト情報。</param>
            <returns>このインスタンスが指定されたオブジェクトタイプを変換できる場合は <c>true</c>、そうでない場合は <c>false</c>。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Serialization.BaseConverter.Write(C1.Web.Mvc.Serialization.BaseWriter,System.Object,C1.Web.Mvc.Serialization.IContext)">
            <summary>指定された値を書き込みます。</summary>
            <param name="writer">ライタ。</param>
            <param name="value">値。</param>
            <param name="context">コンテキスト。</param>
        </member>
        <member name="P:C1.Web.Mvc.Serialization.BaseConverter.CanRead">
            <summary>この<see cref="T:C1.Web.Mvc.Serialization.BaseConverter" />が読み取ることができるかどうかを示す値を取得します。</summary>
            <value>この<see cref="T:C1.Web.Mvc.Serialization.BaseConverter" />が読み取ることができる場合は<c>true</c>、そうでない場合は<c>false</c>。</value>
        </member>
        <member name="P:C1.Web.Mvc.Serialization.BaseConverter.CanWrite">
            <summary>この<see cref="T:C1.Web.Mvc.Serialization.BaseConverter" />が書き込むことができるかどうかを示す値を取得します。</summary>
            <value>この<see cref="T:C1.Web.Mvc.Serialization.BaseConverter" />が書き込むことができる場合は<c>true</c>、そうでない場合は<c>false</c>。</value>
        </member>
        <member name="M:C1.JsonNet.JsonConverter.Read(C1.JsonNet.JsonReader,System.Type,System.Object)">
            <summary>オブジェクトの JSON 表現を読み取ります。</summary>
            <param name="reader">読み取り元の <see cref="T:C1.JsonNet.JsonReader" />。</param>
            <param name="objectType">オブジェクトのタイプ。</param>
            <param name="existedValue">読み取られるオブジェクトの既存の値。</param>
            <returns>シリアライズ解除後のオブジェクトの値。</returns>
        </member>
        <member name="M:C1.JsonNet.JsonConverter.WriteJson(C1.JsonNet.JsonWriter,System.Object)">
            <summary>オブジェクトの JSON 表現を書き込みます。</summary>
            <param name="writer">書き込み先の <see cref="T:C1.JsonNet.JsonWriter" />。</param>
            <param name="value">シリアライズされる値。</param>
        </member>
        <member name="M:C1.JsonNet.JsonConverter.ConvertTo(System.Object)">
            <summary>指定された値を文字列にシリアライズします。</summary>
            <param name="value">指定された値</param>
            <returns>値をシリアライズした後の文字列。</returns>
        </member>
        <member name="M:C1.JsonNet.JsonConverter.ReadJson(C1.JsonNet.JsonReader,System.Type,System.Object)">
            <summary>オブジェクトの JSON 表現を読み取ります。</summary>
            <param name="reader">読み取り元の <see cref="T:C1.JsonNet.JsonReader" />。</param>
            <param name="objectType">オブジェクトのタイプ。</param>
            <param name="existedValue">読み取られるオブジェクトの既存の値。</param>
            <returns>シリアライズ解除後のオブジェクトの値。</returns>
        </member>
        <member name="M:C1.JsonNet.JsonConverter.ConvertFrom(System.Object,System.Object)">
            <summary>指定された値からオブジェクトをシリアライズ解除します。</summary>
            <param name="value">指定された値。これは null であるか、<see cref="!:ArrayList" />、<see cref="!:Hashtable" />、<see cref="T:System.DateTime" />、<see cref="T:System.String" />、<see cref="T:System.Boolean" />、<see cref="T:System.Int32" />、<see cref="T:System.Double" /> のいずれかです。</param>
            <param name="existedValue">既存の値。</param>
            <returns>指定された値からシリアライズ解除されたオブジェクト。</returns>
        </member>
        <member name="M:C1.JsonNet.JsonConverter.CanConvert(System.Type)">
            <summary>このインスタンスが指定されたオブジェクトタイプを変換できるかどうかを決定します。</summary>
            <param name="objectType">オブジェクトのタイプ。</param>
            <returns>このインスタンスが指定されたオブジェクトタイプを変換できる場合は <c>true</c>、そうでない場合は <c>false</c>。</returns>
        </member>
        <member name="M:C1.JsonNet.JsonConverter.Write(C1.Web.Mvc.Serialization.BaseWriter,System.Object,C1.Web.Mvc.Serialization.IContext)">
            <summary>指定された値を書き込みます。</summary>
            <param name="writer">ライタ。</param>
            <param name="value">値。</param>
            <param name="context">コンテキスト。</param>
        </member>
        <member name="M:C1.JsonNet.JsonConverter.CanConvert(System.Type,C1.Web.Mvc.Serialization.IContext)">
            <summary>このインスタンスが指定されたオブジェクトタイプを変換できるかどうかを決定します。</summary>
            <param name="objectType">オブジェクトのタイプ。</param>
            <param name="context">コンテキスト情報。</param>
            <returns>このインスタンスが指定されたオブジェクトタイプを変換できる場合は <c>true</c>、そうでない場合は <c>false</c>。</returns>
        </member>
        <member name="M:C1.Web.Mvc.TemplateBindingsConverter.CanConvert(System.Type)">
            <summary>このインスタンスが指定されたオブジェクトタイプを変換できるかどうかを決定します。</summary>
            <param name="objectType">オブジェクトのタイプ。</param>
            <returns>このインスタンスが指定されたオブジェクトタイプを変換できる場合は <c>true</c>、そうでない場合は <c>false</c>。</returns>
        </member>
        <member name="M:C1.Web.Mvc.TemplateBindingsConverter.ReadJson(C1.JsonNet.JsonReader,System.Type,System.Object)">
            <summary>オブジェクトの JSON 表現を読み取ります。</summary>
            <param name="reader">読み取り元の <see cref="T:C1.JsonNet.JsonReader" />。</param>
            <param name="objectType">オブジェクトのタイプ。</param>
            <param name="existedValue">読み取られるオブジェクトの既存の値。</param>
            <returns>シリアライズ解除後のオブジェクトの値。</returns>
        </member>
        <member name="M:C1.Web.Mvc.TemplateBindingsConverter.WriteJson(C1.JsonNet.JsonWriter,System.Object)">
            <summary>オブジェクトの JSON 表現を書き込みます。</summary>
            <param name="writer">書き込み先の <see cref="T:C1.JsonNet.JsonWriter" />。</param>
            <param name="value">シリアライズされる値。</param>
        </member>
        <member name="T:C1.Web.Mvc.AnimationMode">
            <summary>チャートのアニメーションモード（一度に１ポイントずつ、系列ごと、または一度にすべてのどの方法でアニメーションするか）を指定します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.AnimationMode.All">
            <summary>すべてのポイントと系列が一度にアニメーションします。</summary>
        </member>
        <member name="F:C1.Web.Mvc.AnimationMode.Point">
            <summary>アニメーションがポイントごとに実行されます。
            複数の系列が同時にアニメーションします。</summary>
        </member>
        <member name="F:C1.Web.Mvc.AnimationMode.Series">
            <summary>アニメーションが系列ごとに実行されます。
            "All"オプションと同様に系列全体が一度にアニメーションされますが、
            一度に１つの系列だけがアニメーションします。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Easing">
            <summary>パラメータの時間的な変化率を指定します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Easing.Linear">
            <summary>単純な線形トゥイーニング。イージングおよびアクセラレーションなし。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Easing.Swing">
            <summary>スイングイージングのイージング式。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Easing.EaseInQuad">
            <summary>２次イージングインのイージング式。速度ゼロから加速します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Easing.EaseOutQuad">
            <summary>２次イージングアウトのイージング式。速度ゼロに減速します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Easing.EaseInOutQuad">
            <summary>２次イージングインアウトのイージング式。途中まで加速してから減速します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Easing.EaseInCubic">
            <summary>３次イージングインのイージング式。速度ゼロから加速します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Easing.EaseOutCubic">
            <summary>３次イージングアウトのイージング式。速度ゼロに減速します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Easing.EaseInOutCubic">
            <summary>３次イージングインアウトのイージング式。途中まで加速してから減速します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Easing.EaseInQuart">
            <summary>４次イージングインのイージング式。速度ゼロから加速します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Easing.EaseOutQuart">
            <summary>４次イージングアウトのイージング式。速度ゼロに減速します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Easing.EaseInOutQuart">
            <summary>４次イージングインアウトのイージング式。途中まで加速してから減速します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Easing.EaseInQuint">
            <summary>５次イージングインのイージング式。速度ゼロから加速します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Easing.EaseOutQuint">
            <summary>５次イージングアウトのイージング式。速度ゼロに減速します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Easing.EaseInOutQuint">
            <summary>５次イージングインアウトのイージング式。途中まで加速してから減速します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Easing.EaseInSine">
            <summary>サインイージングインのイージング式。速度ゼロから加速します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Easing.EaseOutSine">
            <summary>サインイージングアウトのイージング式。速度ゼロに減速します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Easing.EaseInOutSine">
            <summary>サインイージングインアウトのイージング式。途中まで加速してから減速します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Easing.EaseInExpo">
            <summary>指数イージングインのイージング式。速度ゼロから加速します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Easing.EaseOutExpo">
            <summary>指数イージングアウトのイージング式。速度ゼロに減速します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Easing.EaseInOutExpo">
            <summary>指数イージングインアウトのイージング式。途中まで加速してから減速します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Easing.EaseInCirc">
            <summary>円イージングインのイージング式。速度ゼロから加速します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Easing.EaseOutCirc">
            <summary>円イージングアウトのイージング式。速度ゼロに減速します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Easing.EaseInOutCirc">
            <summary>円イージングインアウトのイージング式。途中まで加速してから減速します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Easing.EaseInBack">
            <summary>バックイージングインのイージング式。速度ゼロから加速します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Easing.EaseOutBack">
            <summary>バックイージングアウトのイージング式。速度ゼロに減速します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Easing.EaseInOutBack">
            <summary>バックイージングインアウトのイージング式。途中まで加速してから減速します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Easing.EaseInBounce">
            <summary>バウンスイージングインのイージング式。速度ゼロから加速します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Easing.EaseOutBounce">
            <summary>バウンスイージングアウトのイージング式。速度ゼロに減速します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Easing.EaseInOutBounce">
            <summary>バウンスイージングインアウトのイージング式。途中まで加速してから減速します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Easing.EaseInElastic">
            <summary>弾性イージングインのイージング式。速度ゼロから加速します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Easing.EaseOutElastic">
            <summary>弾性イージングアウトのイージング式。速度ゼロに減速します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Easing.EaseInOutElastic">
            <summary>弾性イージングインアウトのイージング式。途中まで加速してから減速します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.AnnotationAttachment">
            <summary>注釈の添付方法を指定します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.AnnotationAttachment.DataIndex">
            <summary>注釈ポイントの座標は、データ系列インデックスとデータポイントインデックスで定義されます。</summary>
        </member>
        <member name="F:C1.Web.Mvc.AnnotationAttachment.DataCoordinate">
            <summary>注釈ポイントは、データ座標で指定されます。</summary>
        </member>
        <member name="F:C1.Web.Mvc.AnnotationAttachment.Relative">
            <summary>注釈ポイントはコントロール内の相対位置として指定されます。
            (0,0)が左上隅、(1,1)が右下隅になります。</summary>
        </member>
        <member name="F:C1.Web.Mvc.AnnotationAttachment.Absolute">
            <summary>注釈ポイントは、コントロールのピクセル座標で指定されます。</summary>
        </member>
        <member name="T:C1.Web.Mvc.AnnotationPosition">
            <summary>注釈の位置を指定します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.AnnotationPosition.Center">
            <summary>注釈がターゲットポイントの中心に表示されます。</summary>
        </member>
        <member name="F:C1.Web.Mvc.AnnotationPosition.Top">
            <summary>注釈がターゲットポイントの上に表示されます。</summary>
        </member>
        <member name="F:C1.Web.Mvc.AnnotationPosition.Bottom">
            <summary>注釈がターゲットポイントの下に表示されます。</summary>
        </member>
        <member name="F:C1.Web.Mvc.AnnotationPosition.Left">
            <summary>注釈がターゲットポイントの左に表示されます。</summary>
        </member>
        <member name="F:C1.Web.Mvc.AnnotationPosition.Right">
            <summary>注釈がターゲットポイントの右に表示されます。</summary>
        </member>
        <member name="T:C1.Web.Mvc.InteractiveAxes">
            <summary>チャートジェスチャの操作軸を指定します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.InteractiveAxes.X">
            <summary>操作軸はX。</summary>
        </member>
        <member name="F:C1.Web.Mvc.InteractiveAxes.Y">
            <summary>操作軸はY。</summary>
        </member>
        <member name="F:C1.Web.Mvc.InteractiveAxes.XY">
            <summary>操作軸はXとYの両方。</summary>
        </member>
        <member name="T:C1.Web.Mvc.MouseAction">
            <summary>チャートジェスチャのマウス操作を指定します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.MouseAction.Zoom">
            <summary>マウスでチャートをズームします。</summary>
        </member>
        <member name="F:C1.Web.Mvc.MouseAction.Pan">
            <summary>マウスでチャートをパンします。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Chart.Orientation">
            <summary>範囲セレクタの方向を指定します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.Orientation.X">
            <summary>水平方向のxデータ範囲。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.Orientation.Y">
            <summary>垂直方向のyデータ範囲。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Chart.AxisOverlappingLabels">
            <summary>重なったラベルを処理する方法を指定します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.AxisOverlappingLabels.Auto">
            <summary>重なったラベルは非表示になります。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.AxisOverlappingLabels.Show">
            <summary>重なったラベルを含むすべてのラベルを表示します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Chart.AxisTickMark">
            <summary>軸の目盛りマークを表示するかどうかと、表示する場合はその場所を指定します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.AxisTickMark.None">
            <summary>目盛りマークを表示しません。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.AxisTickMark.Outside">
            <summary>目盛りマークをプロットエリア外に表示します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.AxisTickMark.Inside">
            <summary>目盛りマークをプロットエリア内に表示します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.AxisTickMark.Cross">
            <summary>軸に交差する目盛りマークを表示します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Chart.LabelPosition">
            <summary>チャート上のデータラベルの位置を指定します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.LabelPosition.None">
            <summary>データラベルを表示しません。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.LabelPosition.Left">
            <summary>ラベルをデータポイントの左に表示します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.LabelPosition.Top">
            <summary>ラベルをデータポイントの上に表示します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.LabelPosition.Right">
            <summary>ラベルをデータポイントの右に表示します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.LabelPosition.Bottom">
            <summary>ラベルをデータポイントの下に表示します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.LabelPosition.Center">
            <summary>ラベルをデータポイントの中央に表示します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Chart.PieLabelPosition">
            <summary>円グラフ上のデータラベルの位置を指定します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.PieLabelPosition.None">
            <summary>データラベルなし。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.PieLabelPosition.Inside">
            <summary>ラベルを円グラフセグメント内に表示します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.PieLabelPosition.Center">
            <summary>項目を円グラフセグメントの中心に表示します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.PieLabelPosition.Outside">
            <summary>項目を円グラフセグメント外に表示します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Chart.ChartType">
            <summary>作成するチャートのタイプを指定します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.ChartType.Column">
            <summary>縦棒グラフは縦棒を表示します。カテゴリ間で項目の値を比較できます。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.ChartType.Bar">
            <summary>棒グラフは横棒を表示します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.ChartType.Scatter">
            <summary>散布図は X 座標と Y 座標を使用して、データに含まれるパターンを表示します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.ChartType.Line">
            <summary>折れ線グラフは、一定期間またはカテゴリ間のトレンドを表示します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.ChartType.LineSymbols">
            <summary>折れ線シンボルグラフは、各データポイントにシンボルを使用する折れ線グラフです。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.ChartType.Area">
            <summary>面グラフは、線の下の領域が色で塗りつぶされた折れ線グラフです。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.ChartType.Bubble">
            <summary>バブルチャートは、シンボルのサイズが 
            ３番目のデータ値によって決定される散布図です。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.ChartType.Candlestick">
            <summary>ローソク足チャートは、高値、安値、始値、および終値を持つ項目を表示します。
            ヒゲ線のサイズは高値と安値で決定され、棒のサイズは、
            始値と終値で決定されます。棒は、終値が始値より高いか安いかに応じて、
            異なる色で表示されます。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.ChartType.HighLowOpenClose">
            <summary>HiLoOpenClose チャートは、ローソク足チャートと同じ情報を表示しますが、
            始値が左向きの線で、終値が右向きの線で表されます。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.ChartType.Spline">
            <summary>スプライングラフは、折れ線ではなく曲線でデータポイントをプロットします。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.ChartType.SplineSymbols">
            <summary>スプラインシンボルグラフは、各データポイントにシンボルを使用するスプライングラフです。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.ChartType.SplineArea">
            <summary>スプライン面グラフは、線の下の領域が色で塗りつぶされたスプライングラフです。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.ChartType.Funnel">
            <summary>ファンネルグラフを表示します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Chart.LineMarkerInteraction">
            <summary>LineMarkerがユーザーとやり取りする方法を指定します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.LineMarkerInteraction.None">
            <summary>相互作用はありません。ユーザーが位置を手動で指定します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.LineMarkerInteraction.Move">
            <summary>LineMarkerは、ポインタと共に移動します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.LineMarkerInteraction.Drag">
            <summary>LineMarkerは、ユーザーが線をドラッグしたときに移動します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Chart.LineMarkerLines">
            <summary>LineMarkerの線のタイプを指定します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.LineMarkerLines.None">
            <summary>線を表示しません。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.LineMarkerLines.Vertical">
            <summary>垂直線を表示します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.LineMarkerLines.Horizontal">
            <summary>水平線を表示します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.LineMarkerLines.Both">
            <summary>垂直線と水平線の両方を表示します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Chart.LineMarkerAlignment">
            <summary>LineMarkerの配置を指定します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.LineMarkerAlignment.Auto">
            <summary>LineMarkerの配置は、プロットエリアの境界内にとどまるように 
            自動的に調整されます。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.LineMarkerAlignment.Right">
            <summary>LineMarkerは、ポインタの右に揃えられます。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.LineMarkerAlignment.Left">
            <summary>LineMarkerは、ポインタの左に揃えられます。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.LineMarkerAlignment.Bottom">
            <summary>LineMarkerは、ポインタの下に揃えられます。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.LineMarkerAlignment.Top">
            <summary>LineMarkerは、ポインタの上に揃えられます。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Chart.ErrorAmount">
            <summary>系列の誤差量を指定します。標準誤差量、パーセント値、または標準偏差を使用できます。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.ErrorAmount.FixedValue">
            <summary>誤差を固定値で示します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.ErrorAmount.Percentage">
            <summary>誤差をパーセント値で示します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.ErrorAmount.StandardDeviation">
            <summary>誤差を標準偏差で示します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.ErrorAmount.StandardError">
            <summary>誤差を標準誤差で示します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.ErrorAmount.Custom">
            <summary>誤差をカスタム値で示します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Chart.ErrorBarEndStyle">
            <summary>誤差範囲バーの終点スタイルを指定します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.ErrorBarEndStyle.Cap">
            <summary>キャップありの誤差範囲バー。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.ErrorBarEndStyle.NoCap">
            <summary>キャップなしの誤差範囲バー。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Chart.ErrorBarDirection">
            <summary>誤差範囲バーの方向を指定します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.ErrorBarDirection.Both">
            <summary>両方向を表示します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.ErrorBarDirection.Minus">
            <summary>負方向だけを表示します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.ErrorBarDirection.Plus">
            <summary>正方向だけを表示します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.FunnelType">
            <summary>ファンネルグラフのタイプを指定します。これは、'Rectangle'または'Default'である必要があります。タイプがRectangleに設定されている場合、NeckWidthとNeckHeightは機能しません。</summary>
        </member>
        <member name="F:C1.Web.Mvc.FunnelType.Default">
            <summary>デフォルト</summary>
        </member>
        <member name="F:C1.Web.Mvc.FunnelType.Rectangle">
            <summary>四角</summary>
        </member>
        <member name="T:C1.Web.Mvc.Chart.Marker">
            <summary>@see:symbolMarker プロパティに使用するマーカーのタイプを指定します。
            Scatter、LineSymbols、および SplineSymbols チャートタイプに適用されます。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.Marker.Dot">
            <summary>円を使用して各データポイントをマークします。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.Marker.Box">
            <summary>正方形を使用して各データポイントをマークします。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Chart.MovingAverageType">
            <summary>系列を表示するかどうかと、表示する場合はその場所を指定します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.MovingAverageType.Simple">
            <summary>単純移動平均は、最後のn個の値の単純平均です。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.MovingAverageType.Weighted">
            <summary>加重移動平均は、最後のn個の値の加重平均で、1つ前の値の重みが1ずつ減ります。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.MovingAverageType.Exponential">
            <summary>指数移動平均は、最後のn個の値の加重平均で、1つ前の値の重みが指数関数的に減ります。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.MovingAverageType.Triangular">
            <summary>三角移動平均は、最後のn個の値の加重平均で、結果は2回の平滑化を行った単純移動平均と同じです。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Chart.Palettes">
            <summary>事前定義されている一連のグラフ用パレット。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.Palettes.Standard">
            <summary>標準（デフォルト）のパレット。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.Palettes.Cocoa">
            <summary>Cocoa パレット。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.Palettes.Coral">
            <summary>Coral パレット。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.Palettes.Dark">
            <summary>Dark パレット。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.Palettes.Highcontrast">
            <summary>Highcontrast パレット。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.Palettes.Light">
            <summary>Light パレット。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.Palettes.Midnight">
            <summary>Midnight パレット。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.Palettes.Minimal">
            <summary>Minimal パレット。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.Palettes.Modern">
            <summary>Modern パレット。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.Palettes.Organic">
            <summary>Organic パレット。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.Palettes.Slate">
            <summary>Slate パレット。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Controls.Chart.PlotMarginConverter">
            <summary>別の型の値（数値、文字列）をシリアライズするために使用される PlotMarginConverter クラスを定義します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Controls.Chart.PlotMarginConverter.WriteJson(C1.JsonNet.JsonWriter,System.Object)">
            <summary>オブジェクトのJSON表現を書き込みます。</summary>
            <param name="writer">書き込み先の <see cref="T:C1.JsonNet.JsonWriter" />。</param>
            <param name="value">シリアライズされる値。</param>
        </member>
        <member name="M:C1.Web.Mvc.Controls.Chart.PlotMarginConverter.ReadJson(C1.JsonNet.JsonReader,System.Type,System.Object)">
            <summary>オブジェクトのJSON表現を読み取ります。</summary>
            <param name="reader">読み取り元の <see cref="T:C1.JsonNet.JsonReader" />。</param>
            <param name="objectType">オブジェクトのタイプ。</param>
            <param name="existedValue">読み取られるオブジェクトの既存の値。</param>
            <returns>シリアライズ解除後のオブジェクトの値。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Chart.Position">
            <summary>グラフの軸または凡例の位置を指定します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.Position.None">
            <summary>項目は表示されません。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.Position.Left">
            <summary>項目はグラフの左側に表示されます。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.Position.Top">
            <summary>項目はグラフの上に表示されます。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.Position.Right">
            <summary>項目はグラフの右側に表示されます。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.Position.Bottom">
            <summary>項目はグラフの下に表示されます。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.Position.Auto">
            <summary>項目は自動的に配置されます。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Chart.RadarChartType">
            <summary>レーダーチャートのタイプを指定します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.RadarChartType.Column">
            <summary>縦棒を表示して、カテゴリ間で項目の値を比較できるようにします。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.RadarChartType.Scatter">
            <summary>X座標とY座標を使用して、データに含まれるパターンを表示します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.RadarChartType.Line">
            <summary>一定期間のトレンドまたはカテゴリ間のトレンドを表示します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.RadarChartType.LineSymbols">
            <summary>各データポイントにシンボルを使用する折れ線グラフを表示します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.RadarChartType.Area">
            <summary>線の下の領域が色で塗りつぶされた折れ線グラフを表示します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Chart.SelectionMode">
            <summary>グラフをクリックしたときに何が選択されるかを指定します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.SelectionMode.None">
            <summary>グラフをクリックしたときに系列もデータポイントも選択されません。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.SelectionMode.Series">
            <summary>グラフをクリックしたときに系列全体が選択されます。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.SelectionMode.Point">
            <summary>グラフをクリックしたときにデータポイントが選択されます。折れ線グラフ、面グラフ、スプライングラフ、およびスプライン面グラフでは、個々のデータポイントがレンダリングされないため、この設定ではこれらのグラフタイプで何も選択されません。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Chart.SeriesVisibility">
            <summary>系列を表示するかどうかと、表示する場合はその場所を指定します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.SeriesVisibility.Visible">
            <summary>系列はプロット領域内と凡例内に表示されます。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.SeriesVisibility.Plot">
            <summary>系列はプロット領域内にのみ表示されます。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.SeriesVisibility.Legend">
            <summary>系列は凡例内にのみ表示されます。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.SeriesVisibility.Hidden">
            <summary>系列は非表示です。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Chart.Stacking">
            <summary>グラフのデータ値を積み上げるかどうかと、積み上げる場合はその方法を指定します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.Stacking.None">
            <summary>積み上げません。各系列オブジェクトは個別にプロットされます。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.Stacking.Stacked">
            <summary>各値が全体にどの程度影響するかを示す積層グラフにします。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.Stacking.Stacked100pc">
            <summary>各値が全体にどの程度影響するかを示す 100% 積層グラフにします。
            全体に対する各系列の相対的サイズを使用します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Chart.TrendLineFitType">
            <summary>系列を表示するかどうかと、表示する場合はその場所を指定します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.TrendLineFitType.Linear">
            <summary>データに最も近似する直線Y(x) = a * x + b。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.TrendLineFitType.Exponential">
            <summary>式Y(x) = a * exp(b*x)への回帰フィッティング。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.TrendLineFitType.Logarithmic">
            <summary>式Y(x) = a * ln(x) + bへの回帰フィッティング。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.TrendLineFitType.Power">
            <summary>式Y(x) = a * pow(x, b)への回帰フィッティング。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.TrendLineFitType.Fourier">
            <summary>式Y(x) = a + b * cos(x) + c * sin(x) + d * cos(2*x) + e * sin(2*x) + ...への回帰フィッティング。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.TrendLineFitType.Polynomial">
            <summary>式Y(x) = a * x^n + b * x^n-1 + c * x^n-2 + ... + zへの回帰フィッティング。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.TrendLineFitType.MinX">
            <summary>Xの最小値。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.TrendLineFitType.MinY">
            <summary>Yの最小値。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.TrendLineFitType.MaxX">
            <summary>Xの最大値。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.TrendLineFitType.MaxY">
            <summary>Yの最大値。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.TrendLineFitType.AverageX">
            <summary>平均X値。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.TrendLineFitType.AverageY">
            <summary>平均Y値。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Serialization.PascalCaseJsonConverter">
            <summary>パスカルケースルールによるJSONコンバータ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Serialization.PascalCaseJsonConverter.CanConvert(System.Type)">
            <summary>指定された型を変換できるかどうかを取得します。</summary>
            <param name="objectType">オブジェクトタイプ</param>
            <returns>指定された型を変換できるかどうかを示すブール値</returns>
        </member>
        <member name="M:C1.Web.Mvc.Serialization.PascalCaseJsonConverter.ReadJson(C1.JsonNet.JsonReader,System.Type,System.Object)">
            <summary>JSONからオブジェクトを読み取ります。</summary>
            <param name="reader">JSONリーダー</param>
            <param name="objectType">オブジェクトタイプ</param>
            <param name="existingValue">既存の値</param>
            <returns>JSONから読み取られるオブジェクト</returns>
        </member>
        <member name="M:C1.Web.Mvc.Serialization.PascalCaseJsonConverter.WriteJson(C1.JsonNet.JsonWriter,System.Object)">
            <summary>オブジェクトをJSON形式で書き込みます。</summary>
            <param name="writer">JSONライタ</param>
            <param name="value">オブジェクト</param>
        </member>
        <member name="P:C1.Web.Mvc.ICollectionView`1.Skip">
            <summary>スキップした項目数を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ICollectionView`1.Top">
            <summary>必要な項目数を取得または設定します。</summary>
            <remarks>通常、これは０以上の数値です。
            これを null に設定すると、すべての項目が必要であることを意味します。</remarks>
        </member>
        <member name="T:C1.Web.Mvc.Grid.Operator">
            <summary>フィルタ条件の演算子を指定します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.Operator.EQ">
            <summary>次の値と等しい</summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.Operator.NE">
            <summary>次の値と等しくない。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.Operator.GT">
            <summary>次の値より大きい。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.Operator.GE">
            <summary>次の値以上。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.Operator.LT">
            <summary>次の値より小さい。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.Operator.LE">
            <summary>次の値以下。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.Operator.BW">
            <summary>次の値で始まる。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.Operator.EW">
            <summary>次の値で終わる。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.Operator.CT">
            <summary>次の値を含む。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.Operator.NC">
            <summary>次の値を含まない。</summary>
        </member>
        <member name="T:C1.Web.Mvc.FilterType">
            <summary>列フィルタのタイプを指定します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.FilterType.None">
            <summary>フィルタなし。</summary>
        </member>
        <member name="F:C1.Web.Mvc.FilterType.Condition">
            <summary>2つの条件に基づくフィルタ。</summary>
        </member>
        <member name="F:C1.Web.Mvc.FilterType.Value">
            <summary>一連の値に基づくフィルタ。</summary>
        </member>
        <member name="F:C1.Web.Mvc.FilterType.Both">
            <summary>条件フィルタと値フィルタを結合するフィルタ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.GridFilter.FlexGridFilterHelper.ExecuteWithRequest``1(C1.Web.Mvc.ICollectionView{``0},System.Collections.Hashtable)">
            <summary>FlexGridFilterを使用して要求データを処理します。</summary>
            <typeparam name="T"></typeparam>
            <param name="collectionView"></param>
            <param name="extraRequestData"></param>
        </member>
        <member name="M:C1.Web.Mvc.GridFilter.FlexGridFilterHelper.ExecuteWithFilters``1(C1.Web.Mvc.ICollectionView{``0},System.Collections.Generic.IList{C1.Web.Mvc.ColumnFilter})">
            <summary>指定されたフィルタでFlexGridFilterを使用します。</summary>
            <typeparam name="T"></typeparam>
            <param name="collectionView"></param>
            <param name="filters"></param>
        </member>
        <member name="T:C1.Web.Mvc.Grid.CellRange">
            <summary>２つの行インデックスと２つの列インデックスによって定義される四角形のセルグループを表します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Grid.CellRange.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
                <see cref="T:C1.Web.Mvc.Grid.CellRange" /> の新しいインスタンスを初期化します。</summary>
            <param name="r">この範囲の最初の行のインデックス。</param>
            <param name="c">この範囲の最初の列のインデックス。</param>
            <param name="r2">この範囲の最後の行のインデックス。</param>
            <param name="c2">この範囲の最初の列のインデックス。</param>
        </member>
        <member name="M:C1.Web.Mvc.Grid.CellRange.#ctor(System.Int32,System.Int32)">
            <summary>
                <see cref="T:C1.Web.Mvc.Grid.CellRange" /> の新しいインスタンスを初期化します。</summary>
            <param name="r">この範囲の最初の行のインデックス。</param>
            <param name="c">この範囲の最初の列のインデックス。</param>
        </member>
        <member name="M:C1.Web.Mvc.Grid.CellRange.IsValid">
            <summary>この範囲に有効な行インデックスと列インデックス（&gt; -1）が含まれるかどうかをチェックします。</summary>
            <returns>有効な場合は true。そうでない場合は false。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Grid.CellRange.Equals(System.Object)">
            <summary>指定されたオブジェクトが現在の <see cref="T:C1.Web.Mvc.Grid.CellRange" /> と等しいかどうかを判定します。</summary>
            <param name="obj">現在の<see cref="T:C1.Web.Mvc.Grid.CellRange" />と比較するオブジェクト。</param>
            <returns>指定されたオブジェクトが現在の <see cref="T:C1.Web.Mvc.Grid.CellRange" /> と等しいかどうかを判定します。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Grid.CellRange.GetHashCode">
            <summary>
                <see cref="T:C1.Web.Mvc.Grid.CellRange" /> のハッシュ関数として機能します。</summary>
            <returns>現在の <see cref="T:C1.Web.Mvc.Grid.CellRange" /> のハッシュコード。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Grid.CellRange.Clone">
            <summary>現在の<see cref="T:C1.Web.Mvc.Grid.CellRange" />のコピーを作成します。</summary>
            <returns>現在の<see cref="T:C1.Web.Mvc.Grid.CellRange" />からコピーされた新しい<see cref="T:C1.Web.Mvc.Grid.CellRange" />。</returns>
        </member>
        <member name="P:C1.Web.Mvc.Grid.CellRange.Row">
            <summary>この範囲内の最初の行のインデックスを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Grid.CellRange.Col">
            <summary>この範囲内の最初の列のインデックスを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Grid.CellRange.Row2">
            <summary>この範囲内の２番目の行のインデックスを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Grid.CellRange.Col2">
            <summary>この範囲内の２番目の列のインデックスを取得または設定します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.ColumnWidthConverter">
            <summary>別の型の値（数値、文字列）をシリアライズするために使用される ColumnWidthConverter クラスを定義します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.ColumnInfo">
            <summary>グリッドに列を記述するための列情報を表します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.ColumnInfo.#ctor">
            <summary>
                <see cref="T:C1.Web.Mvc.ColumnInfo" /> オブジェクトの新しいインスタンスを初期化します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ColumnInfo.Index">
            <summary>グリッドの列コレクション内の列のインデックスを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ColumnInfo.Binding">
            <summary>この列が連結されているプロパティの名前を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.ColumnInfo.DataMap">
            <summary>未加工の値を列の表示値に変換するために使用されるデータマップ情報を取得します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.DataMapInfo">
            <summary>ColumnInfoのDataMapプロパティで使用するデータマップ情報を表します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.DataMapInfo.GetDisplayValue(System.Object)">
            <summary>指定された値に対応する表示値を取得します。</summary>
            <param name="value">取得する項目の値。</param>
            <returns>指定された値に対応する表示値。</returns>
            <remarks>値の文字列ベースの比較ロジックは、Wijmo 5のロジックと同じです。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.DataMapInfo.SelectedValuePath">
            <summary>項目のキー（データ値）として使用するプロパティ名を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.DataMapInfo.DisplayMemberPath">
            <summary>項目のビジュアル表現として使用するプロパティ名を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.DataMapInfo.ItemsSource">
            <summary>内部使用。項目ソースを取得または設定します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Grid.Aggregate">
            <summary>値のグループに対して計算する集計の種類を指定します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.Aggregate.None">
            <summary>集計なし。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.Aggregate.Sum">
            <summary>グループ内の数値の合計を返します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.Aggregate.Cnt">
            <summary>グループ内の null 以外の数を返します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.Aggregate.Avg">
            <summary>グループ内の数値の平均値を返します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.Aggregate.Max">
            <summary>グループ内の最大値を返します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.Aggregate.Min">
            <summary>グループ内の最小値を返します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.Aggregate.Rng">
            <summary>グループ内の最大数値と最小数値の差を返します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.Aggregate.Std">
            <summary>グループ内の数値の標本標準偏差を返します（n-1 に基づく式を使用）。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.Aggregate.Var">
            <summary>グループ内の数値の標本分散を返します（n-1 に基づく式を使用）。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.Aggregate.StdPop">
            <summary>グループ内の値の母標準偏差を返します（n に基づく式を使用）。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.Aggregate.VarPop">
            <summary>グループ内の値の母分散を返します（n に基づく式を使用）。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.Aggregate.CntAll">
            <summary>グループ内のすべての値の数を返します（nullを含む）。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.Aggregate.First">
            <summary>グループ内の最初のnull以外の値を返します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.Aggregate.Last">
            <summary>グループ内の最後のnull以外の値を返します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Grid.AllowDragging">
            <summary>行/列のドラッグ動作を定義する定数を指定します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.AllowDragging.None">
            <summary>ユーザーは行または列をドラッグできません。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.AllowDragging.Columns">
            <summary>ユーザーは列をドラッグできます。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.AllowDragging.Rows">
            <summary>ユーザーは行をドラッグできます。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.AllowDragging.Both">
            <summary>ユーザーは行および列をドラッグできません。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Grid.AllowMerging">
            <summary>グリッドのどの領域がセル結合をサポートするかを定義する定数を指定します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.AllowMerging.None">
            <summary>結合しません。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.AllowMerging.Cells">
            <summary>スクロール可能なセルを結合します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.AllowMerging.ColumnHeaders">
            <summary>列ヘッダーを結合します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.AllowMerging.RowHeaders">
            <summary>行ヘッダーを結合します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.AllowMerging.AllHeaders">
            <summary>列ヘッダーと行ヘッダーを結合します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.AllowMerging.All">
            <summary>すべての領域を結合します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Grid.AllowResizing">
            <summary>行/列のサイズ変更動作を定義する定数を指定します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.AllowResizing.None">
            <summary>ユーザーは行または列をサイズ変更できません。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.AllowResizing.Columns">
            <summary>ユーザーは列をサイズ変更できます。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.AllowResizing.Rows">
            <summary>ユーザーは行をサイズ変更できます。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.AllowResizing.Both">
            <summary>ユーザーは行および列をサイズ変更できません。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.AllowResizing.ColumnsAllCells">
            <summary>ユーザーは、任意のセルの端をドラッグすることで、列をサイズ変更できます。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.AllowResizing.RowsAllCells">
            <summary>ユーザーは、任意のセルの端をドラッグすることで、行をサイズ変更できます。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.AllowResizing.BothAllCells">
            <summary>ユーザーは、任意のセルの端をドラッグすることで、行および列をサイズ変更できます。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Grid.AutoSizeMode">
            <summary>行/列の自動サイズ変更動作を定義する定数を指定します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.AutoSizeMode.None">
            <summary>自動サイズ変更は無効です。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.AutoSizeMode.Headers">
            <summary>自動サイズ変更はヘッダーセルに機能します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.AutoSizeMode.Cells">
            <summary>自動サイズ変更はデータセルに機能します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.AutoSizeMode.Both">
            <summary>自動サイズ変更はヘッダーセルとデータセルに機能します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Grid.DataType">
            <summary>値型の列挙。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.DataType.Object">
            <summary>（任意の）Object。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.DataType.String">
            <summary>String。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.DataType.Number">
            <summary>Number。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.DataType.Boolean">
            <summary>Boolean。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.DataType.Date">
            <summary>Date（日付/時刻）。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.DataType.Array">
            <summary>Array。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Grid.HeadersVisibility">
            <summary>行ヘッダーと列ヘッダーの表示を指定する定数を指定します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.HeadersVisibility.None">
            <summary>ヘッダーセルは表示されません。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.HeadersVisibility.Column">
            <summary>列ヘッダーセルだけが表示されます。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.HeadersVisibility.Row">
            <summary>行ヘッダーセルだけが表示されます。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.HeadersVisibility.All">
            <summary>列と行のヘッダーセルが共に表示されます。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Grid.SelectionMode">
            <summary>現在の選択モードを取得または設定します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.SelectionMode.None">
            <summary>ユーザーは、マウスやキーボードでセルを選択できません。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.SelectionMode.Cell">
            <summary>ユーザーは、一度に１つのセルだけを選択できます。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.SelectionMode.CellRange">
            <summary>ユーザーは、隣接するセルのブロックを選択できません。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.SelectionMode.Row">
            <summary>ユーザーは、一度に１つの行を選択できます。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.SelectionMode.RowRange">
            <summary>ユーザーは、隣接する行を選択できます。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.SelectionMode.ListBox">
            <summary>
ユーザーは、隣接しない行を選択できます。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Grid.DetailVisibilityMode">
            <summary>行詳細がいつどのように表示されるかを指定します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.DetailVisibilityMode.Code">
            <summary>詳細は、showDetailおよびhideDetailメソッドを使用して、コードで表示/非表示にされます。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.DetailVisibilityMode.Selection">
            <summary>詳細は、現在選択されている行に対して表示されます。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.DetailVisibilityMode.ExpandSingle">
            <summary>詳細は、行ヘッダーに追加されたボタンを使用して表示/非表示にされます。一度に1行のみを展開できます。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.DetailVisibilityMode.ExpandMulti">
            <summary>詳細は、行ヘッダーに追加されたボタンを使用して表示/非表示にされます。一度に複数行を展開できます。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Grid.KeyAction">
            <summary>［Enter］や［Tab］などの特殊なキーが押されたときに実行するアクションを定義する定数を指定します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.KeyAction.None">
            <summary>特に何もしません。ブラウザにキーの処理を任せます。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.KeyAction.MoveDown">
            <summary>選択が次の行に移動します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.KeyAction.MoveAcross">
            <summary>選択が次の列に移動します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.KeyAction.Cycle">
            <summary>選択が次の列に移動し、最後の列から次の行に折り返します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.KeyAction.CycleOut">
            <summary>選択が次の列に移動し、最後の列から次の行に折り返し、最後にコントロールの外に移動します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Grid.SortHelper.ExecuteWithRequest``1(C1.Web.Mvc.CollectionViewRequest{``0},System.Func{C1.Web.Mvc.ColumnInfo,System.Collections.Generic.IEnumerable{System.Object}})">
            <summary>要求データの追加ソート設定を処理します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.DateSelectionMode">
            <summary>日付選択動作を定義する定数を指定します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.DateSelectionMode.None">
            <summary>ユーザーは、マウスやキーボードで現在の値を変更できません。</summary>
        </member>
        <member name="F:C1.Web.Mvc.DateSelectionMode.Day">
            <summary>ユーザーは、日を選択できます。</summary>
        </member>
        <member name="F:C1.Web.Mvc.DateSelectionMode.Month">
            <summary>ユーザーは、月を選択できます。</summary>
        </member>
        <member name="T:C1.Web.Mvc.GaugeDirection">
            <summary>LinearGauge のポインタが増加する方向を表します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.GaugeDirection.Right">
            <summary>ゲージ値は左から右に増加します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.GaugeDirection.Left">
            <summary>ゲージ値は右から左に増加します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.GaugeDirection.Up">
            <summary>ゲージ値は下から上に増加します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.GaugeDirection.Down">
            <summary>ゲージ値は上から下に増加します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.ShowText">
            <summary>テキストとして表示する値を指定します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.ShowText.None">
            <summary>ゲージにテキストを表示しません。</summary>
        </member>
        <member name="F:C1.Web.Mvc.ShowText.Value">
            <summary>ゲージの値をテキストとして表示します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.ShowText.MinMax">
            <summary>ゲージの最小値と最大値をテキストとして表示します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.ShowText.All">
            <summary>ゲージの値、最小値、最大値をテキストとして表示します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Menu">
            <summary>Menu コントロールは、１つのテキスト要素とドロップダウンリストを表示します。ドロップダウンリストには、ユーザーがクリックまたはタッチすることで呼び出すことができるコマンドが含まれます。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Menu.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>１つの Menu インスタンスを作成します。</summary>
            <param name="helper">HTML ヘルパー</param>
            <param name="selector">セレクタ</param>
        </member>
        <member name="P:C1.Web.Mvc.Menu.IsContentHtml">
            <summary>ドロップダウンリストに項目をプレーンテキストとして表示するか、HTMLとして表示するかを示す値を取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Menu.IsRequired">
            <summary>コントロール値をnull以外の値に設定する必要があるか、それとも（コントロールのコンテンツを削除することで）nullに設定できるかを決定する値を取得または設定します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.PopupTrigger">
            <summary>Popupコントロールの表示/非表示をトリガするアクションを指定します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.PopupTrigger.None">
            <summary>トリガなしの場合、ポップアップはコードを使用して表示および非表示にする必要があります。</summary>
        </member>
        <member name="F:C1.Web.Mvc.PopupTrigger.Click">
            <summary>
            ユーザーがオーナ要素またはポップアップをクリックしたとき。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.PopupTrigger.Blur">
            <summary>
            オーナ要素またはポップアップがフォーカスを失ったとき。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.PopupTrigger.ClickOrBlur">
            <summary>
            オーナ要素またはポップアップがクリックされたとき、またはフォーカスを失ったとき。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Chart.QuartileCalculation">
            <summary>箱ひげ図の四分位数の計算方法を指定します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.QuartileCalculation.InclusiveMedian">
            <summary>四分位数の計算時に中央値を含めます。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.QuartileCalculation.ExclusiveMedian">
            <summary>四分位数の計算時に中央値を除外します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Serialization.C1JsonResult">
            <summary>C1 JSON結果。</summary>
        </member>
        <member name="T:C1.Web.Mvc.ModelBinderBase">
            <summary>モデルバインダをカスタマイズするための基本クラスを定義します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.ModelBinderBase.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
            <summary>モデルの連結を試みます。</summary>
            <param name="controllerContext">コントローラコンテキスト。</param>
            <param name="bindingContext">連結コンテキスト。</param>
            <returns>モデル。</returns>
        </member>
        <member name="M:C1.Web.Mvc.ModelBinderBase.GetRequestContent(System.Web.HttpRequestBase)">
            <summary>シリアライズ解除に使用される要求コンテンツを取得します。</summary>
            <param name="request">HTTP要求。</param>
            <returns>コンテンツ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.ModelBinderBase.DeserializeModel(System.String,System.Type)">
            <summary>モデルをシリアライズ解除します。</summary>
            <param name="text">シリアライズ解除に使用される文字列。</param>
            <param name="modelType">モデルの型。</param>
            <returns>モデル。</returns>
        </member>
        <member name="T:C1.Web.Mvc.C1JsonRequestModelBinder">
            <summary>C1 JSON 要求データのカスタムモデルバインダ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.C1JsonRequestModelBinder.DeserializeModel(System.String,System.Type)">
            <summary>モデルをシリアライズ解除します。</summary>
            <param name="text">シリアライズ解除に使用される文字列。</param>
            <param name="modelType">モデルの型。</param>
            <returns>モデル。</returns>
        </member>
        <member name="T:C1.Web.Mvc.C1JsonRequestAttribute">
            <summary>C1 JSON 要求データのカスタムモデルバインダ属性。</summary>
        </member>
        <member name="M:C1.Web.Mvc.C1JsonRequestAttribute.GetBinder">
            <summary>モデルバインダを取得します。</summary>
            <returns>モデルバインダ。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Serialization.ServiceConverter">
            <summary>サービスコンバータを定義します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Serialization.ServiceConverter.#ctor">
            <summary>ServiceConverterのインスタンスを作成します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Serialization.ServiceConverter.#ctor(System.Boolean)">
            <summary>ServiceConverterのインスタンスを作成します。</summary>
            <param name="serviceExisted">サービスインスタンスが作成されていることを指定します。</param>
        </member>
        <member name="M:C1.Web.Mvc.Serialization.ServiceConverter.#ctor(System.Boolean,System.String)">
            <summary>ServiceConverterのインスタンスを作成します。</summary>
            <param name="serviceExisted">サービスインスタンスが作成されていることを指定します。</param>
            <param name="serviceCtor">クライアント側のサービスコンストラクタを指定します。</param>
        </member>
        <member name="M:C1.Web.Mvc.Serialization.ServiceConverter.#ctor(System.Boolean,System.String,System.String)">
            <summary>ServiceConverterのインスタンスを作成します。</summary>
            <param name="serviceExisted">サービスインスタンスが作成されていることを指定します。</param>
            <param name="serviceCtor">クライアント側のサービスコンストラクタを指定します。</param>
            <param name="serviceOpts">サービスオプションを指定します。</param>
        </member>
        <member name="M:C1.Web.Mvc.Serialization.ServiceConverter.CanConvert(System.Type)">
            <summary>このインスタンスが指定されたオブジェクトタイプを変換できるかどうかを決定します。</summary>
            <param name="objectType">オブジェクトのタイプ。</param>
            <returns>このインスタンスが指定されたオブジェクトタイプを変換できる場合は <c>true</c>、そうでない場合は <c>false</c>。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Serialization.ServiceConverter.WriteJson(C1.JsonNet.JsonWriter,System.Object)">
            <summary>オブジェクトのJSON表現を書き込みます。</summary>
            <param name="writer">書き込み先の <see cref="T:C1.JsonNet.JsonWriter" />。</param>
            <param name="value">シリアライズされる値。</param>
        </member>
        <member name="M:C1.Web.Mvc.Serialization.ServiceConverter.ReadJson(C1.JsonNet.JsonReader,System.Type,System.Object)">
            <summary>オブジェクトのJSON表現を読み取ります。</summary>
            <param name="reader">読み取り元の <see cref="T:C1.JsonNet.JsonReader" />。</param>
            <param name="objectType">オブジェクトのタイプ。</param>
            <param name="existedValue">読み取られるオブジェクトの既存の値。</param>
            <returns>シリアライズ解除後のオブジェクトの値。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Serializition.JsonConvertHelper">
            <summary>JSON コンバータヘルパー。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Serializition.JsonConvertHelper.C1Json(System.Web.Mvc.Controller,System.Object,System.String,System.Text.Encoding,System.Web.Mvc.JsonRequestBehavior)">
            <summary>データを C1 データ用の JSON にシリアライズします。</summary>
            <param name="controller">コントローラ</param>
            <param name="data">データ</param>
            <param name="contentType">コンテンツタイプ</param>
            <param name="contentEncoding">コンテンツのエンコード</param>
            <param name="behavior">JSON 要求動作</param>
            <returns>JSON 結果</returns>
        </member>
        <member name="T:C1.Web.Mvc.Serialization.JsonConvertHelper">
            <summary>JSONコンバータヘルパー。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Serialization.JsonConvertHelper.C1Json(System.Web.Mvc.Controller,System.Object,System.String,System.Text.Encoding,System.Web.Mvc.JsonRequestBehavior,System.Boolean)">
            <summary>データをC1データ用のJSONにシリアライズします。</summary>
            <param name="controller">コントローラー</param>
            <param name="data">データ</param>
            <param name="contentType">コンテンツタイプ</param>
            <param name="contentEncoding">コンテンツのエンコード</param>
            <param name="behavior">JSON要求動作</param>
            <param name="useCamelCasePropertyName">データをシリアライズする際にキャメルケースを使用するかどうかを決定する<see cref="T:System.Boolean" />値。</param>
            <returns>JSON結果</returns>
        </member>
        <member name="T:C1.Web.Mvc.CollectionViewHelper">
            <summary>クライアント側 CollectionView からの要求の読み取り処理および書き込み処理をサポートします。</summary>
        </member>
        <member name="M:C1.Web.Mvc.CollectionViewHelper.Read``1(C1.Web.Mvc.CollectionViewRequest{``0},System.Collections.Generic.IEnumerable{``0},System.Func{C1.Web.Mvc.ColumnInfo,System.Collections.Generic.IEnumerable{System.Object}})">
            <summary>要求およびソースコレクションからデータを読み取ります。</summary>
            <typeparam name="T">データレコードのタイプ</typeparam>
            <param name="requestData">要求データ</param>
            <param name="sourceCollection">ソースコレクション</param>
            <param name="dataMapItemsSourceGetter">指定された列のデータマップの項目ソースを取得する関数。</param>
            <returns>応答データ</returns>
        </member>
        <member name="M:C1.Web.Mvc.CollectionViewHelper.ProcessExtraRequestData``1(C1.Web.Mvc.ICollectionView{``0},C1.Web.Mvc.CollectionViewRequest{``0},System.Func{C1.Web.Mvc.ColumnInfo,System.Collections.Generic.IEnumerable{System.Object}})">
            <summary>エクステンダヘルパーによって追加要求データを処理します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.CollectionViewHelper.Edit``1(C1.Web.Mvc.CollectionViewEditRequest{``0},System.Func{``0,C1.Web.Mvc.CollectionViewItemResult{``0}},System.Func{System.Collections.Generic.IEnumerable{``0}})">
            <summary>要求と書き込みアクションに従って、データを編集します。</summary>
            <typeparam name="T">データレコードのタイプ</typeparam>
            <param name="requestData">要求データ</param>
            <param name="editAction">編集アクション</param>
            <param name="read">読み取りアクションは最新のデータを提供します。</param>
            <returns>応答データ</returns>
        </member>
        <member name="M:C1.Web.Mvc.CollectionViewHelper.BatchEdit``1(C1.Web.Mvc.CollectionViewBatchEditRequest{``0},System.Func{C1.Web.Mvc.BatchOperatingData{``0},C1.Web.Mvc.CollectionViewResponse{``0}},System.Func{System.Collections.Generic.IEnumerable{``0}})">
            <summary>要求と編集アクションに従って、データを一括編集します。</summary>
            <typeparam name="T">データレコードのタイプ</typeparam>
            <param name="requestData">要求データ</param>
            <param name="editAction">編集アクション</param>
            <param name="read">読み取りアクションは最新のデータを提供します。</param>
            <returns>応答データ</returns>
        </member>
        <member name="T:C1.Web.Mvc.ReadOnlyCollectionView`1">
            <summary>編集できない CollectionView。</summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:C1.Web.Mvc.CollectionViewProcessor`1">
            <summary>CollectionView の要求データを処理するクラス</summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:C1.Web.Mvc.CustomEditableCollectionView`1">
            <summary>カスタマイズ編集可能なコレクションビュー。</summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:C1.Web.Mvc.CollectionView.CommandType">
            <summary>CollectionView の要求のコマンドタイプ。</summary>
        </member>
        <member name="F:C1.Web.Mvc.CollectionView.CommandType.Read">
            <summary>データの読み取りのタイプ。</summary>
        </member>
        <member name="F:C1.Web.Mvc.CollectionView.CommandType.Create">
            <summary>データの作成のタイプ。</summary>
        </member>
        <member name="F:C1.Web.Mvc.CollectionView.CommandType.Update">
            <summary>データの更新のタイプ。</summary>
        </member>
        <member name="F:C1.Web.Mvc.CollectionView.CommandType.Delete">
            <summary>データの削除のタイプ。</summary>
        </member>
        <member name="F:C1.Web.Mvc.CollectionView.CommandType.BatchEdit">
            <summary>データの一括変更のタイプ。</summary>
        </member>
        <member name="T:C1.Web.Mvc.CallbackManager">
            <summary>コールバックマネージャー。</summary>
        </member>
        <member name="M:C1.Web.Mvc.CallbackManager.GetDeserializedData``1">
            <summary>シリアライズ解除されたデータを取得します。</summary>
            <typeparam name="T">データのタイプ</typeparam>
            <returns>データ</returns>
        </member>
        <member name="M:C1.Web.Mvc.CallbackManager.WriteJson(System.Object)">
            <summary>データを JSON として応答に書き込みます。</summary>
            <param name="data">データ</param>
        </member>
        <member name="M:C1.Web.Mvc.CallbackManager.WriteContent(System.String,System.String)">
            <summary>コンテンツを応答に書き込みます。</summary>
            <param name="content">コンテンツ</param>
            <param name="contentType">コンテンツタイプ</param>
        </member>
        <member name="M:C1.Web.Mvc.CallbackManager.GetCurrentCallbackData``1">
            <summary>要求からシリアライズ解除されたデータを取得します。</summary>
            <returns>シリアライズ解除されたデータ</returns>
        </member>
        <member name="M:C1.Web.Mvc.CallbackManager.GetRequestTextData">
            <summary>要求からテキストデータを取得します。</summary>
            <returns>テキストデータ</returns>
        </member>
        <member name="P:C1.Web.Mvc.CallbackManager.CurrentIsCallback">
            <summary>現在の要求がコールバックかどうかを取得します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Serialization.TemplateConverter">
            <summary>テンプレートコンバータを定義します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.WebResources.ScriptsAttribute">
            <summary>スクリプトの依存関係を定義します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.WebResources.ResDependenciesAttribute">
            <summary>Webリソースの依存関係を判定します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.WebResources.ResDependenciesAttribute.#ctor(System.Object[])">
            <summary>
                <see cref="T:C1.Web.Mvc.WebResources.ResDependenciesAttribute" />クラスの新しいインスタンスを初期化します。</summary>
            <param name="dependencies">依存関係。</param>
        </member>
        <member name="P:C1.Web.Mvc.WebResources.ResDependenciesAttribute.Dependencies">
            <summary>依存関係のコレクション。</summary>
        </member>
        <member name="M:C1.Web.Mvc.WebResources.ScriptsAttribute.#ctor(System.Object[])">
            <summary>
                <see cref="T:C1.Web.Mvc.WebResources.ScriptsAttribute" />クラスの新しいインスタンスを初期化します。</summary>
            <param name="dependencies">依存関係。</param>
        </member>
        <member name="P:C1.Web.Mvc.WebResources.ScriptsAttribute.Dependencies">
            <summary>スクリプトの依存関係のコレクション。</summary>
            <remarks>例：
              [Scripts("jquery.wijmo.wijcalendar"]
              [Scripts(typeof(CalendarExtender))]</remarks>
        </member>
        <member name="T:C1.Web.Mvc.WebResources.StylesAttribute">
            <summary>スタイルシートの依存関係を決定します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.WebResources.StylesAttribute.#ctor(System.Object[])">
            <summary>
                <see cref="T:C1.Web.Mvc.WebResources.StylesAttribute" />クラスの新しいインスタンスを初期化します。</summary>
            <param name="dependencies">依存関係。</param>
        </member>
        <member name="P:C1.Web.Mvc.WebResources.StylesAttribute.Dependencies">
            <summary>スタイルシートの依存関係のコレクション。</summary>
            <remarks>例：
              [Styles("jquery.wijmo.wijcalendar"]
              [Styles(typeof(CalendarExtender))]</remarks>
        </member>
        <member name="T:C1.Web.Mvc.C1CollectionView">
            <summary>C1 CollectionViewServiceに関連するjsおよびcssを定義します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.C1Input">
            <summary>C1 Input Controlsに関連するjsおよびcssを定義します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.C1Gauge">
            <summary>C1 Serviceに関連するjsおよびcssを定義します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.C1Chart">
            <summary>C1 Chartに関連するjsおよびcssを定義します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.C1LineMarker">
            <summary>C1 LineMarkerに関連するjsおよびcssを定義します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.C1AnnotationLayer">
            <summary>C1 AnnotationLayerに関連するjsおよびcssを定義します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.C1RangeSelector">
            <summary>C1 RangeSelectorに関連するjsおよびcssを定義します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.C1ChartAnimation">
            <summary>C1 ChartAnimationに関連するjsおよびcssを定義します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.C1ChartInteraction">
            <summary>C1 ChartInteractionsに関連するjsおよびcssを定義します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.C1Grid">
            <summary>C1 Gridに関連するjsおよびcssを定義します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.C1GridFilter">
            <summary>C1 FlexGridFilterに関連するjsおよびcssを定義します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.C1GridGroupPanel">
            <summary>C1 FlexGridGroupPanelに関連するjsおよびcssを定義します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.C1GridDetailProvider">
            <summary>C1 FlexGridDetailProviderに関連するjsおよびcssを定義します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Scripts">
            <summary>スクリプトの登録に使用するC1スクリプトを表します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Scripts.#ctor(System.Web.Mvc.HtmlHelper)">
            <summary>HTMLヘルパーを使用して<see cref="T:C1.Web.Mvc.Scripts" />のインスタンスを作成します。</summary>
            <param name="helper">HTMLヘルパー。</param>
        </member>
        <member name="M:C1.Web.Mvc.Scripts.Render(System.Web.UI.HtmlTextWriter)">
            <summary>ライタにコントロールまたはコールバック結果をレンダリングします。</summary>
            <param name="writer">レンダリングに使用される指定のライタ。</param>
        </member>
        <member name="P:C1.Web.Mvc.Scripts.Culture">
            <summary>スクリプトのローカライズに使用されるカルチャを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Scripts.OwnerTypes">
            <summary>登録する必要がある依存スクリプトのタイプを取得します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Scripts.InAssembly">
            <summary>指定されたアセンブリにのみScriptsコントロールがスクリプトを登録するかどうかを取得または設定します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Scripts.HasScripts">
            <summary>現在のコンポーネントにレンダリングが必要なスクリプトがあるかどうかを示すboolean値を取得します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Styles.Render(System.Web.UI.HtmlTextWriter)">
            <summary>ライタにコントロールまたはコールバック結果をレンダリングします。</summary>
            <param name="writer">レンダリングに使用される指定のライタ。</param>
        </member>
        <member name="P:C1.Web.Mvc.Styles.HasScripts">
            <summary>現在のコンポーネントにレンダリングが必要なスクリプトがあるかどうかを示すboolean値を取得します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Themes">
            <summary>サポートされているテーマの名前を定義します。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Themes.Default">
            <summary>Defaultテーマ。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Themes.Cerulean">
            <summary>Ceruleanテーマ。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Themes.CleanDark">
            <summary>Clean darkテーマ。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Themes.CleanLight">
            <summary>Clean lightテーマ。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Themes.Cocoa">
            <summary>Cocoaテーマ。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Themes.Coral">
            <summary>Coralテーマ。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Themes.Cyborg">
            <summary>Cyborgテーマ。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Themes.Dark">
            <summary>Darkテーマ。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Themes.Darkly">
            <summary>Darklyテーマ。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Themes.Flatly">
            <summary>Flatlyテーマ。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Themes.GrayScale">
            <summary>Gray scaleテーマ。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Themes.HighContrast">
            <summary>High contrastテーマ。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Themes.Light">
            <summary>Lightテーマ。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Themes.Material">
            <summary>Materialテーマ。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Themes.Midnight">
            <summary>Midnightテーマ。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Themes.Minimal">
            <summary>Minimalテーマ。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Themes.Modern">
            <summary>Modernテーマ。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Themes.Office">
            <summary>Officeテーマ。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Themes.Organic">
            <summary>Organicテーマ。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Themes.Simplex">
            <summary>Simplexテーマ。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Themes.Slate">
            <summary>Slateテーマ。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Themes.SuperHero">
            <summary>Super heroテーマ。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Themes.Trust">
            <summary>Trustテーマ。</summary>
        </member>
        <member name="F:C1.Web.Mvc.Themes.Zen">
            <summary>Zenテーマ。</summary>
        </member>
        <member name="T:C1.Web.Mvc.WebResourcesManager">
            <summary>リソースを管理および登録するためのクラスを定義します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.WebResourcesManagerBase">
            <summary>リソースを管理および登録するための基本クラスを定義します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.WebResourcesManagerBase.#ctor(System.Web.Mvc.HtmlHelper)">
            <summary>WebResourcesManagerBaseクラスの新しいインスタンスを初期化します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.WebResourcesManagerBase.Render(System.Web.UI.HtmlTextWriter)">
            <summary>ライタにコントロールをレンダリングします。</summary>
            <param name="writer">レンダリングに使用される指定のライタ。</param>
        </member>
        <member name="M:C1.Web.Mvc.WebResourcesManagerBase.CreateChildComponents">
            <summary>子コンポーネントを作成します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.WebResourcesManagerBase.ControlTypes">
            <summary>リソースが登録されるコントロールのタイプコレクションを取得します。</summary>
            <remarks>コレクション内に項目がない場合は、すべてのリソースが登録されます。</remarks>
        </member>
        <member name="M:C1.Web.Mvc.WebResourcesManager.#ctor(System.Web.Mvc.HtmlHelper)">
            <summary>
                <see cref="T:C1.Web.Mvc.WebResourcesManager" />のインスタンスを作成します。</summary>
            <param name="helper">HTMLヘルパー</param>
        </member>
        <member name="M:C1.Web.Mvc.WebResourcesManager.CreateChildComponents">
            <summary>子コンポーネントを作成します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.WebResourcesManager.Theme">
            <summary>使用するテーマ名を取得または設定します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ChartAnimationExtension">
            <summary>ChartAnimationエクステンダを使用できるすべてのコントロールに 
            拡張メソッドを追加する静的クラスを定義します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAnimationExtension.ShowAnimation``3(C1.Web.Mvc.Fluent.FlexChartBaseBuilder{``0,``1,``2},System.Action{C1.Web.Mvc.Fluent.ChartAnimationBuilder{``0}})">
            <summary>チャートにChartAnimationエクステンダを適用します。</summary>
            <typeparam name="T">データのタイプ。</typeparam>
            <typeparam name="TControl">FlexChartBaseを継承するチャートコントロールのタイプ。</typeparam>
            <typeparam name="TChartBuilder">FlexChartBaseBuilderを継承するチャートビルダのタイプ。</typeparam>
            <param name="chartBuilder">指定されたチャートビルダ。</param>
            <param name="animationBuilder">ChartAnimationを設定するアクション。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.AnnotationLayerExtension">
            <summary>AnnotationLayerエクステンダを使用できるすべてのコントロールに 
            拡張メソッドを追加する静的クラスを定義します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AnnotationLayerExtension.AddAnnotationLayer``1(C1.Web.Mvc.Fluent.FlexChartBuilder{``0},System.Action{C1.Web.Mvc.Fluent.AnnotationLayerBuilder{``0}})">
            <summary>FlexChartにAnnotationLayerエクステンダを適用します。</summary>
            <typeparam name="T"></typeparam>
            <param name="flexChartBuilder">指定されたFlexChartビルダ。</param>
            <param name="annotationLayerBuilder">指定されたannotationlayerビルダ</param>
            <returns></returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ChartGesturesExtension">
            <summary>ChartGesturesエクステンダを使用できるすべてのコントロールに 
            拡張メソッドを追加する静的クラスを定義します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartGesturesExtension.SupportGestures``3(C1.Web.Mvc.Fluent.FlexChartCoreBuilder{``0,``1,``2},System.Action{C1.Web.Mvc.Fluent.ChartGesturesBuilder{``0}})">
            <summary>FlexChartCoreを継承するチャートにChartGesturesエクステンダを適用します。</summary>
            <typeparam name="T">データのタイプ。</typeparam>
            <typeparam name="TControl">チャートのタイプ。</typeparam>
            <typeparam name="TBuilder">チャートのビルダタイプ。</typeparam>
            <param name="chartBuilder">チャートのビルダ。</param>
            <param name="chartGestureBuilder">ChartGesturesオブジェクトのビルダ。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.RangeSelectorExtension">
            <summary>RangeSelectorエクステンダの拡張機能を定義します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.RangeSelectorExtension.AddRangeSelector``1(C1.Web.Mvc.Fluent.FlexChartBuilder{``0},System.Action{C1.Web.Mvc.Fluent.RangeSelectorBuilder{``0}})">
            <summary>FlexChartにRangeSelectorエクステンダを適用します。</summary>
            <typeparam name="T"></typeparam>
            <param name="flexChartBuilder">指定されたFlexChartビルダ。</param>
            <param name="rangeSelectorBuilder">指定されたRangeSelectorビルダ</param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.RangeSelectorExtension.AddRangeSelector``1(C1.Web.Mvc.Fluent.FlexChartBuilder{``0})">
            <summary>FlexChartでデフォルトのRangeSelectorエクステンダを適用します。</summary>
            <param name="flexChartBuilder">指定されたFlexChartビルダ。</param>
            <returns></returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.LineMarkerExtension">
            <summary>FlexGridFilterエクステンダを使用できるすべてのコントロールに 
            拡張メソッドを追加する静的クラスを定義します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.LineMarkerExtension.AddLineMarker``1(C1.Web.Mvc.Fluent.FlexChartBuilder{``0},System.Action{C1.Web.Mvc.Fluent.LineMarkerBuilder{``0}})">
            <summary>FlexChartにLineMarkerエクステンダを適用します。</summary>
            <typeparam name="T"></typeparam>
            <param name="flexChartBuilder">指定されたFlexChartビルダ。</param>
            <param name="lineMarkerBuilder">指定されたLineMarkerビルダ</param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.LineMarkerExtension.AddLineMarker``1(C1.Web.Mvc.Fluent.FlexChartBuilder{``0})">
            <summary>FlexChartでデフォルトのLineMarkerエクステンダを適用します。</summary>
            <param name="flexChartBuilder">指定されたFlexChartビルダ。</param>
            <returns></returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.PlotAreaListFactory`4">
            <summary>PlotAreaを作成するためのファクトリを定義します。</summary>
            <typeparam name="T">Modelタイプ</typeparam>
            <typeparam name="TOwner">FlexChartCoreから派生したチャート</typeparam>
            <typeparam name="PlotArea">PlotArea</typeparam>
            <typeparam name="PlotAreaBuilder">PlotAreaBuilder</typeparam>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PlotAreaListFactory`4.#ctor(System.Collections.Generic.IList{`2},`1)">
            <summary>PlotAreaListFactoryクラスの新しいインスタンスを初期化します。</summary>
            <param name="list"></param>
            <param name="owner"></param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PlotAreaListFactory`4.Add">
            <summary>デフォルトのプロットエリアをプロットエリアリストに追加します。</summary>
            <returns>プロットエリアビルダ</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.SeriesListBaseFactory`5">
            <summary>さまざまな系列を作成するためのファクトリを定義します。</summary>
            <typeparam name="T">Modelタイプ</typeparam>
            <typeparam name="TOwner">FlexChartCoreから派生したチャート</typeparam>
            <typeparam name="TSeries">ChartSeriesBaseから派生したChartSeries</typeparam>
            <typeparam name="TSeriesBuilder">ChartSeriesBuilder</typeparam>
            <typeparam name="TChartType">ChartType</typeparam>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SeriesListBaseFactory`5.#ctor(System.Collections.Generic.IList{C1.Web.Mvc.ChartSeriesBase{`0}},`1)">
            <summary>SeriesListBaseFactoryクラスの新しいインスタンスを初期化します。</summary>
            <param name="list"></param>
            <param name="owner"></param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SeriesListBaseFactory`5.Add``2(System.Func{`1,``0},System.Func{``0,``1})">
            <summary>系列を追加します。</summary>
            <typeparam name="TControl">系列のタイプを指定します。</typeparam>
            <typeparam name="TBuilder">系列ビルダタイプ。</typeparam>
            <param name="createControl">指定されたオーナーの系列を作成する関数。</param>
            <param name="createBuilder">系列のビルダ。</param>
            <returns>系列ビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SeriesListBaseFactory`5.Add">
            <summary>デフォルトの系列を系列リストに追加します。</summary>
            <returns>系列ビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SeriesListBaseFactory`5.Add(System.String)">
            <summary>デフォルトの系列を系列リストに追加します。</summary>
            <param name="name">系列の名前</param>
            <returns>系列ビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SeriesListBaseFactory`5.Add(`4)">
            <summary>デフォルトの系列を系列リストに追加します。</summary>
            <param name="type">系列のタイプ</param>
            <returns>系列ビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SeriesListBaseFactory`5.Add(`4,System.String)">
            <summary>デフォルトの系列を系列リストに追加します。</summary>
            <param name="type">系列のタイプ</param>
            <param name="name">系列の名前</param>
            <returns>系列ビルダ</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.SeriesListFactory`5">
            <summary>さまざまな系列を作成するためのファクトリを定義します。</summary>
            <typeparam name="T">Modelタイプ</typeparam>
            <typeparam name="TOwner">FlexChartCoreから派生したチャート</typeparam>
            <typeparam name="TSeries">ChartSeriesBaseから派生したChartSeries</typeparam>
            <typeparam name="TSeriesBuilder">ChartSeriesBuilder</typeparam>
            <typeparam name="TChartType">ChartType</typeparam>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SeriesListFactory`5.#ctor(System.Collections.Generic.IList{C1.Web.Mvc.ChartSeriesBase{`0}},`1)">
            <summary>SeriesListFactoryクラスの新しいインスタンスを初期化します。</summary>
            <param name="list"></param>
            <param name="owner"></param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SeriesListFactory`5.AddTrendLine">
            <summary>TrendLine系列を系列リストに追加します。</summary>
            <returns>系列ビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SeriesListFactory`5.AddTrendLine(System.String)">
            <summary>TrendLine系列を系列リストに追加します。</summary>
            <param name="name">系列の名前</param>
            <returns>系列ビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SeriesListFactory`5.AddMovingAverage">
            <summary>MovingAverage系列を系列リストに追加します。</summary>
            <returns>系列ビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SeriesListFactory`5.AddMovingAverage(System.String)">
            <summary>MovingAverage系列を系列リストに追加します。</summary>
            <param name="name">系列の名前</param>
            <returns>系列ビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SeriesListFactory`5.AddYFunctionSeries">
            <summary>YFunction系列を系列リストに追加します。</summary>
            <returns>系列ビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SeriesListFactory`5.AddYFunctionSeries(System.String)">
            <summary>YFunction系列を系列リストに追加します。</summary>
            <param name="name">系列の名前</param>
            <returns>系列ビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SeriesListFactory`5.AddParametricFunctionSeries">
            <summary>ParametricFunction系列を系列リストに追加します。</summary>
            <returns>系列ビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SeriesListFactory`5.AddParametricFunctionSeries(System.String)">
            <summary>ParametricFunction系列を系列リストに追加します。</summary>
            <param name="name">系列の名前</param>
            <returns>系列ビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SeriesListFactory`5.AddWaterfall">
            <summary>ウォータフォール系列を系列リストに追加します。</summary>
            <returns>系列ビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SeriesListFactory`5.AddWaterfall(System.String)">
            <summary>ウォータフォール系列を系列リストに追加します。</summary>
            <param name="name">系列の名前</param>
            <returns>系列ビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SeriesListFactory`5.AddBoxWhisker">
            <summary>箱ひげ図系列を系列リストに追加します。</summary>
            <returns>系列ビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SeriesListFactory`5.AddBoxWhisker(System.String)">
            <summary>箱ひげ図系列を系列リストに追加します。</summary>
            <param name="name">系列の名前</param>
            <returns>系列ビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SeriesListFactory`5.AddErrorBar">
            <summary>ErrorBar系列を系列リストに追加します。</summary>
            <returns>系列ビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SeriesListFactory`5.AddErrorBar(System.String)">
            <summary>ErrorBar系列を系列リストに追加します。</summary>
            <param name="name">系列の名前</param>
            <returns>系列ビルダ</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ControlBuilderFactory`1">
            <summary>モデルバインディングを使用して、さまざまなコントロールビルダを作成するためのファクトリクラスを定義します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory`1.#ctor(System.Web.Mvc.HtmlHelper{`0})">
            <summary>指定された <see cref="T:System.Web.Mvc.HtmlHelper" /> インスタンスを使用して、
            <see cref="T:C1.Web.Mvc.Fluent.ControlBuilderFactory" /> クラスの新しいインスタンスを初期化します。</summary>
            <param name="helper">指定された HtmlHelper オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory`1.InputNumberFor(System.Linq.Expressions.Expression{System.Func{`0,System.Int32}})">
            <summary>InputNumberBuilder を作成します。</summary>
            <param name="expression">モデル連結式</param>
            <returns>InputNumberBuilder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory`1.InputNumberFor(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.Int32}}})">
            <summary>InputNumberBuilderを作成します。</summary>
            <param name="expression">モデル連結式</param>
            <returns>InputNumberBuilder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory`1.InputNumberFor(System.Linq.Expressions.Expression{System.Func{`0,System.Int16}})">
            <summary>InputNumberBuilderを作成します。</summary>
            <param name="expression">モデル連結式</param>
            <returns>InputNumberBuilder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory`1.InputNumberFor(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.Int16}}})">
            <summary>InputNumberBuilderを作成します。</summary>
            <param name="expression">モデル連結式</param>
            <returns>InputNumberBuilder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory`1.InputNumberFor(System.Linq.Expressions.Expression{System.Func{`0,System.Int64}})">
            <summary>InputNumberBuilderを作成します。</summary>
            <param name="expression">モデル連結式</param>
            <returns>InputNumberBuilder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory`1.InputNumberFor(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.Int64}}})">
            <summary>InputNumberBuilderを作成します。</summary>
            <param name="expression">モデル連結式</param>
            <returns>InputNumberBuilder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory`1.InputNumberFor(System.Linq.Expressions.Expression{System.Func{`0,System.Double}})">
            <summary>InputNumberBuilder を作成します。</summary>
            <param name="expression">モデル連結式</param>
            <returns>InputNumberBuilder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory`1.InputNumberFor(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.Double}}})">
            <summary>InputNumberBuilderを作成します。</summary>
            <param name="expression">モデル連結式</param>
            <returns>InputNumberBuilder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory`1.InputNumberFor(System.Linq.Expressions.Expression{System.Func{`0,System.Decimal}})">
            <summary>InputNumberBuilder を作成します。</summary>
            <param name="expression">モデル連結式</param>
            <returns>InputNumberBuilder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory`1.InputNumberFor(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.Decimal}}})">
            <summary>InputNumberBuilderを作成します。</summary>
            <param name="expression">モデル連結式</param>
            <returns>InputNumberBuilder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory`1.InputNumberFor(System.Linq.Expressions.Expression{System.Func{`0,System.Single}})">
            <summary>InputNumberBuilderを作成します。</summary>
            <param name="expression">モデル連結式</param>
            <returns>InputNumberBuilder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory`1.InputNumberFor(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.Single}}})">
            <summary>InputNumberBuilderを作成します。</summary>
            <param name="expression">モデル連結式</param>
            <returns>InputNumberBuilder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory`1.InputMaskFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>InputMaskBuilderを作成します。</summary>
            <param name="expression">モデル連結式</param>
            <returns>InputMaskBuilder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory`1.InputDateFor(System.Linq.Expressions.Expression{System.Func{`0,System.DateTime}})">
            <summary>InputDateBuilder を作成します。</summary>
            <param name="expression">モデル連結式</param>
            <returns>InputDateBuilder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory`1.InputDateFor(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.DateTime}}})">
            <summary>InputDateBuilderを作成します。</summary>
            <param name="expression">モデル連結式</param>
            <returns>InputDateBuilder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory`1.InputDateTimeFor(System.Linq.Expressions.Expression{System.Func{`0,System.DateTime}})">
            <summary>InputDateTimeBuilderオブジェクトを作成します。</summary>
            <param name="expression">モデル連結式</param>
            <returns>InputDateTimeBuilderオブジェクト。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory`1.InputDateTimeFor(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.DateTime}}})">
            <summary>InputDateTimeBuilderオブジェクトを作成します。</summary>
            <param name="expression">モデル連結式</param>
            <returns>InputDateTimeBuilderオブジェクト。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory`1.InputTimeFor(System.Linq.Expressions.Expression{System.Func{`0,System.DateTime}})">
            <summary>InputTimeBuilder を作成します。</summary>
            <param name="expression">モデル連結式</param>
            <returns>InputTimeBuilder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory`1.InputTimeFor(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.DateTime}}})">
            <summary>InputTimeBuilderを作成します。</summary>
            <param name="expression">モデル連結式</param>
            <returns>InputTimeBuilder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory`1.InputColorFor(System.Linq.Expressions.Expression{System.Func{`0,System.Drawing.Color}})">
            <summary>InputColorBuilder を作成します。</summary>
            <param name="expression">モデル連結式</param>
            <returns>InputColorBuilder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory`1.InputColorFor(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.Drawing.Color}}})">
            <summary>InputColorBuilderを作成します。</summary>
            <param name="expression">モデル連結式</param>
            <returns>InputColorBuilder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory`1.ComboBoxFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>ComboBoxBuilderを作成します。</summary>
            <param name="expression">モデル連結式</param>
            <returns>ComboBoxBuilder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory`1.AutoCompleteFor(System.Linq.Expressions.Expression{System.Func{`0,System.String}})">
            <summary>AutoCompleteBuilderを作成します。</summary>
            <param name="expression">モデル連結式</param>
            <returns>AutoCompleteBuilder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory`1.MultiSelectFor``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})">
            <summary>MultiSelectBuilderを作成します。</summary>
            <param name="expression">モデル連結式</param>
            <returns>MultiSelectBuilder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory`1.MultiAutoCompleteFor``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})">
            <summary>MultiAutoCompleteBuilderを作成します。</summary>
            <param name="expression">モデル連結式</param>
            <returns>MultiAutoCompleteBuilder</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.FlexGridDetailProviderExtension">
            <summary>FlexGridDetailProviderエクステンダの拡張メソッドを定義します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridDetailProviderExtension.ShowDetailRow``1(C1.Web.Mvc.Fluent.FlexGridBuilder{``0},System.Action{C1.Web.Mvc.Fluent.FlexGridDetailProviderBuilder{``0}})">
            <summary>FlexGridにFlexGridDetailProviderエクステンダを適用します。</summary>
            <typeparam name="T"></typeparam>
            <param name="gridBuilder">指定されたFlexGridビルダ。</param>
            <param name="detailProviderBuilder">指定されたFlexGridDetailProviderビルダ</param>
            <returns></returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ColumnFiltersBuilder">
            <summary>
                <see cref="T:C1.Web.Mvc.ColumnFilter" />の強く型付けされたリストの作成に使用するクラスを定義します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ListItemFactory`2">
            <summary>オブジェクトの強力に型付けされたリストの作成に使用するクラスを定義します。</summary>
            <typeparam name="TItem">指定された項目のタイプ</typeparam>
            <typeparam name="TItemBuilder">指定された項目ビルダのタイプ。</typeparam>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ListItemFactory`2.#ctor(System.Collections.Generic.IList{`0},System.Func{`0,`1})">
            <summary>指定されたコレクションを使用して、<see cref="!:C1.Web.Mvc.Fluent.ListItemFactory" /> クラスの 
            インスタンスを初期化します。</summary>
            <param name="list">指定されたコレクション</param>
            <param name="createItemBuilder">項目ビルダを作成するための関数。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ListItemFactory`2.#ctor(System.Collections.Generic.IList{`0},System.Func{`0},System.Func{`0,`1})">
            <summary>指定されたコレクションを使用して、<see cref="T:C1.Web.Mvc.Fluent.ListItemFactory`2" />クラスの 
            インスタンスを初期化します。</summary>
            <param name="list">指定されたコレクション。</param>
            <param name="createItem">項目を作成する関数。</param>
            <param name="createItemBuilder">項目を設定するビルダ。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ListItemFactory`2.Add">
            <summary>デフォルトの TItem インスタンスをコレクションに追加します。</summary>
            <returns>項目ビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ListItemFactory`2.Add(System.Action{`1})">
            <summary>指定されたアクションによって更新された TItem インスタンスをコレクションに追加します。</summary>
            <param name="build">TItem インスタンスを更新するために指定されたアクション。</param>
            <returns>ファクトリインスタンス</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ListItemFactory`2.Add(`0)">
            <summary>TItem インスタンスをコレクションに追加します。</summary>
            <param name="item">TItem インスタンス。</param>
            <returns>ファクトリインスタンス</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnFiltersBuilder.#ctor(System.Collections.Generic.IList{C1.Web.Mvc.ColumnFilter},System.Func{C1.Web.Mvc.ColumnFilter,C1.Web.Mvc.Fluent.ColumnFilterBuilder})">
            <summary>指定されたコレクションを使用して、<see cref="!:C1.Web.Mvc.Fluent.ColumnFilterListItemFactory" />クラスの 
            インスタンスを初期化します。</summary>
            <param name="list">指定されたコレクション</param>
            <param name="createItemBuilder">項目ビルダを作成するための関数。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnFiltersBuilder.#ctor(System.Collections.Generic.IList{C1.Web.Mvc.ColumnFilter},System.Func{C1.Web.Mvc.ColumnFilter},System.Func{C1.Web.Mvc.ColumnFilter,C1.Web.Mvc.Fluent.ColumnFilterBuilder})">
            <summary>指定されたコレクションを使用して、<see cref="!:C1.Web.Mvc.Fluent.ColumnFilterListItemFactory" />クラスの 
            インスタンスを初期化します。</summary>
            <param name="list">指定されたコレクション</param>
            <param name="createItem">
                <see cref="T:C1.Web.Mvc.ColumnFilter" />を返すために使用される関数。</param>
            <param name="createItemBuilder">項目ビルダを作成するための関数。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnFiltersBuilder.Add(C1.Web.Mvc.ColumnFilter)">
            <summary>このメソッドを隠蔽するためにオーバーライドします。</summary>
            <param name="item">TItemインスタンス。</param>
            <returns>ファクトリインスタンス</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.FlexGridFilterBuilder`1">
            <summary>FlexGridFilterのHTMLビルダを定義します。</summary>
            <typeparam name="T">データ項目タイプ。</typeparam>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridFilterBuilder`1.#ctor(C1.Web.Mvc.FlexGridFilter{`0})">
            <summary>１つの FlexGridFilterBuilder インスタンスを作成します。</summary>
            <param name="extender">FlexGridFilterエクステンダ。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridFilterBuilder`1.ShowFilterIcons(System.Boolean)">
            <summary>グリッドの列ヘッダーにフィルタ編集ボタンを表示するかどうかを示すブール値を取得または設定します。</summary>
            <param name="value">ブール値。</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridFilterBuilder`1.DefaultFilterType(C1.Web.Mvc.FilterType)">
            <summary>使用するデフォルトのフィルタタイプを設定します。</summary>
            <param name="type">FlexGridのフィルタタイプ</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridFilterBuilder`1.ColumnFilterTypes(System.Collections.Generic.IDictionary{System.String,C1.Web.Mvc.FilterType})">
            <summary>列とそのFilterTypeをマッピングする辞書を設定します。</summary>
            <param name="dict">列とそのFilterTypeをマッピングしている辞書</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridFilterBuilder`1.ShowSortButtons(System.Boolean)">
            <summary>フィルタエディタにソートボタンを入れるかどうかを示す値を取得または設定します。</summary>
            <param name="value">ブール値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridFilterBuilder`1.ColumnFilterTypes(System.Object)">
            <summary>列とそのFilterTypeをマッピングする辞書を設定します。</summary>
            <param name="filterTypes">列とそのFilterTypeをマッピングしている辞書</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridFilterBuilder`1.OnClientFilterChanging(System.String)">
            <summary>OnClientFilterChangingプロパティを設定します。</summary>
            <remarks>ユーザーが列フィルタを編集しようとしたときに発生します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridFilterBuilder`1.OnClientFilterChanged(System.String)">
            <summary>OnClientFilterChangedプロパティを設定します。</summary>
            <remarks>ユーザーが列フィルタを編集した後で発生します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridFilterBuilder`1.OnClientFilterApplied(System.String)">
            <summary>OnClientFilterAppliedプロパティを設定します。</summary>
            <remarks>フィルタが適用された後に発生します。</remarks>
            <param name="value">値</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridFilterBuilder`1.FilterColumns(System.String[])">
            <summary>フィルタを持つ列の名前または連結を保持する配列を設定します。</summary>
            <param name="columns">この配列は、フィルタ処理可能な列を示します</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridFilterBuilder`1.ColumnFilters(System.Action{C1.Web.Mvc.Fluent.ColumnFiltersBuilder})">
            <summary>ColumnFiltersを設定します。</summary>
            <param name="builder">ビルダアクション</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.FlexGridFilterExtension">
            <summary>FlexGridFilter エクステンダを使用できるすべてのコントロールに 
            拡張メソッドを追加する静的クラスを定義します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridFilterExtension.Filterable``1(C1.Web.Mvc.Fluent.FlexGridBuilder{``0},System.Action{C1.Web.Mvc.Fluent.FlexGridFilterBuilder{``0}})">
            <summary>FlexGrid に FlexGridFilter エクステンダを適用します。</summary>
            <typeparam name="T"></typeparam>
            <param name="gridBuilder">指定された FlexGrid ビルダ。</param>
            <param name="gridFilterBuilder">指定された FlexGridFilter ビルダ</param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridFilterExtension.Filterable``1(C1.Web.Mvc.Fluent.FlexGridBuilder{``0})">
            <summary>FlexGrid にデフォルトの FlexGridFilter エクステンダを適用します。</summary>
            <typeparam name="T"></typeparam>
            <param name="gridBuilder">指定された FlexGrid ビルダ。</param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridFilterExtension.Filterable(C1.Web.Mvc.Fluent.FlexGridBuilder{System.Object})">
            <summary>FlexGrid にデフォルトの FlexGridFilter エクステンダを適用します。</summary>
            <param name="gridBuilder">指定された FlexGrid ビルダ。</param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridFilterExtension.Filterable(C1.Web.Mvc.Fluent.FlexGridBuilder{System.Object},System.Action{C1.Web.Mvc.Fluent.FlexGridFilterBuilder{System.Object}})">
            <summary>FlexGrid に FlexGridFilter エクステンダを適用します。</summary>
            <param name="gridBuilder">指定された FlexGrid ビルダ。</param>
            <param name="gridFilterBuilder">指定された FlexGridFilter ビルダ</param>
            <returns></returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.FlexGridGroupPanelExtension">
            <summary>FlexGridGroupPanelエクステンダを使用できるすべてのコントロールに 
            拡張メソッドを追加する静的クラスを定義します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridGroupPanelExtension.ShowGroupPanel``1(C1.Web.Mvc.Fluent.FlexGridBuilder{``0},System.Action{C1.Web.Mvc.Fluent.FlexGridGroupPanelBuilder{``0}},System.String)">
            <summary>FlexGridにFlexGridGroupPanelエクステンダを適用します。</summary>
            <typeparam name="T"></typeparam>
            <param name="gridBuilder">指定されたFlexGridビルダ。</param>
            <param name="gridGroupPanelBuilder">指定されたFlexGridGroupPanelビルダ</param>
            <param name="selector">FlexGridGroupPanelのホスト要素の指定されたセレクタ。</param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridGroupPanelExtension.ShowGroupPanel``1(C1.Web.Mvc.Fluent.FlexGridBuilder{``0},System.String)">
            <summary>FlexGridにデフォルトのFlexGridGroupPanelエクステンダを適用します。</summary>
            <typeparam name="T"></typeparam>
            <param name="gridBuilder">指定されたFlexGridビルダ。</param>
            <param name="selector">FlexGridGroupPanelのホスト要素の指定されたセレクタ。</param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridGroupPanelExtension.ShowGroupPanel(C1.Web.Mvc.Fluent.FlexGridBuilder{System.Object},System.String)">
            <summary>FlexGridにデフォルトのFlexGridGroupPanelエクステンダを適用します。</summary>
            <param name="gridBuilder">指定されたFlexGridビルダ。</param>
            <param name="selector">FlexGridGroupPanelのホスト要素の指定されたセレクタ。</param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridGroupPanelExtension.ShowGroupPanel(C1.Web.Mvc.Fluent.FlexGridBuilder{System.Object},System.Action{C1.Web.Mvc.Fluent.FlexGridGroupPanelBuilder{System.Object}},System.String)">
            <summary>FlexGridにFlexGridGroupPanelエクステンダを適用します。</summary>
            <param name="gridBuilder">指定されたFlexGridビルダ。</param>
            <param name="gridGroupPanelBuilder">指定されたFlexGridGroupPanelビルダ</param>
            <param name="selector">FlexGridGroupPanelのホスト要素の指定されたセレクタ。</param>
            <returns></returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.HtmlHelperExtension">
            <summary>標準 <see cref="T:System.Web.Mvc.HtmlHelper" /> クラスを拡張します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.HtmlHelperExtension.C1(System.Web.Mvc.HtmlHelper)">
            <summary>HtmlHelper によって ControlBuilderFactory インスタンスを作成します。</summary>
            <param name="helper">指定された HtmlHelper オブジェクト</param>
            <returns>ControlBuilderFactory のインスタンス</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.HtmlHelperExtension.C1``1(System.Web.Mvc.HtmlHelper{``0})">
            <summary>HtmlHelper によって ControlBuilderFactory インスタンスを作成します。</summary>
            <typeparam name="TModel">指定されたモデルタイプ</typeparam>
            <param name="helper">指定された HtmlHelper オブジェクト</param>
            <returns>ControlBuilderFactory のインスタンス</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.IHtmlStringExtension">
            <summary>
                <see cref="T:System.Web.IHtmlString" /> の拡張メソッドを追加する静的クラスを定義します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.IHtmlStringExtension.ToTemplate(System.Web.IHtmlString)">
            <summary>コントロールをテンプレートモードでレンダリングします。</summary>
            <param name="htmlString">指定された IHtmlString オブジェクト</param>
            <returns>テンプレートモードの <see cref="T:System.Web.IHtmlString" /> のインスタンス。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.MenuItemFactory">
            <summary>MenuItem のビルダファクトリサブクラス。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MenuItemFactory.#ctor(System.Collections.Generic.IList{C1.Web.Mvc.MenuItem})">
            <summary>MenuItemFactory インスタンスを作成します。</summary>
            <param name="list">MenuItem のリスト</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MenuItemFactory.Add(System.String,System.Object)">
            <summary>MenuItem を追加するオーバーライドファクトリメソッド。</summary>
            <param name="header">MenuItem のヘッダー</param>
            <param name="commandParameter">MenuItem のコマンドパラメータ</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MenuItemFactory.AddSeparator">
            <summary>セパレータとなる MenuItem を追加します。</summary>
            <returns>現在のビルダ</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.MenuBuilder">
            <summary>メニューのビルダ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MenuBuilder.#ctor(C1.Web.Mvc.Menu)">
            <summary>１つの MenuBuilder インスタンスを作成します。</summary>
            <param name="control">Menu コントロール。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MenuBuilder.MenuItems(System.Action{C1.Web.Mvc.Fluent.MenuItemFactory})">
            <summary>MenuItems を設定します。</summary>
            <param name="build">ビルドアクション</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MenuBuilder.Command(System.String,System.String)">
            <summary>Command プロパティを設定します。</summary>
            <param name="execute">execute クライアント関数</param>
            <param name="canExecute">canExecute クライアント関数</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.BasicBundlesBuilder">
            <summary>基本アセンブリのスクリプトバンドルのビルダを定義します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.BundlesBuilder">
            <summary>スクリプトバンドルの基本ビルダを定義します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BasicBundlesBuilder.Chart(System.Action{C1.Web.Mvc.Fluent.ChartExtensionBundlesBuilder})">
            <summary>チャート関連のスクリプトバンドルを登録します。</summary>
            <param name="build">
                <see cref="T:C1.Web.Mvc.Fluent.ChartExtensionBundlesBuilder" />。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BasicBundlesBuilder.Grid(System.Action{C1.Web.Mvc.Fluent.GridExtensionBundlesBuilder})">
            <summary>グリッド関連のスクリプトバンドルを登録します。</summary>
            <param name="build">
                <see cref="T:C1.Web.Mvc.Fluent.GridExtensionBundlesBuilder" />。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BasicBundlesBuilder.Input">
            <summary>入力スクリプトバンドルを登録します。</summary>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BasicBundlesBuilder.Gauge">
            <summary>ゲージスクリプトバンドルを登録します。</summary>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BasicBundlesBuilder.CollectionView">
            <summary>コレクションビュースクリプトバンドルを登録します。</summary>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.GridExtensionBundlesBuilder">
            <summary>グリッド拡張スクリプトバンドルのビルダを定義します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.GridExtensionBundlesBuilder.Detail">
            <summary>詳細行拡張スクリプトバンドルを登録します。</summary>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.GridExtensionBundlesBuilder.Filter">
            <summary>フィルタ拡張スクリプトバンドルを登録します。</summary>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.GridExtensionBundlesBuilder.GroupPanel">
            <summary>グループパネル拡張スクリプトバンドルを登録します。</summary>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ChartExtensionBundlesBuilder">
            <summary>チャート拡張スクリプトバンドルのビルダを定義します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartExtensionBundlesBuilder.Annotation">
            <summary>注釈拡張スクリプトバンドルを登録します。</summary>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartExtensionBundlesBuilder.LineMarker">
            <summary>ラインマーカー拡張スクリプトバンドルを登録します。</summary>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartExtensionBundlesBuilder.Animation">
            <summary>アニメーション拡張スクリプトバンドルを登録します。</summary>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.StylesBuilder">
            <summary>スタイルシートを登録するビルダを定義します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.StylesBuilder.Theme(System.String)">
            <summary>テーマを設定します。</summary>
            <param name="theme">テーマ。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ScriptsBuilder">
            <summary>スクリプトを登録するビルダを定義します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ScriptsBuilder.Basic">
            <summary>基本アセンブリのすべてのスクリプトを登録します。</summary>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ScriptsBuilder.Basic(System.Action{C1.Web.Mvc.Fluent.BasicBundlesBuilder})">
            <summary>指定されたスクリプトバンドルを<see cref="T:C1.Web.Mvc.Fluent.BasicBundlesBuilder" />によって基本アセンブリに登録します。</summary>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ScriptsBuilder.Culture(System.String)">
            <summary>カルチャ名を使用して指定されたグローバリゼーションスクリプトを登録します。</summary>
            <param name="culture">カルチャ名。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="T:C1.Web.Mvc.LicenseDetector">
            <summary>ライセンスを検出するためのクラスを定義します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.LicenseDetector.#ctor">
            <summary>コンストラクタ。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Localization.Resources">
            <summary>強力に型付けされたリソースクラス（ローカライズされた文字列の参照などに使用）。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.ResourceManager">
            <summary>このクラスで使用されるキャッシュされた ResourceManager インスタンスを返します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.Culture">
            <summary>この強力に型付けされたリソースクラスを使用するすべてのリソース参照に対して、現在のスレッドの
              CurrentUICulture プロパティをオーバーライドします。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.AppLicenseEvalValid">
            <summary>「Trial license, {0} days left.（試用ライセンスです。残り{0}日。）」に相当するローカライズされた文字列を検索します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.AppLicenseExpiredEval">
            <summary>「Your trial license is expired.（お使いの試用ライセンスの有効期限が切れています。）」に相当するローカライズされた文字列を検索します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.AppLicenseExpiredFull">
            <summary>「Your license is expired.（お使いのライセンスの有効期限が切れています。）」に相当するローカライズされた文字列を検索します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.AppLicenseFullValid">
            <summary>「Valid license, {0} days left.（有効なライセンスです。残り{0}日。）」に相当するローカライズされた文字列を検索します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.AppLicenseInvalidCert">
            <summary>「Invalid certificate（無効な証明書）」に相当するローカライズされた文字列を検索します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.AppLicenseNotSet">
            <summary>「Please set a valid license key by setting LicenseManager.Key.（LicenseManager.Keyを設定して、有効なライセンスキーを設定してください。）」に相当するローカライズされた文字列を検索します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.AppLicenseUnknown">
            <summary>「Unknown license.（不明なライセンス。）」に相当するローカライズされた文字列を検索します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.C1JsonCreatingConstructorError">
            <summary>「Error creating constructor（コンストラクタの作成エラー）」に相当するローカライズされた文字列を検索します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.C1JsonDeserializeToTypeError">
            <summary>「The text cannot be deserialized into an instance of {0}.（テキストを {0} のインスタンスにシリアライズ解除できません。）」に相当するローカライズされた文字列を検索します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.C1JsonNoParameterizedConstructorNotFound">
            <summary>「No parameterless constructor defined.（パラメータなしのコンストラクタは定義されていません。）」に相当するローカライズされた文字列を検索します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.C1JsonParameterizedConstructorNotFound">
            <summary>「No matching parameterized constructor found.（一致するパラメータ付きコンストラクタが見つかりません。）」に相当するローカライズされた文字列を検索します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.C1JsonReadInvalidJsonText">
            <summary>「Invalid JSON text（無効な JSON テキスト）」に相当するローカライズされた文字列を検索します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.C1JsonReadInvalidLiteral">
            <summary>「Invalid {0} literal（無効な {0} リテラル）」に相当するローカライズされた文字列を検索します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.C1JsonReadJsonTextIsEmpty">
            <summary>「The json text read is empty.（読み取られた JSON テキストは空です。）」に相当するローカライズされた文字列を検索します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.C1JsonReadUnexpectedLiteral">
            <summary>「Unexpected name/value pair syntax in object literal.（オブジェクトリテラルに予期しない名前/値ペア構文があります。）」に相当するローカライズされた文字列を検索します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.C1JsonReadUnterminatedLiteral">
            <summary>「Unterminated {0} literal（未終了の {0} リテラル）」に相当するローカライズされた文字列を検索します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.C1JsonResultGetIsNotAllowed">
            <summary>「Get method is not allowed.（Get メソッドは使用できません。）」に相当するローカライズされた文字列を検索します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.C1JsonWriteEndScopeError">
            <summary>「No active scope to end.（終了するアクティブなスコープがありません。）」に相当するローカライズされた文字列を検索します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.C1JsonWriteKeyTypeIsNotSupportedInHashtable">
            <summary>「Key of unsupported type contained in Hashtable.（サポートされないタイプのキーがハッシュテーブルに含まれます。）」に相当するローカライズされた文字列を検索します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.C1JsonWriteNamesWrittenError">
            <summary>「Names can only be written into Object scopes.（名前は Object スコープにのみ書き込むことができます。）」に相当するローカライズされた文字列を検索します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.C1JsonWriteNoScopeWriten">
            <summary>「No active scope to write into.（書き込み先のアクティブなスコープがありません。）」に相当するローカライズされた文字列を検索します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.ChartAxisInvalidLogBase">
            <summary>「Value should be larger than 0, and should not equals to 1.（値は0より大きく1であってはなりません。）」に相当するローカライズされた文字列を検索します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.CollectionViewBatchEditNotSupported">
            <summary>「BatchEditing is not supported（一括編集はサポートされていません。）」に相当するローカライズされた文字列を検索します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.CollectionViewEditCommand">
            <summary>「Create, Delete and Update.（作成、削除、および更新）」に相当するローカライズされた文字列を検索します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.CollectionViewEditNotSupported">
            <summary>「Editing is not supported（編集はサポートされていません。）」に相当するローカライズされた文字列を検索します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.CollectionViewHandleActionTip">
            <summary>「Should handle action by the {0} property.（{0} プロパティに基づいてアクションを処理する必要があります。）」に相当するローカライズされた文字列を検索します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.CollectionViewInvalidCommand">
            <summary>「Only {0} operation is allowed to be executed in the {0} action.（{0} アクションでは {0} 操作だけを実行できます。）」に相当するローカライズされた文字列を検索します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.CollectionViewInvalidInitialItemsCount">
            <summary>「The value of the InitialItemsCount property should be a non-negative number or null.（InitialItemsCount プロパティの値は、負でない数値または null でなければなりません。）」に相当するローカライズされた文字列を検索します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.CollectionViewPageNotSupported">
            <summary>「Paging is not supported（ページングはサポートされていません。）」に相当するローカライズされた文字列を検索します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.CollectionViewUnknowCommand">
            <summary>「Unknown command.（不明なコマンド。）」に相当するローカライズされた文字列を検索します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.ConverterDeserializationIsNotImplemented">
            <summary>「The deserialization should never be implemented.（シリアライズ解除を実装してはなりません。）」に相当するローカライズされた文字列を検索します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.ConverterInvalidTypeOfValue">
            <summary>「Invalid type of value.（無効な値の型）」に相当するローカライズされた文字列を検索します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.ConverterValueCanNotBeDeserialized">
            <summary>「The value cannot be deserialized.（値をシリアライズ解除できません。）」に相当するローカライズされた文字列を検索します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.ConverterValueCanNotBeSerialized">
            <summary>「The value cannot be serialized.（値をシリアライズできません。）」に相当するローカライズされた文字列を検索します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.EvalInfoMessage">
            <summary>「ComponentOne Controls for ASP.NET MVC Wijmo5 (Evaluation Version). Copyright (c), GrapeCity, Inc. All rights reserved.（ComponentOne Controls for ASP.NET MVC Wijmo5（試用版）Copyright (c), GrapeCity, Inc. All rights reserved.）」に相当するローカライズされた文字列を検索します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.FlexGridCollectionViewNullError">
            <summary>「The grid's collectionview must be non null reference.（グリッドのコレクションビューは null 参照以外でなければなりません。）」に相当するローカライズされた文字列を検索します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.FlexGridFilterCompareError">
            <summary>「Cannot compare two instances which are not implemented the IComparable interface.（IComparable インタフェースを実装していない２つのインスタンスは比較できません。）」に相当するローカライズされた文字列を検索します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.FlexGridInvalidColumnWidth">
            <summary>「Column widths should be positive numbers (column width in pixels), null or negative numbers (use the collection's default column width), or strings in the format'{number}* ' (star sizing).（列幅は、正の値（ピクセル単位の列幅）、null、または負の値（コレクションのデフォルト幅）、または書式 '{number}*' の文字列（スターサイズ）にする必要があります。）」に相当するローカライズされた文字列を検索します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.FlexPieInnerRadiusOutOfRangeError">
            <summary>「Value should be larger than or equals 0, and less than 1.（値は０以上１未満でなければなりません。）」に相当するローカライズされた文字列を検索します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.InvalidC1Property">
            <summary>「The value of the c1-property attribute is invalid.（c1のプロパティ属性の値が無効です。）」に相当するローカライズされた文字列を検索します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.InvalidValueException">
            <summary>「'{0}' is an invalid value.（'{0}' は無効な値です。）」に相当するローカライズされた文字列を検索します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.NotSetC1Property">
            <summary>「Please set the c1-property attribute.（c1のプロパティ属性を設定してください。）」に相当するローカライズされた文字列を検索します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.NoAppEnvironment">
            <summary>「Please set the c1-property attribute.（c1のプロパティ属性を設定してください。）」に相当するローカライズされた文字列を検索します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Serialization.C1ClientEventJsonResolver">
            <summary>C1 MVCコントロールのシリアライズオプションのJsonResolver。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Serialization.BaseResolver">
            <summary>リゾルバーの基本クラスを定義します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Serialization.BaseResolver.CanResolve(System.String,System.Object,System.Type,C1.Web.Mvc.Serialization.IContext)">
            <summary>オブジェクトがこのリゾルバーを使用できるかどうかを決定します。</summary>
            <param name="name">オブジェクトの名前。</param>
            <param name="value">オブジェクト値。</param>
            <param name="type">オブジェクトタイプ。</param>
            <param name="context">コンテキスト。</param>
            <returns>解決されるかどうかを示す<see cref="T:System.Boolean" />値。
             trueの場合は、オブジェクトを解決できます。
             そうでない場合、リゾルバーはこのオブジェクトをサポートできません。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Serialization.BaseResolver.ResolveConverter(System.String,System.Object,System.Type,C1.Web.Mvc.Serialization.IContext)">
            <summary>このリゾルバーのコンバータを取得します。</summary>
            <param name="name">オブジェクトの名前。</param>
            <param name="value">オブジェクト値。</param>
            <param name="type">オブジェクトタイプ。</param>
            <param name="context">コンテキスト。</param>
            <returns>コンバータ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Serialization.BaseResolver.ResolvePropertyName(System.String,System.Object,System.Type,C1.Web.Mvc.Serialization.IContext)">
            <summary>解決後の名前を取得します。</summary>
            <param name="name">オブジェクトの名前。</param>
            <param name="value">オブジェクト値。</param>
            <param name="type">オブジェクトタイプ。</param>
            <param name="context">コンテキスト。</param>
            <returns>文字列。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Serialization.BaseReader">
            <summary>シリアライズ解除の基本クラスを定義します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Serialization.Operation">
            <summary>シリアライズとシリアライズ解除の基本クラスを定義します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Serialization.Operation.#ctor(C1.Web.Mvc.Serialization.IContext,C1.Web.Mvc.Serialization.IAttributeHelper)">
            <summary>
                <see cref="T:C1.Web.Mvc.Serialization.Operation" /> のインスタンスを作成します。</summary>
            <param name="context">コンテキストオブジェクト。</param>
            <param name="helper">属性ヘルパー。</param>
        </member>
        <member name="M:C1.Web.Mvc.Serialization.Operation.Dispose">
            <summary>リソースを破棄します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Serialization.Operation.Context">
            <summary>コンテキストオブジェクトを取得します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Serialization.BaseReader.#ctor(C1.Web.Mvc.Serialization.IContext,C1.Web.Mvc.Serialization.IAttributeHelper,System.IO.TextReader)">
            <summary>
                <see cref="T:C1.Web.Mvc.Serialization.BaseReader" /> のインスタンスを作成します。</summary>
            <param name="context">コンテキスト。</param>
            <param name="helper">属性ヘルパー。</param>
            <param name="reader">テキストリーダー。</param>
        </member>
        <member name="T:C1.JsonNet.Converters.EnumToStringConverter">
            <summary>Enum 型の値をキャメルケースを使用または使用しない文字列に変換するクラスを定義します</summary>
        </member>
        <member name="M:C1.JsonNet.Converters.EnumToStringConverter.#ctor">
            <summary>EnumToStringConverterクラスの新しいインスタンスを初期化します。</summary>
        </member>
        <member name="M:C1.JsonNet.Converters.EnumToStringConverter.CanConvert(System.Type)">
            <summary>コンバータがサポートされるかどうかを取得します。</summary>
            <param name="objectType">オブジェクトタイプ。</param>
            <returns>コンバータがサポートされるかどうかを示すブール値。
            trueの場合、コンバータはサポートされます。
            そうでない場合は、サポートされません。</returns>
        </member>
        <member name="M:C1.JsonNet.Converters.EnumToStringConverter.ReadJson(C1.JsonNet.JsonReader,System.Type,System.Object)">
            <summary>オブジェクトをシリアライズ解除します。</summary>
            <param name="reader">シリアライズ解除リーダー。</param>
            <param name="objectType">オブジェクトタイプ。</param>
            <param name="existingValue">既存の値。</param>
            <returns>シリアライズ解除後のオブジェクト。</returns>
        </member>
        <member name="M:C1.JsonNet.Converters.EnumToStringConverter.WriteJson(C1.JsonNet.JsonWriter,System.Object)">
            <summary>値をシリアライズします。</summary>
            <param name="writer">シリアライズライタ。</param>
            <param name="value">値。</param>
        </member>
        <member name="P:C1.JsonNet.Converters.EnumToStringConverter.CamelCaseText">
            <summary>書き込まれる enum テキストをキャメルケースにするかどうかを示す値を取得または設定します。</summary>
            <value>書き込まれる enum テキストがキャメルケースの場合は <c>true</c>、そうでない場合は <c>false</c>。</value>
        </member>
        <member name="T:C1.JsonNet.Converters.FunctionConverter">
            <summary>クライアント関数名を引用符なしの文字列に変換するコンバータを定義します。</summary>
        </member>
        <member name="M:C1.JsonNet.Converters.FunctionConverter.CanConvert(System.Type)">
            <summary>コンバータがサポートされるかどうかを取得します。</summary>
            <param name="objectType">オブジェクトタイプ。</param>
            <returns>コンバータがサポートされるかどうかを示すブール値。
            trueの場合、コンバータはサポートされます。
            そうでない場合は、サポートされません。</returns>
        </member>
        <member name="M:C1.JsonNet.Converters.FunctionConverter.WriteJson(C1.JsonNet.JsonWriter,System.Object)">
            <summary>値をシリアライズします。</summary>
            <param name="writer">シリアライズライタ。</param>
            <param name="value">値。</param>
        </member>
        <member name="M:C1.JsonNet.Converters.FunctionConverter.ReadJson(C1.JsonNet.JsonReader,System.Type,System.Object)">
            <summary>オブジェクトをシリアライズ解除します。</summary>
            <param name="reader">シリアライズ解除リーダー。</param>
            <param name="objectType">オブジェクトタイプ。</param>
            <param name="existingValue">既存の値。</param>
            <returns>シリアライズ解除後のオブジェクト。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Serialization.JavascriptDateTimeConverter">
            <summary>サービスコンバータを定義します。</summary>
            <remarks>このコンバータは、<see cref="T:System.DateTime" />または<seealso cref="T:System.DateTimeOffset" />インスタンスをJavaScriptの日付コンストラクタに変換するために使用されます。これは、ページが初めてロードされるときに、値をシリアライズするために必ず使用されます。このコンバータはシリアライズにのみ使用されます。</remarks>
            <summary>サービスコンバータを定義します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Serialization.JavascriptDateTimeConverter.CanConvert(System.Type)">
            <summary>現在のコンバータを使用したシリアライズまたはシリアライズ解除をオブジェクトがサポートするかどうかを取得します。</summary>
            <param name="objectType">オブジェクトタイプ。</param>
            <returns>trueの場合、コンバータはサポートされます。そうでない場合は、サポートされません。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Serialization.JavascriptDateTimeConverter.WriteJson(C1.JsonNet.JsonWriter,System.Object)">
            <summary>オブジェクトをシリアライズします。</summary>
            <param name="writer">シリアライズライタ。</param>
            <param name="value">シリアライズされる値。</param>
        </member>
        <member name="M:C1.Web.Mvc.Serialization.JavascriptDateTimeConverter.ReadJson(C1.JsonNet.JsonReader,System.Type,System.Object)">
            <summary>このコンバータを使用したシリアライズ解除をサポートしないようにオーバーライドします。</summary>
            <param name="reader">シリアライズ解除リーダー。</param>
            <param name="objectType">オブジェクトタイプ。</param>
            <param name="existedValue">既存の値。</param>
            <returns>オブジェクト。</returns>
        </member>
        <member name="T:C1.JsonNet.Converters.HtmlColorConverter">
            <summary>色を HTML に変換するコンバータ。</summary>
        </member>
        <member name="M:C1.JsonNet.Converters.HtmlColorConverter.WriteJson(C1.JsonNet.JsonWriter,System.Object)">
            <summary>値を JSON 文字列に書き込みます。</summary>
            <param name="writer">JSON ライタ</param>
            <param name="value">値</param>
        </member>
        <member name="M:C1.JsonNet.Converters.HtmlColorConverter.ReadJson(C1.JsonNet.JsonReader,System.Type,System.Object)">
            <summary>JSON 文字列から値を読み取ります。</summary>
            <param name="reader">JSON リーダー</param>
            <param name="objectType">オブジェクトタイプ</param>
            <param name="existedValue">既存の値</param>
            <returns></returns>
        </member>
        <member name="M:C1.JsonNet.Converters.HtmlColorConverter.CanConvert(System.Type)">
            <summary>型を変換できるかどうかを示すブール値。</summary>
            <param name="objectType">オブジェクトタイプ</param>
            <returns>型を変換できるかどうかを示すブール値</returns>
        </member>
        <member name="P:C1.JsonNet.Converters.HtmlColorConverter.Instance">
            <summary>
                <see cref="T:C1.JsonNet.Converters.HtmlColorConverter" />オブジェクトのインスタンスを取得します。</summary>
        </member>
        <member name="T:C1.JsonNet.JsonAttribute">
            <summary>JSON シリアライズとシリアライズ解除の属性を定義します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Serialization.C1NameAttribute">
            <summary>名前をカスタマイズするための基本属性を定義します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Serialization.C1NameAttribute.#ctor(System.String)">
            <summary>
                <see cref="T:C1.Web.Mvc.Serialization.C1NameAttribute" /> のインスタンスを作成します。</summary>
            <param name="name">指定された名前。</param>
        </member>
        <member name="P:C1.Web.Mvc.Serialization.C1NameAttribute.Name">
            <summary>名前を取得します。</summary>
        </member>
        <member name="M:C1.JsonNet.JsonAttribute.#ctor(System.Int32)">
            <summary>
                <see cref="T:C1.JsonNet.JsonAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
            <param name="order">シリアライズまたはシリアライズ解除の順序を示す <see cref="T:System.Int32" /> 値。</param>
        </member>
        <member name="M:C1.JsonNet.JsonAttribute.#ctor(System.Boolean)">
            <summary>
                <see cref="T:C1.JsonNet.JsonAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
            <param name="skipIfDefault">デフォルト値をシリアライズまたはシリアライズ解除するかどうかを示すフラグ。</param>
        </member>
        <member name="M:C1.JsonNet.JsonAttribute.#ctor(System.String)">
            <summary>
                <see cref="T:C1.JsonNet.JsonAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
            <param name="propertyName">シリアライズされるプロパティとして指定された名前。</param>
        </member>
        <member name="M:C1.JsonNet.JsonAttribute.#ctor(System.Boolean,System.Int32,System.String)">
            <summary>
                <see cref="T:C1.JsonNet.JsonAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
            <param name="skipIfDefault">デフォルト値をシリアライズまたはシリアライズ解除するかどうかを示すフラグ。</param>
            <param name="order">シリアライズまたはシリアライズ解除の順序を示す <see cref="T:System.Int32" /> 値。</param>
            <param name="propertyName">シリアライズされるプロパティとして指定された名前。</param>
        </member>
        <member name="P:C1.JsonNet.JsonAttribute.Order">
            <summary>シリアライズまたはシリアライズ解除の順序を示す値を取得します。</summary>
            <remarks>高い順序を持つプロパティの方が先にシリアライズまたはシリアライズ解除されます。</remarks>
        </member>
        <member name="P:C1.JsonNet.JsonAttribute.SkipIfDefault">
            <summary>デフォルト値をシリアライズまたはシリアライズ解除するかどうかを示す値を取得します。</summary>
        </member>
        <member name="P:C1.JsonNet.JsonAttribute.PropertyName">
            <summary>シリアライズされたプロパティ名を示す値を取得します。</summary>
        </member>
        <member name="T:C1.JsonNet.IgnoreAttribute">
            <summary>シリアライズしないプロパティを表す属性を定義します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Serialization.C1IgnoreAttribute">
            <summary>シリアライズまたはシリアライズ解除を無視するための基本属性を定義します。</summary>
        </member>
        <member name="T:C1.JsonNet.JsonConverterAttribute">
            <summary>メンバまたはクラスをシリアライズする際に、指定された <see cref="T:C1.JsonNet.JsonConverter" /> を使用するように <see cref="!:JsonSerializer" /> に指示します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Serialization.C1ConverterAttribute">
            <summary>メンバまたはクラスをシリアライズする際に、指定された <see cref="T:C1.Web.Mvc.Serialization.BaseConverter" /> を使用するように <see cref="T:C1.Web.Mvc.Serialization.C1ConverterAttribute" /> に指示します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Serialization.C1ConverterAttribute.#ctor(System.Type)">
            <summary>
                <see cref="T:C1.Web.Mvc.Serialization.C1ConverterAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
            <param name="converterType">コンバータのタイプ。</param>
        </member>
        <member name="M:C1.Web.Mvc.Serialization.C1ConverterAttribute.#ctor(System.Type,System.Object[])">
            <summary>
                <see cref="T:C1.Web.Mvc.Serialization.C1ConverterAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
            <param name="converterType">コンバータのタイプ。</param>
            <param name="converterParameters">JsonConverterの構築時に使用するパラメータリスト。nullを設定できます。</param>
        </member>
        <member name="P:C1.Web.Mvc.Serialization.C1ConverterAttribute.ConverterType">
            <summary>コンバータのタイプを取得します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Serialization.C1ConverterAttribute.ConverterParameters">
            <summary>ConverterTypeで記述されたJsonConverterの構築時に使用するパラメータリスト。
            nullの場合は、デフォルトコンストラクタが使用されます。</summary>
        </member>
        <member name="M:C1.JsonNet.JsonConverterAttribute.#ctor(System.Type)">
            <summary>
                <see cref="T:C1.JsonNet.JsonConverterAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
            <param name="converterType">コンバータのタイプ。</param>
        </member>
        <member name="M:C1.JsonNet.JsonConverterAttribute.#ctor(System.Type,System.Object[])">
            <summary>
                <see cref="T:C1.JsonNet.JsonConverterAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
            <param name="converterType">コンバータのタイプ。</param>
            <param name="converterParameters">JsonConverter の構築時に使用するパラメータリスト。null を設定できます。</param>
        </member>
        <member name="T:C1.JsonNet.CollectionItemTypeAttribute">
            <summary>コレクションの項目タイプを指定する属性を定義します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Serialization.C1CollectionItemConverterAttribute">
            <summary>コレクション項目コンバータを指定する属性を定義します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Serialization.C1CollectionItemConverterAttribute.#ctor(System.Type)">
            <summary>
                <see cref="T:C1.Web.Mvc.Serialization.C1CollectionItemConverterAttribute" /> のインスタンスを作成します。</summary>
            <param name="converterType">コンバータタイプ。</param>
        </member>
        <member name="M:C1.Web.Mvc.Serialization.C1CollectionItemConverterAttribute.#ctor(System.Type,System.Object[])">
            <summary>
                <see cref="T:C1.Web.Mvc.Serialization.C1CollectionItemConverterAttribute" /> のインスタンスを作成します。</summary>
            <param name="converterType">コンバータタイプ。</param>
            <param name="converterParameters">コンバータインスタンスの作成に使用されるパラメータ。</param>
        </member>
        <member name="M:C1.JsonNet.CollectionItemTypeAttribute.#ctor(System.Type,System.Type,System.Object[])">
            <summary>
                <see cref="T:C1.JsonNet.CollectionItemTypeAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
            <param name="collectionItemType">項目タイプ</param>
            <param name="itemConverterType">項目のコンバータタイプ</param>
            <param name="itemConverterParameters">項目コンバータの構築時に使用するパラメータリスト</param>
        </member>
        <member name="M:C1.JsonNet.CollectionItemTypeAttribute.#ctor(System.Type,System.Object[])">
            <summary>
                <see cref="T:C1.JsonNet.CollectionItemTypeAttribute" />のインスタンスを作成します。</summary>
            <param name="itemConverterType">コンバータタイプ。</param>
            <param name="itemConverterParameters">コンバータの作成に使用されるパラメータ。</param>
        </member>
        <member name="M:C1.JsonNet.CollectionItemTypeAttribute.#ctor(System.Type)">
            <summary>
                <see cref="T:C1.JsonNet.CollectionItemTypeAttribute" />のインスタンスを作成します。</summary>
            <param name="itemConverterType">コンバータタイプ。</param>
        </member>
        <member name="P:C1.JsonNet.CollectionItemTypeAttribute.CollectionItemType">
            <summary>項目のタイプを取得します。</summary>
        </member>
        <member name="P:C1.JsonNet.CollectionItemTypeAttribute.ItemConverterType">
            <summary>項目のコンバータタイプを取得します。</summary>
        </member>
        <member name="P:C1.JsonNet.CollectionItemTypeAttribute.ItemConverterParameters">
            <summary>
                <see cref="P:C1.JsonNet.CollectionItemTypeAttribute.ItemConverterType" /> で記述された JsonConverter の構築時に使用するパラメータリストを取得します。
            null の場合は、デフォルトコンストラクタが使用されます。</summary>
        </member>
        <member name="T:C1.JsonNet.JsonHelper">
            <summary>シリアライズまたはシリアライズ解除のためのユーティリティメソッドを定義します。</summary>
        </member>
        <member name="M:C1.JsonNet.JsonHelper.SerializeObject(System.Object,C1.JsonNet.JsonSetting)">
            <summary>
                <see cref="T:C1.JsonNet.JsonSetting" /> を使用して、指定されたオブジェクトを JSON 文字列にシリアライズします。</summary>
            <param name="obj">シリアライズするオブジェクト。</param>
            <param name="js">オブジェクトのシリアライズに使用される <see cref="T:C1.JsonNet.JsonSetting" />。
            これが null の場合は、デフォルトのシリアライズ設定が使用されます。</param>
            <returns>オブジェクトの JSON 文字列表現。</returns>
        </member>
        <member name="M:C1.JsonNet.JsonHelper.SerializeObject(System.Object,System.Collections.Generic.IList{C1.JsonNet.JsonConverter})">
            <summary>
                <see cref="T:C1.JsonNet.JsonConverter" /> のコレクションを使用して、指定されたオブジェクトを JSON 文字列にシリアライズします。</summary>
            <param name="obj">シリアライズするオブジェクト。</param>
            <param name="jsCters">
                <see cref="T:C1.JsonNet.JsonConverter" /> のコレクション。</param>
            <returns>オブジェクトの JSON 文字列表現。</returns>
        </member>
        <member name="M:C1.JsonNet.JsonHelper.SerializeObject(System.Object,C1.JsonNet.JsonResolver)">
            <summary>
                <see cref="T:C1.JsonNet.JsonResolver" /> を使用して、指定されたオブジェクトを JSON 文字列にシリアライズします。</summary>
            <param name="obj">シリアライズするオブジェクト。</param>
            <param name="resolver">
                <see cref="T:C1.JsonNet.JsonResolver" /> のオブジェクト</param>
            <returns>オブジェクトの JSON 文字列表現。</returns>
        </member>
        <member name="M:C1.JsonNet.JsonHelper.DeserializeObject``1(System.String,C1.JsonNet.JsonSetting)">
            <summary>
                <see cref="T:C1.JsonNet.JsonSetting" /> を使用して、JSON を指定された .NET タイプにシリアライズ解除します。</summary>
            <typeparam name="T">シリアライズ解除先のオブジェクトのタイプ。</typeparam>
            <param name="strJson">シリアライズ解除するオブジェクト。</param>
            <param name="js">オブジェクトのシリアライズ解除に使用される <see cref="T:C1.JsonNet.JsonSetting" />。
            これが null の場合は、デフォルトのシリアライズ設定が使用されます。</param>
            <returns>JSON 文字列からシリアライズ解除されたオブジェクト。</returns>
        </member>
        <member name="M:C1.JsonNet.JsonHelper.DeserializeObject(System.String,C1.JsonNet.JsonSetting)">
            <summary>
                <see cref="T:C1.JsonNet.JsonSetting" /> を使用して、JSON を指定された .NET タイプにシリアライズ解除します。</summary>
            <param name="strJson">シリアライズ解除するオブジェクト。</param>
            <param name="js">オブジェクトのシリアライズ解除に使用される <see cref="T:C1.JsonNet.JsonSetting" />。
            これが null の場合は、デフォルトのシリアライズ設定が使用されます。</param>
            <returns>JSON 文字列からシリアライズ解除されたオブジェクト。</returns>
        </member>
        <member name="M:C1.JsonNet.JsonHelper.DeserializeObject(System.String,System.Type,C1.JsonNet.JsonSetting)">
            <summary>
                <see cref="T:C1.JsonNet.JsonSetting" /> を使用して、JSON を指定されたタイプにシリアライズ解除します。</summary>
            <param name="strJson">シリアライズ解除するオブジェクト。</param>
            <param name="type">シリアライズ解除される JSON のタイプ。</param>
            <param name="js">オブジェクトのシリアライズ解除に使用される <see cref="T:C1.JsonNet.JsonSetting" />。
            これが null の場合は、デフォルトのシリアライズ設定が使用されます。</param>
            <returns>JSON 文字列からシリアライズ解除されたオブジェクト。</returns>
        </member>
        <member name="T:C1.JsonNet.JsonReader">
            <summary>シリアライズされた JSON データへのアクセスを提供するリーダーを表します。</summary>
        </member>
        <member name="T:C1.JsonNet.IJsonOperation">
            <summary>JSON操作のインタフェースを定義します。</summary>
        </member>
        <member name="P:C1.JsonNet.IJsonOperation.JsonSetting">
            <summary>JSON設定を取得します。</summary>
        </member>
        <member name="M:C1.JsonNet.JsonReader.#ctor(System.IO.TextReader,C1.JsonNet.JsonSetting)">
            <summary>JsonReaderクラスの新しいインスタンスを初期化します。</summary>
            <param name="reader">テキストリーダー。</param>
            <param name="setting">JSON設定。</param>
        </member>
        <member name="M:C1.JsonNet.JsonReader.ReadValue``1">
            <summary>テキストを T によって表される指定されたタイプのインスタンスにシリアライズ解除します。</summary>
            <typeparam name="T">オブジェクトタイプ</typeparam>
            <returns>T のインスタンス</returns>
        </member>
        <member name="M:C1.JsonNet.JsonReader.ReadValue(System.Type)">
            <summary>テキストを指定されたタイプのインスタンスにシリアライズ解除します。</summary>
            <param name="type">指定されたタイプ</param>
            <returns>指定されたタイプのインスタンス。</returns>
        </member>
        <member name="M:C1.JsonNet.JsonReader.ReadName(System.String)">
            <summary>指定された名前に従って、データからフィールドを読み取ります</summary>
            <param name="name">読み取るフィールドとして指定された名前。</param>
            <returns>フィールドの読み取りが成功した場合は true。そうでない場合は、そのフィールドがデータに存在しません。</returns>
        </member>
        <member name="M:C1.JsonNet.JsonReader.ReadJsonValue">
            <summary>JSON 文字列から直接単純な値を読み取ります。</summary>
            <returns>ハッシュテーブル、文字列、数値、ブール値、null、配列、日時、または例外</returns>
        </member>
        <member name="M:C1.JsonNet.JsonReader.Dispose">
            <summary>使用されたすべてのリソースを破棄します。</summary>
        </member>
        <member name="P:C1.JsonNet.JsonReader.Current">
            <summary>シリアライズ解除する必要がある現在の値を取得または設定します。</summary>
            <remarks>これは、<see cref="T:System.Collections.ArrayList" />、<see cref="T:System.Collections.Hashtable" />、<see cref="T:System.DateTime" />、
            <see cref="T:System.String" />、<see cref="T:System.Boolean" />、<see cref="T:System.Int32" />、
            <see cref="T:System.Double" />、null のいずれかです。</remarks>
        </member>
        <member name="P:C1.JsonNet.JsonReader.JsonSetting">
            <summary>JSON設定を取得します。</summary>
        </member>
        <member name="T:C1.JsonNet.JsonResolver">
            <summary>JSONリゾルバーのクラスを定義します。</summary>
        </member>
        <member name="M:C1.JsonNet.JsonResolver.CanResolve(System.String,System.Object,System.Type,C1.Web.Mvc.Serialization.IContext)">
            <summary>オブジェクトがこのリゾルバーを使用できるかどうかを決定します。</summary>
            <param name="name">オブジェクトの名前。</param>
            <param name="value">オブジェクト値。</param>
            <param name="type">オブジェクトタイプ。</param>
            <param name="context">コンテキスト。</param>
            <returns>解決されるかどうかを示す<see cref="T:System.Boolean" />値。
             trueの場合は、オブジェクトを解決できます。
             そうでない場合、リゾルバーはこのオブジェクトをサポートできません。</returns>
        </member>
        <member name="M:C1.JsonNet.JsonResolver.ResolvePropertyName(System.String,System.Object,System.Type,C1.Web.Mvc.Serialization.IContext)">
            <summary>解決後の名前を取得します。</summary>
            <param name="name">オブジェクトの名前。</param>
            <param name="value">オブジェクト値。</param>
            <param name="type">オブジェクトタイプ。</param>
            <param name="context">コンテキスト。</param>
            <returns>文字列。</returns>
        </member>
        <member name="M:C1.JsonNet.JsonResolver.ResolveConverter(System.String,System.Object,System.Type,C1.Web.Mvc.Serialization.IContext)">
            <summary>このリゾルバーのコンバータを取得します。</summary>
            <param name="name">オブジェクトの名前。</param>
            <param name="value">オブジェクト値。</param>
            <param name="type">オブジェクトタイプ。</param>
            <param name="context">コンテキスト。</param>
            <returns>コンバータ。</returns>
        </member>
        <member name="M:C1.JsonNet.JsonResolver.CanResolve(System.String,System.Object,System.Type)">
            <summary>指定されたオブジェクトをシリアライズまたはシリアライズ解除できるかどうかを取得します。</summary>
            <param name="name">プロパティ名。</param>
            <param name="value">オブジェクトの値。</param>
            <param name="type">オブジェクトの型。</param>
            <returns>解決されるかどうかを示す<see cref="T:System.Boolean" />値。
             trueの場合、オブジェクトはシリアライズまたはシリアライズ解除できます。
             そうでない場合、オブジェクトはシリアライズまたはシリアライズ解除をサポートしていません。</returns>
        </member>
        <member name="M:C1.JsonNet.JsonResolver.ResolvePropertyName(System.String)">
            <summary>シリアライズ解除のプロパティ名を取得します。</summary>
            <param name="name">指定されたプロパティ名前。</param>
            <returns></returns>
        </member>
        <member name="M:C1.JsonNet.JsonResolver.ResovleJsonConverter(System.String,System.Object,System.Type)">
            <summary>シリアライズ解除に使用されるコンバータを取得します。</summary>
            <param name="name">プロパティ名。</param>
            <param name="value">オブジェクトの値。</param>
            <param name="objectType">オブジェクトの型。</param>
            <returns>コンバータ。</returns>
        </member>
        <member name="T:C1.JsonNet.JsonSetting">
            <summary>シリアライズおよびシリアライズ解除設定を表します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Serialization.BaseSetting">
            <summary>設定のクラスを定義します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Serialization.ISetting">
            <summary>設定のインタフェースを定義します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Serialization.ISetting.Converters">
            <summary>コンバータコレクションを取得します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Serialization.ISetting.Resolvers">
            <summary>リゾルバーコレクションを取得します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Serialization.BaseSetting.Converters">
            <summary>コンバータコレクションを取得します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Serialization.BaseSetting.Resolvers">
            <summary>リゾルバーコレクションを取得します。</summary>
        </member>
        <member name="M:C1.JsonNet.JsonSetting.#ctor">
            <summary>
                <see cref="T:C1.JsonNet.JsonSetting" /> クラスの新しいインスタンスを初期化します。</summary>
        </member>
        <member name="P:C1.JsonNet.JsonSetting.IsPropertyNameCamel">
            <summary>プロパティ名をキャメルケースでシリアライズするかどうかを示すブール値を取得または設定します。</summary>
        </member>
        <member name="P:C1.JsonNet.JsonSetting.SkipIsDefault">
            <summary>デフォルト値をシリアライズまたはシリアライズ解除する方法を示す値を取得または設定します。
            デフォルト値をシリアライズまたはシリアライズ解除しない場合は true。
            そうでない場合は、シリアライズまたはシリアライズ解除されます。</summary>
        </member>
        <member name="P:C1.JsonNet.JsonSetting.IsJavascriptFormat">
            <summary>JavaScript 形式にシリアライズするかどうかを示す値を取得または設定します。</summary>
            <remarks>あるプロパティタイプが、サーバー側では文字列だが、クライアント側では Function である場合、
            IsJavascriptFormat が true に設定されていれば、それは引用符なしの文字列にシリアライズされます。
            たとえば、プロパティ A の値が "btnClick" の場合は、"{a: btnClick}" にシリアライズされます。
            これが true でない場合は、"{a: 'btnClick'}" にシリアライズされます。
            通常、ページが初めて読み込まれ、プロパティがクライアント側に転送されるときは、このプロパティを true に設定する必要があります。
            コールバックの場合、これは false に設定されます。</remarks>
        </member>
        <member name="P:C1.JsonNet.JsonSetting.SkipReferenceLoop">
            <summary>循環参照を処理する方法を示す値を取得または設定します。</summary>
            <remarks>オブジェクトには循環参照が含まれる場合があります（自分自身を参照するクラスなど）。
            デフォルトはtrueです。その場合、循環参照が発生するメンバはシリアライズされません。</remarks>
        </member>
        <member name="P:C1.JsonNet.JsonSetting.Resolver">
            <summary>リゾルバーを取得または設定します。</summary>
        </member>
        <member name="T:C1.JsonNet.JsonWriter">
            <summary>オブジェクトをJSONテキストにシリアライズします。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Serialization.BaseWriter">
            <summary>ライタの基本クラスを定義します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Serialization.BaseWriter.#ctor(C1.Web.Mvc.Serialization.IContext,C1.Web.Mvc.Serialization.IAttributeHelper,System.IO.TextWriter)">
            <summary>
                <see cref="T:C1.Web.Mvc.Serialization.BaseWriter" />のインスタンスを作成します。</summary>
            <param name="context">コンテキストオブジェクト。</param>
            <param name="helper">属性ヘルパーインスタンス。</param>
            <param name="writer">ライタ。</param>
        </member>
        <member name="M:C1.Web.Mvc.Serialization.BaseWriter.WriteText(System.String)">
            <summary>テキスト値を書き込みます。</summary>
            <param name="value">テキスト値。</param>
        </member>
        <member name="M:C1.Web.Mvc.Serialization.BaseWriter.WriteObject(System.Object,C1.Web.Mvc.Serialization.BaseConverter)">
            <summary>オブジェクトを書き込みます。</summary>
            <param name="value">書き込まれるオブジェクト。</param>
            <param name="converter">書き込みに使用されるコンバータ。</param>
        </member>
        <member name="M:C1.Web.Mvc.Serialization.BaseWriter.WriteRawCollectionItem(System.Object,System.Object,System.Object)">
            <summary>コンバータなしでコレクション項目を書き込みます。</summary>
        </member>
        <member name="M:C1.JsonNet.JsonWriter.#ctor(System.IO.TextWriter,C1.JsonNet.JsonSetting)">
            <summary>JsonWriterクラスの新しいインスタンスを初期化します。</summary>
            <param name="writer">出力テキストライタ。</param>
            <param name="setting">シリアライズの設定。</param>
        </member>
        <member name="M:C1.JsonNet.JsonWriter.WriteRawValue(System.String)">
            <summary>テキストをシリアライズします。</summary>
            <param name="value">指定されたテキスト。</param>
        </member>
        <member name="M:C1.JsonNet.JsonWriter.WriteValue(System.Object,System.Boolean)">
            <summary>指定されたオブジェクトをシリアライズします。</summary>
            <param name="obj">指定されたオブジェクト。</param>
            <param name="useConverter">シリアライズにコンバータを使用するかどうかを示す<see cref="T:System.Boolean" />値。</param>
        </member>
        <member name="M:C1.JsonNet.JsonWriter.StartObjectScope(System.Object)">
            <summary>新しいオブジェクトのスコープを開始します。</summary>
            <param name="obj">指定されたオブジェクト。</param>
        </member>
        <member name="M:C1.JsonNet.JsonWriter.StartArrayScope(System.Object)">
            <summary>配列のスコープを開始します。</summary>
            <param name="arr">指定された配列。</param>
        </member>
        <member name="M:C1.JsonNet.JsonWriter.EndScope">
            <summary>スコープを終了します。</summary>
        </member>
        <member name="M:C1.JsonNet.JsonWriter.WriteName(System.String)">
            <summary>プロパティの名前をシリアライズします。</summary>
            <param name="name">指定された名前。</param>
        </member>
        <member name="M:C1.JsonNet.JsonWriter.WriteRawName(System.String)">
            <summary>プロパティの名前をシリアライズします。</summary>
            <param name="name">指定された名前。</param>
        </member>
        <member name="M:C1.JsonNet.JsonWriter.CheckReferenceLoop(System.Object,System.Object)">
            <summary>指定されたオブジェクトに循環参照があるかどうかを確認します。</summary>
            <returns>指定されたオブジェクトに循環参照がある場合はtrue、そうでない場合はfalse。</returns>
        </member>
        <member name="P:C1.JsonNet.JsonWriter.JsonSetting">
            <summary>JSON設定を取得します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Serialization.IAttributeHelper">
            <summary>属性の取得に使用される属性ヘルパーのインタフェースを定義します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Serialization.IAttributeHelper.GetConverterAttribute(System.Object,System.Object)">
            <summary>コンバータの属性を取得します。</summary>
            <param name="memberInfo">メンバ情報。</param>
            <param name="value">メンバ値。</param>
            <returns>
                <see cref="T:C1.Web.Mvc.Serialization.C1ConverterAttribute" />のインスタンスを返します。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Serialization.IAttributeHelper.GetNameAttribute(System.Object,System.Object)">
            <summary>名前の属性を取得します。</summary>
            <param name="memberInfo">メンバ情報。</param>
            <param name="value">メンバ値。</param>
            <returns>
                <see cref="T:C1.Web.Mvc.Serialization.C1NameAttribute" />のインスタンスを返します。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Serialization.IAttributeHelper.GetCollectionItemConverterAttribute(System.Object,System.Object)">
            <summary>コレクション項目コンバータの属性を取得します。</summary>
            <param name="memberInfo">メンバ情報。</param>
            <param name="collection">コレクション値。</param>
            <returns>
                <see cref="T:C1.Web.Mvc.Serialization.C1CollectionItemConverterAttribute" />のインスタンスを返します。</returns>
        </member>
        <member name="T:C1.JsonNet.JsonOperation">
            <summary>シリアライズまたはシリアライズ解除のための基本クラスを定義します。</summary>
        </member>
        <member name="M:C1.JsonNet.JsonOperation.#ctor(C1.JsonNet.JsonSetting)">
            <summary>JsonOperationクラスの新しいインスタンスを初期化します。</summary>
            <param name="setting">JSON設定。</param>
        </member>
        <member name="M:C1.JsonNet.JsonOperation.Dispose">
            <summary>現在のインスタンスを破棄します。</summary>
        </member>
        <member name="P:C1.JsonNet.JsonOperation.JsonSetting">
            <summary>JSON設定を取得します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.C1WebMvcController">
            <summary>C1 Web MVC コントロール用のコントローラ。</summary>
        </member>
        <member name="M:C1.Web.Mvc.C1WebMvcController.WebResources(System.String)">
            <summary>指定されたキーに基づいて C1 Web MVC コントロールの js リソースと css リソースを取得します。</summary>
            <param name="r">リソースのキー。</param>
            <returns>リソース</returns>
        </member>
        <member name="T:C1.Web.Mvc.Serialization.IContext">
            <summary>コンテキスト情報に使用されるインタフェースを定義します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Serialization.IContext.Setting">
            <summary>設定を取得します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Serialization.IContext.ServiceProvider">
            <summary>サービスプロバイダを取得します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Serialization.BaseContext">
            <summary>コンテキストに使用されるクラスを定義します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Serialization.BaseContext.#ctor(C1.Web.Mvc.Serialization.ISetting,System.IServiceProvider)">
            <summary>
                <see cref="T:C1.Web.Mvc.Serialization.IContext" />のインスタンスを作成します。</summary>
            <param name="setting">設定オブジェクト。</param>
            <param name="serviceProvider">サービスプロバイダ。</param>
        </member>
        <member name="P:C1.Web.Mvc.Serialization.BaseContext.Setting">
            <summary>設定を取得します。</summary>
        </member>
        <member name="P:C1.Web.Mvc.Serialization.BaseContext.ServiceProvider">
            <summary>サービスプロバイダを取得します。</summary>
        </member>
        <member name="T:C1.Web.Mvc.Serialization.DefaultConverter">
            <summary>継承されたコンバータを削除するコンバータを定義します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Serialization.DefaultConverter.CanConvert(System.Type,C1.Web.Mvc.Serialization.IContext)">
            <summary>このインスタンスが指定されたオブジェクトタイプを変換できるかどうかを決定します。</summary>
            <param name="objectType">オブジェクトのタイプ。</param>
            <param name="context">コンテキスト情報。</param>
            <returns>このインスタンスが指定されたオブジェクトタイプを変換できる場合は <c>true</c>、そうでない場合は <c>false</c>。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Serialization.DefaultConverter.Write(C1.Web.Mvc.Serialization.BaseWriter,System.Object,C1.Web.Mvc.Serialization.IContext)">
            <summary>指定された値を書き込みます。</summary>
            <param name="writer">ライタ。</param>
            <param name="value">値。</param>
            <param name="context">コンテキスト。</param>
        </member>
        <member name="P:C1.Web.Mvc.Serialization.Scope.NeedNewLine">
            <summary>新しい行に書き込むかどうかを取得または設定します。</summary>
        </member>
        <member name="M:C1.Web.Mvc.Serialization.Utility.GetCreator``1(System.Type)">
            <summary>引数タイプで記述されたJsonConverterのインスタンスの作成に使用できるファクトリ関数を作成します。
              次に、返された関数を使用して、コンバータのデフォルトコンストラクタ、またはオブジェクト配列によって 
            任意のパラメータ付きコンストラクタを呼び出すことができます。</summary>
        </member>
        <member name="T:System.Web.Mvc.ControllerExtension">
            <summary>
                <see cref="T:System.Web.Mvc.Controller" /> for C1 MVCを拡張します。</summary>
        </member>
        <member name="M:System.Web.Mvc.ControllerExtension.C1EnableDeferredScripts(System.Web.Mvc.Controller,System.Boolean)">
            <summary>現在のコントローラーまたは現在のアクションの遅延スクリプト機能を有効または無効にします。</summary>
            <param name="controller">コントローラー。</param>
            <param name="enable">値。</param>
        </member>
        <member name="T:System.Web.Mvc.WebViewPageExtensions">
            <summary>
                <see cref="T:System.Web.Mvc.WebViewPage" /> for C1 MVCを拡張します。</summary>
        </member>
        <member name="M:System.Web.Mvc.WebViewPageExtensions.C1EnableDeferredScripts(System.Web.Mvc.WebViewPage,System.Boolean)">
            <summary>現在のビューページで遅延スクリプト機能を有効または無効にします。</summary>
            <param name="viewPage">ビューページ。</param>
            <param name="enable">値。</param>
        </member>
        <member name="P:C1.Web.Mvc.Control.OnClientRefreshed">
            <summary>
            コントロールがそのコンテンツをリフレッシュした後に発生します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Control.OnClientRefreshing">
            <summary>
            コントロールがそのコンテンツをリフレッシュしようとしたときに発生します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.BaseCollectionViewService`1.ShowDatesAsGmt">
            <summary>
            日付を、ローカル日付ではなく GMT の外観に合わせて調整するかどうかを決定する値を取得または設定します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.AutoComplete`1.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            ライタにコントロールまたはコールバック結果をレンダリングします。
            </summary>
            <param name="writer">HTML ライタ。</param>
        </member>
        <member name="T:C1.Web.Mvc.DashboardLayout">
            <summary>
            多数のビューおよび関連情報を 1 つの場所に集約した表示です。さまざまなデータを同時に比較および監視するために使用されます。多様なデータビューがすべて一度に表示されます。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.DashboardLayout.GetLayout``1(C1.Web.Mvc.DashboardLayout,System.Web.Mvc.HtmlHelper)">
            <summary>
                <see cref="T:C1.Web.Mvc.LayoutBase" /> のインスタンスを作成します。</summary>
            <typeparam name="TLayout">作成されるレイアウトのタイプ。</typeparam>
            <param name="dashboard">レイアウトが適用される <see cref="T:C1.Web.Mvc.DashboardLayout" /> コントロール。</param>
            <param name="helper">ヘルパーオブジェクト。</param>
            <returns>作成されたインスタンス。</returns>
        </member>
        <member name="M:C1.Web.Mvc.DashboardLayout.RegisterStartupScript(System.Web.UI.HtmlTextWriter)">
            <summary>
            起動スクリプトを登録します。
            </summary>
            <param name="writer">起動スクリプトの書き込みに使用される指定されたライタ。</param>
        </member>
        <member name="M:C1.Web.Mvc.DashboardLayout.CreateChildComponents">
            <summary>
            子コンポーネントの作成を保証します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.DashboardLayout.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            1 つの <see cref="T:C1.Web.Mvc.DashboardLayout" /> インスタンスを作成します。
            </summary>
            <param name="helper">HTML ヘルパー</param>
            <param name="selector">セレクタ</param>
        </member>
        <member name="P:C1.Web.Mvc.DashboardLayout.Layout">
            <summary>
            適用されるレイアウトを取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.DashboardLayout.AllowDrag">
            <summary>
            タイルをドラッグできるかどうかを決定する Boolean 値を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.DashboardLayout.AllowResize">
            <summary>
            タイルのサイズを変更できるかどうかを決定する Boolean 値を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.DashboardLayout.OnClientFormatTile">
            <summary>
            タイルを表す要素が作成されたときに発生します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.DashboardLayout.OnClientTileActivated">
            <summary>
            タイルがアクティブ化されたときに発生します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.DashboardLayout.OnClientTileSizeChanged">
            <summary>
            タイルが最大化されたとき、または復元されたときに発生します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.DashboardLayout.LayoutId">
            <summary>
            適用されるレイアウトの ID を取得または設定します。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.LayoutBase">
            <summary>
            レイアウトの基本クラスを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.LayoutBase.#ctor(System.Web.Mvc.HtmlHelper)">
            <summary>
            1 つの LayoutBase インスタンスを作成します。
            </summary>
            <param name="helper">HTML ヘルパー</param>
        </member>
        <member name="P:C1.Web.Mvc.LayoutBase.UniqueId">
            <summary>
            コントロールの一意 ID を表す値を取得します。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.TabPanel">
            <summary>
            ビュー間、データセット間、またはアプリケーションの機能面での切り替えなど、高レベルでのコンテンツ編成を可能にするコントロールを定義します。
            </summary>
            <remarks>
            タブは、関連するコンテンツの上に単一行で示されます。タブヘッダーは、そのコンテンツを簡潔に記述します。タブは、マウスまたはキーボードで選択することができます。また、現在の選択を反映して自動的にコンテンツが更新されます。
            </remarks>
        </member>
        <member name="M:C1.Web.Mvc.TabPanel.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            1 つの <see cref="T:C1.Web.Mvc.TabPanel" /> インスタンスを作成します。
            </summary>
            <param name="helper">HTML ヘルパー</param>
            <param name="selector">セレクタ</param>
        </member>
        <member name="P:C1.Web.Mvc.TabPanel.AutoSwitch">
            <summary>
            矢印キーを使用してタブを選択したときに、コントロールが自動的にタブを切り替えるかどうかを決定する値を取得または設定します。
            </summary>
            <remarks>
            AutoSwitch を true に設定すると（デフォルト値）、矢印キーを押したときにタブが自動的に切り替わります。［Tab］キーを押すと、選択されていないタブヘッダーを除いて、タブシーケンス内の次の要素が選択されます。AutoSwitch を false に設定すると、矢印キーまたは［Tab］キーを押したときにフォーカスが次のタブヘッダーまたは前のタブヘッダーに移動しますが、タブは切り替わりません。フォーカスがあるタブをアクティブ化するには、［Enter］キーまたはスペースキーを押す必要があります。
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.TabPanel.IsAnimated">
            <summary>
            タブの変更をフェードインエフェクトでアニメーションするかどうかを決定する値を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.TabPanel.SelectedIndex">
            <summary>
            現在選択されている（アクティブな）タブのインデックスを取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.TabPanel.Tabs">
            <summary>
            Tab オブジェクトのコレクションを取得します。TabPanel コントロールのコンテンツは、Tab オブジェクトの Tab.header プロパティおよび Tab.pane プロパティによって決まります。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.TabPanel.OnClientSelectedIndexChanged">
            <summary>
            selectedIndex プロパティの値が変化すると発生します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BaseCollectionViewServiceBuilder`3.ShowDatesAsGmt(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.BaseCollectionViewService`1.ShowDatesAsGmt" /> を構成します。
            日付を、ローカル日付ではなく GMT の外観に合わせて調整するかどうかを決定する値を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilder`2.OnClientRefreshed(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.Control.OnClientRefreshed" /> クライアントイベントを構成します。
            コントロールがそのコンテンツをリフレッシュした後に発生します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilder`2.OnClientRefreshing(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.Control.OnClientRefreshing" /> クライアントイベントを構成します。
            コントロールがそのコンテンツをリフレッシュしようとしたときに発生します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartBaseBuilder`3.Legend(System.Action{C1.Web.Mvc.Fluent.ChartLegendBuilder})">
            <summary>
                <see cref="P:C1.Web.Mvc.FlexChartBase`1.Legend" /> を構成します。
            チャートの凡例を設定します。
            </summary>
            <param name="build">ビルダ関数。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.AutoGridLayoutBuilder">
            <summary>
                <see cref="T:C1.Web.Mvc.AutoGridLayout" /> を構成するためのビルダを定義します。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.GridLayoutBuilder`2">
            <summary>
                <see cref="T:C1.Web.Mvc.GridLayout" /> を構成するためのビルダを定義します。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.LayoutBaseBuilder`2">
            <summary>
                <see cref="T:C1.Web.Mvc.LayoutBase" /> を構成するためのビルダを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.LayoutBaseBuilder`2.#ctor(`0)">
            <summary>
                <paramref name="service" /> を構成するために 1 つの <see cref="T:C1.Web.Mvc.Fluent.LayoutBaseBuilder`2" /> インスタンスを作成します。
            </summary>
            <param name="service">構成する <see cref="T:C1.Web.Mvc.Service" /> オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.GridLayoutBuilder`2.#ctor(`0)">
            <summary>
                <paramref name="service" /> を構成するために 1 つの <see cref="T:C1.Web.Mvc.Fluent.GridLayoutBuilder`2" /> インスタンスを作成します。
            </summary>
            <param name="service">構成する <see cref="T:C1.Web.Mvc.Service" /> オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.GridLayoutBuilder`2.CellSize(System.Int32)">
            <summary>
                <see cref="P:C1.Web.Mvc.GridLayout.CellSize" /> を構成します。
            グリッドレイアウト内のセルのサイズを設定します。ピクセル単位で行います。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.GridLayoutBuilder`2.CellSpacing(System.Int32)">
            <summary>
                <see cref="P:C1.Web.Mvc.GridLayout.CellSpacing" /> を構成します。
            グリッドレイアウト内のセルの間隔を設定します。ピクセル単位で行います。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.GridLayoutBuilder`2.GroupSpacing(System.Int32)">
            <summary>
                <see cref="P:C1.Web.Mvc.GridLayout.GroupSpacing" /> を構成します。
            グリッドレイアウト内のグループの間隔を設定します。ピクセル単位で行います。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.GridLayoutBuilder`2.MaxRowsOrColumns(System.Int32)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.GridLayout.MaxRowsOrColumns" />.
            Sets the maximum number of the row count or the column count.
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.GridLayoutBuilder`2.Orientation(C1.Web.Mvc.LayoutOrientation)">
            <summary>
                <see cref="P:C1.Web.Mvc.GridLayout.Orientation" /> を構成します。
            レイアウトの向きを設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AutoGridLayoutBuilder.Items(System.Action{C1.Web.Mvc.Fluent.ListItemFactory{C1.Web.Mvc.AutoGridGroup,C1.Web.Mvc.Fluent.AutoGridGroupBuilder}})">
            <summary>
                <see cref="P:C1.Web.Mvc.AutoGridLayout.Items" /> を設定します。
            </summary>
            <param name="builder">ビルダアクション。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AutoGridLayoutBuilder.#ctor(C1.Web.Mvc.AutoGridLayout)">
            <summary>
                <paramref name="component" /> を構成するために 1 つの <see cref="T:C1.Web.Mvc.Fluent.AutoGridLayoutBuilder" /> インスタンスを作成します。
            </summary>
            <param name="component">構成する <see cref="T:C1.Web.Mvc.AutoGridLayout" /> オブジェクト。</param>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.AutoGridGroupBuilder">
            <summary>
                <see cref="T:C1.Web.Mvc.AutoGridGroup" /> を構成するためのビルダを定義します。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.GroupBuilder`2">
            <summary>
                <see cref="T:C1.Web.Mvc.Group" /> を構成するためのビルダを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.GroupBuilder`2.#ctor(`0)">
            <summary>
                <paramref name="obj" /> を構成するために 1 つの <see cref="T:C1.Web.Mvc.Fluent.GroupBuilder`2" /> インスタンスを作成します。
            </summary>
            <param name="obj">構成する<see cref="T:C1.Web.Mvc.Group" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AutoGridGroupBuilder.Children(System.Action{C1.Web.Mvc.Fluent.ListItemFactory{C1.Web.Mvc.AutoGridTile,C1.Web.Mvc.Fluent.AutoGridTileBuilder}})">
            <summary>
                <see cref="P:C1.Web.Mvc.AutoGridGroup.Children" /> を設定します。
            </summary>
            <param name="builder">ビルダアクション。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AutoGridGroupBuilder.#ctor(C1.Web.Mvc.AutoGridGroup)">
            <summary>
                <paramref name="obj" /> を構成するために 1 つの <see cref="T:C1.Web.Mvc.Fluent.AutoGridGroupBuilder" /> インスタンスを作成します。
            </summary>
            <param name="obj">構成する <see cref="T:C1.Web.Mvc.AutoGridGroup" /> オブジェクト。</param>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.DashboardLayoutBuilder">
            <summary>
                <see cref="T:C1.Web.Mvc.DashboardLayout" /> を構成するためのビルダを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DashboardLayoutBuilder.AttachFlowLayout(System.Action{C1.Web.Mvc.Fluent.FlowLayoutBuilder})">
            <summary>
                <see cref="P:C1.Web.Mvc.DashboardLayout.Layout" /> を構成します。
            ダッシュボードコントロールに <see cref="T:C1.Web.Mvc.FlowLayout" /> をアタッチします。
            </summary>
            <param name="builder">レイアウトを構成するためのビルダ。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DashboardLayoutBuilder.AttachSplitLayout(System.Action{C1.Web.Mvc.Fluent.SplitLayoutBuilder})">
            <summary>
                <see cref="P:C1.Web.Mvc.DashboardLayout.Layout" /> を構成します。
            ダッシュボードコントロールに <see cref="T:C1.Web.Mvc.SplitLayout" /> をアタッチします。
            </summary>
            <param name="builder">レイアウトを構成するためのビルダ。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DashboardLayoutBuilder.AttachAutoGridLayout(System.Action{C1.Web.Mvc.Fluent.AutoGridLayoutBuilder})">
            <summary>
                <see cref="P:C1.Web.Mvc.DashboardLayout.Layout" /> を構成します。
            ダッシュボードコントロールに <see cref="T:C1.Web.Mvc.AutoGridLayout" /> をアタッチします。
            </summary>
            <param name="builder">レイアウトを構成するためのビルダ。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DashboardLayoutBuilder.AttachManualGridLayout(System.Action{C1.Web.Mvc.Fluent.ManualGridLayoutBuilder})">
            <summary>
                <see cref="P:C1.Web.Mvc.DashboardLayout.Layout" /> を構成します。
            ダッシュボードコントロールに <see cref="T:C1.Web.Mvc.ManualGridLayout" /> をアタッチします。
            </summary>
            <param name="builder">レイアウトを構成するためのビルダ。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DashboardLayoutBuilder.#ctor(C1.Web.Mvc.DashboardLayout)">
            <summary>
                <paramref name="component" /> を構成するために 1 つの <see cref="T:C1.Web.Mvc.Fluent.DashboardLayoutBuilder" /> インスタンスを作成します。
            </summary>
            <param name="component">構成する <see cref="T:C1.Web.Mvc.DashboardLayout" /> オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DashboardLayoutBuilder.AllowDrag(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.DashboardLayout.AllowDrag" /> を構成します。
            タイルをドラッグできるかどうかを決定する Boolean 値を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DashboardLayoutBuilder.AllowResize(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.DashboardLayout.AllowResize" /> を構成します。
            タイルのサイズを変更できるかどうかを決定する Boolean 値を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DashboardLayoutBuilder.OnClientFormatTile(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.DashboardLayout.OnClientFormatTile" /> クライアントイベントを構成します。
            タイルを表す要素が作成されたときに発生します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DashboardLayoutBuilder.OnClientTileActivated(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.DashboardLayout.OnClientTileActivated" /> クライアントイベントを構成します。
            タイルがアクティブ化されたときに発生します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DashboardLayoutBuilder.OnClientTileSizeChanged(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.DashboardLayout.OnClientTileSizeChanged" /> クライアントイベントを構成します。
            タイルが最大化されたとき、または復元されたときに発生します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DashboardLayoutBuilder.LayoutId(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.DashboardLayout.LayoutId" /> を構成します。
            適用されるレイアウトの ID を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.FlowLayoutBuilder">
            <summary>
                <see cref="T:C1.Web.Mvc.FlowLayout" /> を構成するためのビルダを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlowLayoutBuilder.Items(System.Action{C1.Web.Mvc.Fluent.ListItemFactory{C1.Web.Mvc.FlowTile,C1.Web.Mvc.Fluent.FlowTileBuilder}})">
            <summary>
                <see cref="P:C1.Web.Mvc.FlowLayout.Items" /> を設定します。
            </summary>
            <param name="builder">ビルダアクション。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlowLayoutBuilder.#ctor(C1.Web.Mvc.FlowLayout)">
            <summary>
                <paramref name="component" /> を構成するために 1 つの <see cref="T:C1.Web.Mvc.Fluent.FlowLayoutBuilder" /> インスタンスを作成します。
            </summary>
            <param name="component">構成する <see cref="T:C1.Web.Mvc.FlowLayout" /> オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlowLayoutBuilder.Direction(C1.Web.Mvc.FlowDirection)">
            <summary>
                <see cref="P:C1.Web.Mvc.FlowLayout.Direction" /> を構成します。
            フローレイアウトの方向を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ManualGridLayoutBuilder">
            <summary>
                <see cref="T:C1.Web.Mvc.ManualGridLayout" /> を構成するためのビルダを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ManualGridLayoutBuilder.Items(System.Action{C1.Web.Mvc.Fluent.ListItemFactory{C1.Web.Mvc.ManualGridGroup,C1.Web.Mvc.Fluent.ManualGridGroupBuilder}})">
            <summary>
                <see cref="P:C1.Web.Mvc.ManualGridLayout.Items" /> を設定します。
            </summary>
            <param name="builder">ビルダアクション。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ManualGridLayoutBuilder.#ctor(C1.Web.Mvc.ManualGridLayout)">
            <summary>
                <paramref name="component" /> を構成するために 1 つの <see cref="T:C1.Web.Mvc.Fluent.ManualGridLayoutBuilder" /> インスタンスを作成します。
            </summary>
            <param name="component">構成する <see cref="T:C1.Web.Mvc.ManualGridLayout" /> オブジェクト。</param>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ManualGridGroupBuilder">
            <summary>
                <see cref="T:C1.Web.Mvc.ManualGridGroup" /> を構成するためのビルダを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ManualGridGroupBuilder.Children(System.Action{C1.Web.Mvc.Fluent.ListItemFactory{C1.Web.Mvc.ManualGridTile,C1.Web.Mvc.Fluent.ManualGridTileBuilder}})">
            <summary>
                <see cref="P:C1.Web.Mvc.ManualGridGroup.Children" /> を設定します。
            </summary>
            <param name="builder">ビルダアクション。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ManualGridGroupBuilder.#ctor(C1.Web.Mvc.ManualGridGroup)">
            <summary>
                <paramref name="obj" /> を構成するために 1 つの <see cref="T:C1.Web.Mvc.Fluent.ManualGridGroupBuilder" /> インスタンスを作成します。
            </summary>
            <param name="obj">構成する <see cref="T:C1.Web.Mvc.ManualGridGroup" /> オブジェクト。</param>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.SplitLayoutBuilder">
            <summary>
                <see cref="T:C1.Web.Mvc.SplitLayout" /> を構成するためのビルダを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SplitLayoutBuilder.Items(System.Action{C1.Web.Mvc.Fluent.SplitLayoutItemFactoryBuilder})">
            <summary>
                <see cref="P:C1.Web.Mvc.SplitLayout.Items" /> を設定します。
            </summary>
            <param name="builder">ビルダアクション。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SplitLayoutBuilder.#ctor(C1.Web.Mvc.SplitLayout)">
            <summary>
                <paramref name="component" /> を構成するために 1 つの <see cref="T:C1.Web.Mvc.Fluent.SplitLayoutBuilder" /> インスタンスを作成します。
            </summary>
            <param name="component">構成する <see cref="T:C1.Web.Mvc.SplitLayout" /> オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SplitLayoutBuilder.Orientation(C1.Web.Mvc.LayoutOrientation)">
            <summary>
                <see cref="P:C1.Web.Mvc.SplitLayout.Orientation" /> を構成します。
            レイアウトの向きを設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.SplitGroupBuilder">
            <summary>
                <see cref="T:C1.Web.Mvc.SplitGroup" /> を構成するためのビルダを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SplitGroupBuilder.Children(System.Action{C1.Web.Mvc.Fluent.SplitLayoutItemFactoryBuilder})">
            <summary>
                <see cref="P:C1.Web.Mvc.SplitGroup.Children" /> を設定します。
            </summary>
            <param name="builder">ビルダアクション。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SplitGroupBuilder.#ctor(C1.Web.Mvc.SplitGroup)">
            <summary>
                <paramref name="obj" /> を構成するために 1 つの <see cref="T:C1.Web.Mvc.Fluent.SplitGroupBuilder" /> インスタンスを作成します。
            </summary>
            <param name="obj">構成する <see cref="T:C1.Web.Mvc.SplitGroup" /> オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SplitGroupBuilder.Orientation(C1.Web.Mvc.LayoutOrientation)">
            <summary>
                <see cref="P:C1.Web.Mvc.SplitGroup.Orientation" /> を構成します。
            グループの向きを設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SplitGroupBuilder.Size(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.SplitGroup.Size" /> を構成します。
            タイルのサイズを設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.SplitLayoutItemFactoryBuilder">
            <summary>
            スプリットレイアウト内の項目を生成するためのビルダを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SplitLayoutItemFactoryBuilder.#ctor(System.Collections.Generic.IList{C1.Web.Mvc.ISplitLayoutItem})">
            <summary>
                <see cref="T:C1.Web.Mvc.Fluent.SplitLayoutItemFactoryBuilder" /> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="obj">オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SplitLayoutItemFactoryBuilder.AddTile(System.Action{C1.Web.Mvc.Fluent.SplitTileBuilder})">
            <summary>
                <see cref="T:C1.Web.Mvc.SplitTile" /> インスタンスを追加します。
            </summary>
            <param name="builder">追加するタイルを指定するためのビルダ。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SplitLayoutItemFactoryBuilder.AddTile">
            <summary>
                <see cref="T:C1.Web.Mvc.SplitTile" /> インスタンスを追加します。
            </summary>
            <returns>追加するタイルを指定するための <see cref="T:C1.Web.Mvc.Fluent.SplitTileBuilder" /> ビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SplitLayoutItemFactoryBuilder.AddGroup(System.Action{C1.Web.Mvc.Fluent.SplitGroupBuilder})">
            <summary>
                <see cref="T:C1.Web.Mvc.SplitGroup" /> インスタンスを追加します。
            </summary>
            <param name="builder">追加するグループを指定するためのビルダ。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SplitLayoutItemFactoryBuilder.AddGroup">
            <summary>
                <see cref="T:C1.Web.Mvc.SplitGroup" /> インスタンスを追加します。
            </summary>
            <returns>追加するグループを指定するための <see cref="T:C1.Web.Mvc.Fluent.SplitGroupBuilder" /> ビルダ。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.TabPanelBuilder">
            <summary>
                <see cref="T:C1.Web.Mvc.TabPanel" /> を構成するためのビルダを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TabPanelBuilder.Tabs(System.Action{C1.Web.Mvc.Fluent.ListItemFactory{C1.Web.Mvc.Tab,C1.Web.Mvc.Fluent.TabBuilder}})">
            <summary>
            Tabs プロパティを設定します。
            </summary>
            <param name="build">ビルドアクション。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TabPanelBuilder.#ctor(C1.Web.Mvc.TabPanel)">
            <summary>
                <paramref name="component" /> を構成するために 1 つの <see cref="T:C1.Web.Mvc.Fluent.TabPanelBuilder" /> インスタンスを作成します。
            </summary>
            <param name="component">構成する <see cref="T:C1.Web.Mvc.TabPanel" /> オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TabPanelBuilder.AutoSwitch(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.TabPanel.AutoSwitch" /> を構成します。
            矢印キーを使用してタブを選択したときに、コントロールが自動的にタブを切り替えるかどうかを決定する値を設定します。
            </summary>
            <remarks>
            AutoSwitch を true に設定すると（デフォルト値）、矢印キーを押したときにタブが自動的に切り替わります。［Tab］キーを押すと、選択されていないタブヘッダーを除いて、タブシーケンス内の次の要素が選択されます。AutoSwitch を false に設定すると、矢印キーまたは［Tab］キーを押したときにフォーカスが次のタブヘッダーまたは前のタブヘッダーに移動しますが、タブは切り替わりません。フォーカスがあるタブをアクティブ化するには、［Enter］キーまたはスペースキーを押す必要があります。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TabPanelBuilder.IsAnimated(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.TabPanel.IsAnimated" /> を構成します。
            タブの変更をフェードインエフェクトでアニメーションするかどうかを決定する値を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TabPanelBuilder.SelectedIndex(System.Int32)">
            <summary>
                <see cref="P:C1.Web.Mvc.TabPanel.SelectedIndex" /> を構成します。
            現在選択されている（アクティブな）タブのインデックスを設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TabPanelBuilder.OnClientSelectedIndexChanged(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.TabPanel.OnClientSelectedIndexChanged" /> クライアントイベントを構成します。
            selectedIndex プロパティの値が変化すると発生します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="P:C1.Web.Mvc.ChartLegend.Title">
            <summary>
            凡例のタイトルを決定する値を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartLegend.TitleAlign">
            <summary>
            凡例の配置を決定する値を取得または設定します。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.AutoGridLayout">
            <summary>
            自動グリッドレイアウトを表すクラスを定義します。自動グリッドレイアウトでは、タイルが重なることなく 1 つずつレンダリングされます。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.GridLayout">
            <summary>
            グリッドレイアウトを表す基本クラスを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.GridLayout.#ctor(System.Web.Mvc.HtmlHelper)">
            <summary>
            1 つの AutoGridLayout インスタンスを作成します。
            </summary>
            <param name="helper">HTML ヘルパー</param>
        </member>
        <member name="P:C1.Web.Mvc.GridLayout.CellSize">
            <summary>
            グリッドレイアウト内のセルのサイズを取得または設定します。ピクセル単位で行います。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.GridLayout.CellSpacing">
            <summary>
            グリッドレイアウト内のセルの間隔を取得または設定します。ピクセル単位で行います。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.GridLayout.GroupSpacing">
            <summary>
            グリッドレイアウト内のグループの間隔を取得または設定します。ピクセル単位で行います。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.GridLayout.MaxRowsOrColumns">
            <summary>
            行数または列数の最大数を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.GridLayout.Orientation">
            <summary>
            レイアウトの方向を取得または設定します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.AutoGridLayout.#ctor(System.Web.Mvc.HtmlHelper)">
            <summary>
            1 つの AutoGridLayout インスタンスを作成します。
            </summary>
            <param name="helper">HTML ヘルパー</param>
        </member>
        <member name="P:C1.Web.Mvc.AutoGridLayout.Items">
            <summary>
            このレイアウト内のグループコレクションを取得します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.AutoScroll">
            <summary>
            行または列を新しい位置にドラッグするときに、グリッドがそのコンテンツを自動的にスクロールするかどうかを決定する値を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientItemsSourceChanging">
            <summary>
            グリッドが新しい項目ソースに連結された後に発生します。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.FlowLayout">
            <summary>
            フローレイアウトを表すクラスを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.FlowLayout.#ctor(System.Web.Mvc.HtmlHelper)">
            <summary>
            1 つの FlowLayout インスタンスを作成します。
            </summary>
            <param name="helper">HTML ヘルパー</param>
        </member>
        <member name="P:C1.Web.Mvc.FlowLayout.Direction">
            <summary>
            フローレイアウトの方向を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlowLayout.Items">
            <summary>
            このレイアウト内のタイルコレクションを取得します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.InputMask.IsReadOnly">
            <summary>
            ユーザーがマウスとキーボードを使用してコントロール値を変更できるかどうかを示す値を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.InputNumber.RepeatButtons">
            <summary>
            スピナーボタンが繰り返しボタンとして動作し、ボタンを押したままにすると繰り返し起動されるかどうかを決定する値を取得または設定します。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.ManualGridLayout">
            <summary>
            手動グリッドレイアウトを表すクラスを定義します。手動グリッドレイアウトでは、項目が指定の位置にレンダリングされます。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.ManualGridLayout.#ctor(System.Web.Mvc.HtmlHelper)">
            <summary>
            1 つの ManualGridLayout インスタンスを作成します。
            </summary>
            <param name="helper">HTML ヘルパー</param>
        </member>
        <member name="P:C1.Web.Mvc.ManualGridLayout.Items">
            <summary>
            このレイアウト内のグループコレクションを取得します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Popup.IsDraggable">
            <summary>
            ヘッダーによってポップアップをマウスでドラッグできるかどうかを決定する値を取得または設定します。
            </summary>
            <remarks>
            ヘッダーは、「.wj-dialog-header」CSS セレクタによって識別されます。ダイアログに「wj-dialog-header」クラスの要素が含まれない場合、ポップアップはドラッグできません。
            </remarks>
        </member>
        <member name="T:C1.Web.Mvc.SplitLayout">
            <summary>
            スプリットレイアウトを表すクラスを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.SplitLayout.#ctor(System.Web.Mvc.HtmlHelper)">
            <summary>
            1 つの SplitLayout インスタンスを作成します。
            </summary>
            <param name="helper">HTML ヘルパー</param>
        </member>
        <member name="P:C1.Web.Mvc.SplitLayout.Items">
            <summary>
            レイアウト項目を取得します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.SplitLayout.Orientation">
            <summary>
            レイアウトの方向を取得または設定します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.AutoScroll(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.FlexGridBase`1.AutoScroll" /> を構成します。
            行または列を新しい位置にドラッグするときに、グリッドがそのコンテンツを自動的にスクロールするかどうかを決定する値を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientItemsSourceChanging(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.FlexGridBase`1.OnClientItemsSourceChanging" /> クライアントイベントを構成します。
            グリッドが新しい項目ソースに連結された後に発生します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputMaskBuilder.IsReadOnly(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.InputMask.IsReadOnly" /> を構成します。
            ユーザーがマウスとキーボードを使用してコントロール値を変更できるかどうかを示す値を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputNumberBuilder.RepeatButtons(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.InputNumber.RepeatButtons" /> を構成します。
            スピナーボタンが繰り返しボタンとして動作し、ボタンを押したままにすると繰り返し起動されるかどうかを決定する値を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PopupBuilder.IsDraggable(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.Popup.IsDraggable" /> を構成します。
            ヘッダーによってポップアップをマウスでドラッグできるかどうかを決定する値を設定します。
            </summary>
            <remarks>
            ヘッダーは、「.wj-dialog-header」CSS セレクタによって識別されます。ダイアログに「wj-dialog-header」クラスの要素が含まれない場合、ポップアップはドラッグできません。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.DashboardLayout(System.String)">
            <summary>
                <see cref="T:C1.Web.Mvc.DashboardLayout" /> コントロールを作成して、
            指定されたセレクタに対応する DOM 要素にアタッチします。
            </summary>
            <param name="selector">
            セレクタを指定します。これはオプションです。
            設定されなかった場合は、デフォルトの DOM 要素が生成されます。
            </param>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.DashboardLayoutBuilder" />。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.TabPanel(System.String)">
            <summary>
                <see cref="T:C1.Web.Mvc.TabPanel" /> コントロールを作成して、
            指定されたセレクタに対応する DOM 要素にアタッチします。
            </summary>
            <param name="selector">
            セレクタを指定します。これはオプションです。
            設定されなかった場合は、デフォルトの DOM 要素が生成されます。
            </param>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.TabPanelBuilder" />。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.SplitLayout">
            <summary>
                <see cref="T:C1.Web.Mvc.SplitLayout" /> サービスを作成します。
            </summary>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.SplitLayoutBuilder" />。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.FlowLayout">
            <summary>
                <see cref="T:C1.Web.Mvc.FlowLayout" /> サービスを作成します。
            </summary>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.FlowLayoutBuilder" />。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.ManualGridLayout">
            <summary>
                <see cref="T:C1.Web.Mvc.ManualGridLayout" /> サービスを作成します。
            </summary>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.ManualGridLayoutBuilder" />。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.AutoGridLayout">
            <summary>
                <see cref="T:C1.Web.Mvc.AutoGridLayout" /> サービスを作成します。
            </summary>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.AutoGridLayoutBuilder" />。</returns>
        </member>
        <member name="P:C1.Web.Mvc.ColumnBase.MultiLine">
            <summary>
            この行または列のセルのコンテンツが改行文字（\n）で折り返されるかどうかを示す値を取得または設定します。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.AutoGridGroup">
            <summary>
            自動グリッドレイアウトのグループを表すクラスを定義します。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Group">
            <summary>
            グループ項目の基本クラスを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.AutoGridGroup.#ctor">
            <summary>
            1 つの <see cref="T:C1.Web.Mvc.AutoGridGroup" /> インスタンスを作成します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.AutoGridGroup.Children">
            <summary>
            このグループ内の子タイルを取得します。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.AutoGridTile">
            <summary>
            自動グリッドレイアウトのタイルを表すクラスを定義します。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.GridTile">
            <summary>
            グリッドレイアウトのタイルを表す基本クラスを定義します。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Tile">
            <summary>
            タイル項目のクラスを定義します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Tile.Content">
            <summary>
            タイルコンテンツ（テキスト/html）またはそのコンテンツを含む DOM 要素のセレクタを取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Tile.HeaderText">
            <summary>
            タイルヘッダータイトルを取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Tile.ShowHeader">
            <summary>
            ヘッダーを表示するかどうかを決定する Boolean 値を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Tile.ShowToolbar">
            <summary>
            ツールバーを表示するかどうかを決定する Boolean 値を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.GridTile.ColumnSpan">
            <summary>
            このタイトルによって占有される列範囲を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.GridTile.RowSpan">
            <summary>
            このタイトルによって占有される行範囲を取得または設定します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.AutoGridTile.#ctor">
            <summary>
            1 つの <see cref="T:C1.Web.Mvc.AutoGridGroup" /> インスタンスを作成します。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.FlowTile">
            <summary>
            フローレイアウト内のタイトルを表すクラスを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.FlowTile.#ctor">
            <summary>
            1 つの <see cref="T:C1.Web.Mvc.FlowTile" /> インスタンスを作成します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlowTile.Width">
            <summary>
            タイトルの幅をピクセル単位で取得または設定します。null に設定した場合は、幅が自動的にコンテンツに合わされることを意味します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlowTile.Height">
            <summary>
            タイトルの高さをピクセル単位で取得または設定します。null に設定した場合は、高さが自動的にコンテンツに合わされることを意味します。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.FlowDirection">
            <summary>
            フローの方向を指定します。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.FlowDirection.LeftToRight">
            <summary>
            要素はデザインサーフェスの左端から右に配置されます。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.FlowDirection.TopToDown">
            <summary>
            要素はデザインサーフェスの上から下に配置されます。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.FlowDirection.RightToLeft">
            <summary>
            要素はデザインサーフェスの右端から左に配置されます。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.FlowDirection.BottomToUp">
            <summary>
            要素はデザインサーフェスの下から上に配置されます。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.LayoutOrientation">
            <summary>
            ダッシュボード内でレイアウト項目がレンダリングされる方向を指定します。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.LayoutOrientation.Horizontal">
            <summary>
            レイアウト項目を水平方向に表示します。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.LayoutOrientation.Vertical">
            <summary>
            レイアウト項目を垂直方向に表示します。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.ManualGridGroup">
            <summary>
            手動グリッドレイアウトのグループを表すクラスを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.ManualGridGroup.#ctor">
            <summary>
            1 つの <see cref="T:C1.Web.Mvc.ManualGridGroup" /> インスタンスを作成します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ManualGridGroup.Children">
            <summary>
            子タイルを取得します。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.ManualGridTile">
            <summary>
            手動グリッドレイアウトのタイルを表すクラスを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.ManualGridTile.#ctor">
            <summary>
            1 つの <see cref="T:C1.Web.Mvc.ManualGridTile" /> インスタンスを作成します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ManualGridTile.Column">
            <summary>
            タイルの開始列インデックスを取得または設定します。列インデックスは 1 から始まります。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ManualGridTile.Row">
            <summary>
            タイルの開始行インデックスを取得または設定します。行インデックスは 1 から始まります。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.SplitGroup">
            <summary>
            スプリットレイアウトのグループを表すクラスを定義します。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.ISplitLayoutItem">
            <summary>
            スプリットレイアウト内の項目に対して空のインタフェースを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.SplitGroup.#ctor">
            <summary>
            1 つの <see cref="T:C1.Web.Mvc.SplitGroup" /> インスタンスを作成します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.SplitGroup.Orientation">
            <summary>
            グループの方向を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.SplitGroup.Size">
            <summary>
            タイルのサイズを取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.SplitGroup.Children">
            <summary>
            子項目を取得します。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.SplitTile">
            <summary>
            スプリットレイアウトのタイルを表すクラスを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.SplitTile.#ctor">
            <summary>
            1 つの <see cref="T:C1.Web.Mvc.SplitTile" /> インスタンスを作成します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.SplitTile.MinSize">
            <summary>
            タイルの最小サイズをピクセル単位で取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.SplitTile.Size">
            <summary>
            タイルのサイズを取得または設定します。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Tab">
            <summary>
            TabPanel コントロール内の 1 つのタブを表します。
            </summary>
            <remarks>
            タブにはヘッダーとペインの 2 つの要素があります。ヘッダーにはタブのタイトルが表示され、ペインにはタブのコンテンツが表示されます。
            </remarks>
        </member>
        <member name="M:C1.Web.Mvc.Tab.#ctor">
            <summary>
            1 つの <see cref="T:C1.Web.Mvc.Tab" /> インスタンスを作成します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Tab.IsDisabled">
            <summary>
            このタブが無効かどうかを示す値を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Tab.IsVisible">
            <summary>
            このタブが表示されるかどうかを示す値を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Tab.Header">
            <summary>
            タブのヘッダー要素を示すセレクタ文字列を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Tab.Pane">
            <summary>
            タブのコンテンツ要素を示すセレクタ文字列を取得または設定します。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.AutoGridTileBuilder">
            <summary>
                <see cref="T:C1.Web.Mvc.AutoGridTile" /> を構成するためのビルダを定義します。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.GridTileBuilder`2">
            <summary>
                <see cref="T:C1.Web.Mvc.GridTile" /> を構成するためのビルダを定義します。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.TileBuilder`2">
            <summary>
                <see cref="T:C1.Web.Mvc.Tile" /> を構成するためのビルダを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TileBuilder`2.#ctor(`0)">
            <summary>
                <paramref name="obj" /> を構成するために 1 つの <see cref="T:C1.Web.Mvc.Fluent.TileBuilder`2" /> インスタンスを作成します。
            </summary>
            <param name="obj">構成する <see cref="T:C1.Web.Mvc.Tile" /> オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TileBuilder`2.Content(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.Tile.Content" /> を構成します。
            タイルコンテンツ（テキスト/html）またはそのコンテンツを含む DOM 要素のセレクタを設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TileBuilder`2.HeaderText(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.Tile.HeaderText" /> を構成します。
            タイルヘッダーのタイトルを設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TileBuilder`2.ShowHeader(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.Tile.ShowHeader" /> を構成します。
            ヘッダーを表示するかどうかを決定する Boolean 値を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TileBuilder`2.ShowToolbar(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.Tile.ShowToolbar" /> を構成します。
            ツールバーを表示するかどうかを決定する Boolean 値を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.GridTileBuilder`2.#ctor(`0)">
            <summary>
                <paramref name="obj" /> を構成するために 1 つの <see cref="T:C1.Web.Mvc.Fluent.GridTileBuilder`2" /> インスタンスを作成します。
            </summary>
            <param name="obj">構成する <see cref="T:C1.Web.Mvc.GridTile" /> オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.GridTileBuilder`2.ColumnSpan(System.Int32)">
            <summary>
                <see cref="P:C1.Web.Mvc.GridTile.ColumnSpan" /> を構成します。
            このタイルによって占有される列範囲を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.GridTileBuilder`2.RowSpan(System.Int32)">
            <summary>
                <see cref="P:C1.Web.Mvc.GridTile.RowSpan" /> を構成します。
            このタイルによって占有される行範囲を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AutoGridTileBuilder.#ctor(C1.Web.Mvc.AutoGridTile)">
            <summary>
                <paramref name="obj" /> を構成するために 1 つの <see cref="T:C1.Web.Mvc.Fluent.AutoGridTileBuilder" /> インスタンスを作成します。
            </summary>
            <param name="obj">構成する <see cref="T:C1.Web.Mvc.AutoGridTile" /> オブジェクト。</param>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ChartLegendBuilder">
            <summary>
                <see cref="T:C1.Web.Mvc.ChartLegend" /> を構成するためのビルダを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartLegendBuilder.#ctor(C1.Web.Mvc.ChartLegend)">
            <summary>
                <paramref name="obj" /> を構成するために 1 つの <see cref="T:C1.Web.Mvc.Fluent.ChartLegendBuilder" /> インスタンスを作成します。
            </summary>
            <param name="obj">構成する <see cref="T:C1.Web.Mvc.ChartLegend" /> オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartLegendBuilder.Position(C1.Web.Mvc.Chart.Position)">
            <summary>
                <see cref="P:C1.Web.Mvc.ChartLegend.Position" /> を構成します。
            チャートに凡例を表示するかどうかと、表示する場合はどこに表示するかを決定する列挙値を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartLegendBuilder.Title(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.ChartLegend.Title" /> を構成します。
            凡例のタイルを決定する値を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartLegendBuilder.TitleAlign(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.ChartLegend.TitleAlign" /> を構成します。
            凡例の配置を決定する値を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnBaseBuilder`2.MultiLine(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.ColumnBase.MultiLine" /> を構成します。
            この行または列のセルのコンテンツが改行文字（\n）で折り返されるかどうかを示す値を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.FlowTileBuilder">
            <summary>
                <see cref="T:C1.Web.Mvc.FlowTile" /> を構成するためのビルダを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlowTileBuilder.#ctor(C1.Web.Mvc.FlowTile)">
            <summary>
                <paramref name="obj" /> を構成するために 1 つの <see cref="T:C1.Web.Mvc.Fluent.FlowTileBuilder" /> インスタンスを作成します。
            </summary>
            <param name="obj">構成する <see cref="T:C1.Web.Mvc.FlowTile" /> オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlowTileBuilder.Width(System.Nullable{System.Int32})">
            <summary>
                <see cref="P:C1.Web.Mvc.FlowTile.Width" /> を構成します。
            タイルの幅をピクセル単位で設定します。null に設定した場合は、幅が自動的にコンテンツに合わされることを意味します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlowTileBuilder.Height(System.Nullable{System.Int32})">
            <summary>
                <see cref="P:C1.Web.Mvc.FlowTile.Height" /> を構成します。
            タイルの高さをピクセル単位で設定します。null に設定した場合は、高さが自動的にコンテンツに合わされることを意味します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ManualGridTileBuilder">
            <summary>
                <see cref="T:C1.Web.Mvc.ManualGridTile" /> を構成するためのビルダを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ManualGridTileBuilder.#ctor(C1.Web.Mvc.ManualGridTile)">
            <summary>
                <paramref name="obj" /> を構成するために 1 つの <see cref="T:C1.Web.Mvc.Fluent.ManualGridTileBuilder" /> インスタンスを作成します。
            </summary>
            <param name="obj">構成する <see cref="T:C1.Web.Mvc.ManualGridTile" /> オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ManualGridTileBuilder.Column(System.Int32)">
            <summary>
                <see cref="P:C1.Web.Mvc.ManualGridTile.Column" /> を構成します。
            タイルの開始列インデックスを設定します。列インデックスは 1 から始まります。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ManualGridTileBuilder.Row(System.Int32)">
            <summary>
                <see cref="P:C1.Web.Mvc.ManualGridTile.Row" /> を構成します。
            タイルの開始行インデックスを設定します。行インデックスは 1 から始まります。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.SplitTileBuilder">
            <summary>
                <see cref="T:C1.Web.Mvc.SplitTile" /> を構成するためのビルダを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SplitTileBuilder.#ctor(C1.Web.Mvc.SplitTile)">
            <summary>
                <paramref name="obj" /> を構成するために 1 つの <see cref="T:C1.Web.Mvc.Fluent.SplitTileBuilder" /> インスタンスを作成します。
            </summary>
            <param name="obj">構成する <see cref="T:C1.Web.Mvc.SplitTile" /> オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SplitTileBuilder.MinSize(System.Int32)">
            <summary>
                <see cref="P:C1.Web.Mvc.SplitTile.MinSize" /> を構成します。
            タイルの最小サイズをピクセル単位で設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SplitTileBuilder.Size(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.SplitTile.Size" /> を構成します。
            タイルのサイズを設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.TabBuilder">
            <summary>
                <see cref="T:C1.Web.Mvc.Tab" /> を構成するためのビルダを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TabBuilder.#ctor(C1.Web.Mvc.Tab)">
            <summary>
                <paramref name="obj" /> を構成するために 1 つの <see cref="T:C1.Web.Mvc.Fluent.TabBuilder" /> インスタンスを作成します。
            </summary>
            <param name="obj">構成する <see cref="T:C1.Web.Mvc.Tab" /> オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TabBuilder.IsDisabled(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.Tab.IsDisabled" /> を構成します。
            このタブが無効かどうかを示す値を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TabBuilder.IsVisible(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.Tab.IsVisible" /> を構成します。
            このタブが表示されるかどうかを示す値を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TabBuilder.Header(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.Tab.Header" /> を構成します。
            タブのヘッダー要素を示すセレクタ文字列を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TabBuilder.Pane(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.Tab.Pane" /> を構成します。
            タブのコンテンツ要素を示すセレクタ文字列を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="F:C1.Web.Mvc.Chart.PieLabelPosition.Radial">
            <summary>
            項目を円グラフセグメント内でセグメントの角度に応じた方向に表示します。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.PieLabelPosition.Circular">
            <summary>
            項目を円グラフセグメント内で円周方向に表示します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.DashboardLayout.AllowMaximize">
            <summary>
            タイルを最大化できるかどうかを示すブール値を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.DashboardLayout.AllowHide">
            <summary>
            タイルを非表示にするかどうかを示すブール値を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.DashboardLayout.AllowShowAll">
            <summary>
            表示または非表示に関係なくすべてのタイルが表示されるかどうかを示すブール値を設定します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputColorBuilder.IsRequired(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.InputColor.IsRequired" />を構成します。
            コントロールの値が色である必要があるかどうか、またはコントロールの内容を削除してnullに設定できるかどうかを示す値を取得または設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DashboardLayoutBuilder.AllowMaximize(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.DashboardLayout.AllowMaximize" />を構成します。
            タイルを最大化できるかどうかを示すブール値を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DashboardLayoutBuilder.AllowHide(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.DashboardLayout.AllowHide" />を構成します。
            タイルを非表示にできるかどうかを示すブール値を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DashboardLayoutBuilder.AllowShowAll(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.DashboardLayout.AllowShowAll" />を構成します。
            表示または非表示に関係なくすべてのタイルが表示されるかどうかを示すブール値を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="P:C1.Web.Mvc.InputColor.IsRequired">
            <summary>
            コントロールの値が色である必要があるかどうか、またはコントロールの内容を削除してnullに設定できるかどうかを示す値を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Tile.Visible">
            <summary>
            タイルを表示するかどうかを示すブール値を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Tile.AllowDrag">
            <summary>
            タイルをドラッグできるかどうかを示すブール値を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Tile.AllowMaximize">
            <summary>
            タイルを最大化できるかどうかを示すブール値を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Tile.AllowHide">
            <summary>
            タイルを非表示にするかどうかを示すブール値を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.GridTile.AllowResize">
            <summary>
            タイルのサイズを変更できるかどうかを示すブール値を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlowTile.AllowResize">
            <summary>
            タイルのサイズを変更できるかどうかを示すブール値を取得または設定します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TileBuilder`2.Visible(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.Tile.Visible" />を構成します。
            タイルを表示するかどうかを示すブール値を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TileBuilder`2.AllowDrag(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.Tile.AllowDrag" />を構成します。
            タイルをドラッグできるかどうかを示すブール値を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TileBuilder`2.AllowMaximize(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.Tile.AllowMaximize" />を構成します。
            タイルを最大化できるかどうかを示すブール値を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TileBuilder`2.AllowHide(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.Tile.AllowHide" />を構成します。
            タイルを非表示にできるかどうかを示すブール値を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.GridTileBuilder`2.AllowResize(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.GridTile.AllowResize" />を構成します。
            タイルのサイズを変更できるかどうかを示すブール値を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlowTileBuilder.AllowResize(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.FlowTile.AllowResize" />を構成します。
            タイルのサイズを変更できるかどうかを示すブール値を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="P:C1.Web.Mvc.BaseODataCollectionViewService`1.JsonReviver">
            <summary>
            サーバーから返された JSON 値の解析に使用されるカスタム復活関数を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.BaseODataCollectionViewService`1.Expand">
            <summary>
            関連するエンティティを戻り値データに含めるかどうかを指定する文字列を取得または設定します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BaseODataCollectionViewServiceBuilder`3.JsonReviver(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.BaseODataCollectionViewService`1.JsonReviver" /> を構成します。
            サーバーから返された JSON 値の解析に使用されるカスタム復活関数を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BaseODataCollectionViewServiceBuilder`3.Expand(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.BaseODataCollectionViewService`1.Expand" /> を構成します。
            関連するエンティティを戻り値データに含めるかどうかを指定する文字列を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ComboBoxBaseBuilder`3.ShowGroups(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.ComboBoxBase`1.ShowGroups" /> を構成します。
            データグループを区切るグループヘッダー項目をドロップダウンに表示するかどうかを決定する値を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.AutoSearch(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.FlexGridBase`1.AutoSearch" /> を構成します。
            ユーザーがグリッド内の読み取り専用のセルに入力したときにセルを検索するかどうかを決定する値を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.DefaultRowSize(System.Int32)">
            <summary>
                <see cref="P:C1.Web.Mvc.FlexGridBase`1.DefaultRowSize" /> を構成します。
            行コレクション内の行のデフォルトサイズを設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.DefaultColumnSize(System.Int32)">
            <summary>
                <see cref="P:C1.Web.Mvc.FlexGridBase`1.DefaultColumnSize" /> を構成します。
            列コレクション内の列のデフォルトサイズを設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.VirtualizationThresholds(System.Int32,System.Int32)">
            <summary>
            仮想化を有効にするために必要な行と列の最小数を設定します。
            </summary>
            <param name="numberRow">行の最小数。</param>
            <param name="numberColumn">列の最小数。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridDetailProviderBuilder`1.KeyActionEnter(C1.Web.Mvc.GridDetail.KeyAction)">
            <summary>
                <see cref="P:C1.Web.Mvc.FlexGridDetailProvider`1.KeyActionEnter" /> を構成します。
            ［Enter］キーが押されたときに実行するアクションを設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.GaugeBuilder`2.StackRanges(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.Gauge.StackRanges" /> を構成します。
            コレクションに含まれる範囲をゲージ内に積み重ねるかどうかを決定する値を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ListBoxBuilder`1.ShowGroups(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.ListBox`1.ShowGroups" /> を構成します。
            データグループを区切るグループヘッダー項目をドロップダウンに表示するかどうかを決定する値を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="P:C1.Web.Mvc.ComboBoxBase`1.ShowGroups">
            <summary>
            データグループを区切るグループヘッダー項目をドロップダウンに表示するかどうかを決定する値を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.VirtualizationThresholds">
            <summary>
            仮想化を有効にするために必要な行と列の最小数を取得または設定します。
            </summary>
            <remarks>
            このプロパティはデフォルトで 0 に設定されています。つまり、仮想化は常に有効です。これで、連結のパフォーマンスが向上し、メモリ要件を抑えることができますが、スクロール中のパフォーマンスが少し低下します。グリッドの行数が少ない場合は（約 50 ～ 100）、このプロパティに少し大きな値（150 など）を設定することで、スクロールのパフォーマンスを向上させることができます。こうすると、仮想化が無効になり、連結の速度は低下しますが、スクロールの体感的なパフォーマンスは向上します。このプロパティを 200 より大きな値に設定することはお勧めできません。ロード時間が長くなり、すべての行のセルを作成するまで、グリッドが数秒間停止します。また、ページに大量の要素が含まれるため、ブラウザの動作が遅くなります。
            </remarks>
        </member>
        <member name="M:C1.Web.Mvc.FlexGridBase`1.ShouldSerializeVirtualizationThresholds">
            <summary>
            VirtualizationThresholds プロパティをシリアライズするかどうかを指定します。
            </summary>
            <returns>
            true の場合、プロパティはシリアライズされます。
            そうでない場合は、シリアライズされません。
            </returns>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.AutoSearch">
            <summary>
            ユーザーがグリッド内の読み取り専用のセルに入力したときにセルを検索するかどうかを決定する値を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.DefaultRowSize">
            <summary>
            行コレクション内の行のデフォルトサイズを取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.DefaultColumnSize">
            <summary>
            列コレクション内の列のデフォルトサイズを取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridDetailProvider`1.KeyActionEnter">
            <summary>
            ［Enter］キーが押されたときに実行するアクションを取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Gauge.StackRanges">
            <summary>
            コレクションに含まれる範囲をゲージ内に積み重ねるかどうかを決定する値を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ListBox`1.ShowGroups">
            <summary>
            データグループを区切るグループヘッダー項目をドロップダウンに表示するかどうかを決定する値を取得または設定します。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.GridDetail.KeyAction">
            <summary>
            ［Enter］キーが押されたときに実行するアクションを定義する定数を指定します。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.GridDetail.KeyAction.None">
            <summary>
            特に何もしません。ブラウザにキーの処理を任せます。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.GridDetail.KeyAction.ToggleDetail">
            <summary>
            詳細表示を切り替えます。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.C1AntiForgeryTokenAttribute">
            <summary>
            C1AntiForgeryTokenAttribute は MVC AntiForgency の機能をサポートします。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.C1AntiForgeryTokenAttribute.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
            <summary>
            要求ヘッダー内の RequestVerificationToken 値に基づく認証ロジックを実装します。
            </summary>
            <param name="filterContext"></param>
        </member>
        <member name="P:C1.Web.Mvc.ChartSeriesBase`1.InterpolateNulls">
            <summary>
            データ内の null 値を補間するかどうかを決定する値を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.BaseCollectionViewService`1.SortNullFirst">
            <summary>
            null 値を先頭と末尾のどちらに表示するかを決定する値を取得または設定します。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.HeaderTemplateBuilder">
            <summary>
            テーブル内のヘッダー領域のハンドラ。
            </summary>
            <summary>
                <see cref="T:C1.Web.Mvc.HeaderTemplate" /> を構成するためのビルダを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.HeaderTemplateBuilder.RowCount(System.Int32)">
            <summary>
            ヘッダーテーブル内の行数。
            </summary>
            <param name="rowCount"></param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.HeaderTemplateBuilder.Cells(System.Action{C1.Web.Mvc.Fluent.CellTemplateHandler})">
            <summary>
            ヘッダーテーブル内の列マネージャ。
            </summary>
            <param name="builder"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.HeaderTemplateBuilder.#ctor(C1.Web.Mvc.HeaderTemplate)">
            <summary>
                <paramref name="obj" /> を構成するために 1 つの <see cref="T:C1.Web.Mvc.Fluent.HeaderTemplateBuilder" /> インスタンスを作成します。
            </summary>
            <param name="obj">構成する <see cref="T:C1.Web.Mvc.HeaderTemplate" /> オブジェクト。</param>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.CellTemplateHandler">
            <summary>
            ヘッダーテンプレート内の各セル単位のハンドラ。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CellTemplateHandler.#ctor(C1.Web.Mvc.HeaderTemplate)">
            <summary>
            コンストラクタ
            </summary>
            <param name="holder"></param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CellTemplateHandler.Set(System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            セルのプロパティに値を設定します。
            </summary>
            <param name="row">ヘッダーテーブル内の行位置。</param>
            <param name="col">ヘッダーテーブル内の列位置。</param>
            <param name="rowSpan">ヘッダーテーブル内の行範囲。</param>
            <param name="colSpan">ヘッダーテーブル内の列範囲。</param>
            <param name="title">このセルに表示されるテキスト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BaseCollectionViewServiceBuilder`3.SortNullFirst(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.BaseCollectionViewService`1.SortNullFirst" /> を構成します。
            null 値を先頭と末尾のどちらに表示するかを決定する値を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CalendarBuilder.RepeatButtons(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.Calendar.RepeatButtons" /> を構成します。
            カレンダーボタンが繰り返しボタンとして動作し、ボタンを押したままにすると繰り返し起動されるかどうかを決定する値を設定します。
            </summary>
            <remarks>
            このプロパティのデフォルト値は <b>true</b> です。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CalendarBuilder.ShowYearPicker(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.Calendar.ShowYearPicker" /> を構成します。
            ユーザーが年カレンダーのヘッダー要素をクリックしたときに年のリストを表示するかどうかを決定する値を設定します。
            </summary>
            <remarks>
            このプロパティのデフォルト値は <b>true</b> です。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.HeaderTemplate(System.Action{C1.Web.Mvc.Fluent.HeaderTemplateBuilder})">
            <summary>
            これは、カスタムヘッダーテンプレートのビルダです。
            </summary>
            <param name="builder"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridGroupPanelBuilder`1.Filter(System.Action{C1.Web.Mvc.Fluent.FlexGridFilterBuilder{`0}})">
            <summary>
            グリッドデータのフィルタ処理に使用される @see:grid.filter.FlexGridFilter を取得または設定します。
            </summary>
            <param name="builder"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputDateBuilder.RepeatButtons(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.InputDate.RepeatButtons" /> を構成します。
            カレンダーボタンが繰り返しボタンとして動作し、ボタンを押したままにすると繰り返し起動されるかどうかを決定する値を設定します。
            </summary>
            <remarks>
            このプロパティのデフォルト値は <b>true</b> です。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputDateBuilder.ShowYearPicker(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.InputDate.ShowYearPicker" /> を構成します。
            ユーザーが年カレンダーのヘッダー要素をクリックしたときに年のリストを表示するかどうかを決定する値を設定します。
            </summary>
            <remarks>
            このプロパティのデフォルト値は <b>true</b> です。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MenuBaseBuilder`3.OpenOnHover(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.MenuBase`1.OpenOnHover" /> を構成します。
             メニュー項目上をマウスポインタが移動したときに、自動的にメニューを開く/閉じるかどうかを決定する値を取得または設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MenuBaseBuilder`3.SubItemsPath(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.MenuBase`1.SubItemsPath" /> を構成します。
            サブメニューに表示される項目の配列を保持するプロパティの名前を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartSeriesBaseBuilder`3.InterpolateNulls(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.ChartSeriesBase`1.InterpolateNulls" /> を構成します。
            データ内の null 値を補間するかどうかを決定する値を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.HeaderTemplateCellBuilder">
            <summary>
                <see cref="T:C1.Web.Mvc.HeaderTemplateCell" /> を構成するためのビルダを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.HeaderTemplateCellBuilder.#ctor(C1.Web.Mvc.HeaderTemplateCell)">
            <summary>
                <paramref name="obj" /> を構成するために 1 つの <see cref="T:C1.Web.Mvc.Fluent.HeaderTemplateCellBuilder" /> インスタンスを作成します。
            </summary>
            <param name="obj">構成する <see cref="T:C1.Web.Mvc.HeaderTemplateCell" /> オブジェクト。</param>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.ArgumentNullException">
            <summary>
              「filterContext」に相当するローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.HeaderTemplateExceptionCellCol">
            <summary>
              「Column position must equal or greater than zero!（列位置は 0 以上である必要があります。）」に相当するローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.HeaderTemplateExceptionCellColSpan">
            <summary>
              「Column span must greater than zero!（列範囲は 0 より大きい必要があります。）」に相当するローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.HeaderTemplateExceptionCellRow">
            <summary>
              「Row position must equal or greater than zero!（行位置は 0 以上である必要があります。）」に相当するローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.HeaderTemplateExceptionCellRowSpan">
            <summary>
              「Row span must greater than zero!（行範囲は 0 より大きい必要があります。）」に相当するローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.HeaderTemplateExceptionCells">
            <summary>
              「Before cells can be used you must initialize RowCount value.（セルを使用する前に RowCount 値を初期化する必要があります。）」に相当するローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.HeaderTemplateExceptionCellTooHigh">
            <summary>
              「(row position + row span) must not greater than (row count - 1).（(行位置 + 行範囲) は (行数 - 1) 以下である必要があります。）」に相当するローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.HeaderTemplateExceptionOverlapped">
            <summary>
              「Invalid span setting, the cells should not overlap together.（無効な範囲設定です。セルどうしが重なることはできません。）」に相当するローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.HeaderTemplateExcetionRowCount">
            <summary>
              「Row count must greater than one because table must hold one row for base row header.（テーブルは基本行ヘッダーに対して 1 つの行を持つ必要があるため、行数は 1 より大きい必要があります。）」に相当するローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Calendar.RepeatButtons">
            <summary>
            カレンダーボタンが繰り返しボタンとして動作し、ボタンを押したままにすると繰り返し起動されるかどうかを決定する値を取得または設定します。
            </summary>
            <remarks>
            このプロパティのデフォルト値は <b>true</b> です。
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.Calendar.ShowYearPicker">
            <summary>
            ユーザーが年カレンダーのヘッダー要素をクリックしたときに年のリストを表示するかどうかを決定する値を取得または設定します。
            </summary>
            <remarks>
            このプロパティのデフォルト値は <b>true</b> です。
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.HeaderTemplate">
            <summary></summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridGroupPanel`1.Filter">
            <summary>
            グリッドデータのフィルタ処理に使用される @see:grid.filter.FlexGridFilter を取得または設定します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.FlexGridGroupPanel`1.ShouldSerializeFilter">
            <summary>
            Filter プロパティをシリアライズするかどうかを指定します。
            </summary>
            <returns>
            true の場合、プロパティはシリアライズされます。
            そうでない場合は、シリアライズされません。
            </returns>
        </member>
        <member name="P:C1.Web.Mvc.InputDate.RepeatButtons">
            <summary>
            カレンダーボタンが繰り返しボタンとして動作し、ボタンを押したままにすると繰り返し起動されるかどうかを決定する値を取得または設定します。
            </summary>
            <remarks>
            このプロパティのデフォルト値は <b>true</b> です。
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.InputDate.ShowYearPicker">
            <summary>
            ユーザーが年カレンダーのヘッダー要素をクリックしたときに年のリストを表示するかどうかを決定する値を取得または設定します。
            </summary>
            <remarks>
            このプロパティのデフォルト値は <b>true</b> です。
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.MenuBase`1.OpenOnHover">
            <summary>
             メニュー項目上をマウスポインタが移動したときに、自動的にメニューを開く/閉じるかどうかを決定する値を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.MenuBase`1.SubItemsPath">
            <summary>
            サブメニューに表示される項目の配列を保持するプロパティの名前を取得または設定します。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.HeaderTemplate">
            <summary>
            カスタムヘッダーテーブルのテンプレート。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.HeaderTemplate.RowCount">
            <summary>
            テーブルのヘッダーに表示される行の数。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.HeaderTemplate.Cells">
            <summary>
            すべてのセルオブジェクトを保持します。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.HeaderTemplateCell">
            <summary>
            GroupHeaderTemplate の 1 つの項目を表します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.HeaderTemplateCell.Col">
            <summary>
            列位置
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.HeaderTemplateCell.Row">
            <summary>
            行位置
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.HeaderTemplateCell.ColSpan">
            <summary>
            列範囲
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.HeaderTemplateCell.RowSpan">
            <summary>
            行範囲
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.HeaderTemplateCell.Title">
            <summary>
            この領域に表示されるテキスト
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.HeaderTemplateCell.Set(System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            セルのプロパティに値を設定します。
            </summary>
            <param name="row">ヘッダーテーブル内の行位置。</param>
            <param name="col">ヘッダーテーブル内の列位置。</param>
            <param name="rowSpan">ヘッダーテーブル内の行範囲。</param>
            <param name="colSpan">ヘッダーテーブル内の列範囲。</param>
            <param name="title">このセルに表示されるテキスト。</param>
        </member>
        <member name="P:C1.Web.Mvc.ChartSeriesBase`1.TooltipContent">
            <summary>
            特定のチャート系列のツールチップコンテンツを設定または取得します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartSeriesBase`1.ItemFormatter">
            <summary>
            特定の系列の itemFormatter クライアント側関数名を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.BaseCollectionViewService`1.SortNullsFirst">
            <summary>
            null 値を先頭と末尾のどちらに表示するかを決定する値を取得または設定します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BaseCollectionViewServiceBuilder`3.SortNullsFirst(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.BaseCollectionViewService`1.SortNullsFirst" /> を構成します。
            null 値を先頭と末尾のどちらに表示するかを決定する値を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DropDownBuilder`2.InputType(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.DropDown.InputType" /> を構成します。
            コントロールによってホストされる HTML 入力要素の "type" 属性を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.AlternatingRowStep(System.Int32)">
            <summary>
                <see cref="P:C1.Web.Mvc.FlexGridBase`1.AlternatingRowStep" /> を構成します。
            「交互表示」行の間の通常行の数を決定する値を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.ErrorTip(System.Action{C1.Web.Mvc.Fluent.ErrorTooltipBuilder})">
            <summary>
                <see cref="P:C1.Web.Mvc.FlexGridBase`1.ErrorTip" /> を構成します。
            FlexGrid のエラーツールチップを設定します。
            </summary>
            <param name="build">ビルダ関数。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputMaskBuilder.InputType(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.InputMask.InputType" /> を構成します。
            コントロールによってホストされる HTML 入力要素の "type" 属性を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MenuBaseBuilder`3.CloseOnLeave(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.MenuBase`1.CloseOnLeave" /> を構成します。
            マウスが項目の上から移動したときに、自動的にメニューを閉じるかどうかを決定する値を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeViewBuilder.ExpandOnLoad(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.TreeView.ExpandOnLoad" /> を構成します。
            ユーザーがノードヘッダーをクリックしたときに、チェックボックスを切り替えるかどうかを決定する値を設定します。
            </summary>
            <remarks>
            このプロパティのデフォルト値は <b>false</b> です。この場合は、ユーザーが（ノードヘッダーではなく）チェックボックス自体をクリックした場合にのみ、チェックボックスが切り替わります。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeViewBuilder.CheckOnClick(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.TreeView.CheckOnClick" /> を構成します。
            ユーザーがノードヘッダーをクリックしたときに、チェックボックスを切り替えるかどうかを決定する値を設定します。
            </summary>
            <remarks>
            このプロパティのデフォルト値は <b>false</b> です。この場合は、ユーザーが（ノードヘッダーではなく）チェックボックス自体をクリックした場合にのみ、チェックボックスが切り替わります。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartSeriesBaseBuilder`3.TooltipContent(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.ChartSeriesBase`1.TooltipContent" /> を構成します。
            特定のチャート系列のツールチップコンテンツを設定または取得します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartSeriesBaseBuilder`3.ItemFormatter(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.ChartSeriesBase`1.ItemFormatter" /> を構成します。
            特定の系列の itemFormatter クライアント側関数名を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnBaseBuilder`2.CssClassAll(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.ColumnBase.CssClassAll" /> を構成します。
            列または行内のすべてのセル（データとヘッダー）をレンダリングするときに使用する CSS クラス名を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ErrorTooltipBuilder">
            <summary>
                <see cref="T:C1.Web.Mvc.ErrorTooltip" /> を構成するためのビルダを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ErrorTooltipBuilder.#ctor(C1.Web.Mvc.ErrorTooltip)">
            <summary>
                <paramref name="obj" /> を構成するために 1 つの <see cref="T:C1.Web.Mvc.Fluent.ErrorTooltipBuilder" /> インスタンスを作成します。
            </summary>
            <param name="obj">構成する <see cref="T:C1.Web.Mvc.ErrorTooltip" /> オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TileBuilder`2.MaxResizeWidth(System.Int32)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Tile.MaxResizeWidth" />.
            Sets the default maximum width of the tile when resize.
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TileBuilder`2.MaxResizeHeight(System.Int32)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Tile.MaxResizeHeight" />.
            Sets the default maximum height of the tile when resize.
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.TooltipBaseBuilder`2">
            <summary>
                <see cref="T:C1.Web.Mvc.TooltipBase" /> を構成するためのビルダを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TooltipBaseBuilder`2.#ctor(`0)">
            <summary>
                <paramref name="obj" /> を構成するために 1 つの <see cref="T:C1.Web.Mvc.Fluent.TooltipBaseBuilder`2" /> インスタンスを作成します。
            </summary>
            <param name="obj">構成する <see cref="T:C1.Web.Mvc.TooltipBase" /> オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TooltipBaseBuilder`2.Content(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.TooltipBase.Content" /> を構成します。
            ツールチップのコンテンツを設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TooltipBaseBuilder`2.Gap(System.Int32)">
            <summary>
                <see cref="P:C1.Web.Mvc.TooltipBase.Gap" /> を構成します。
            ツールチップとターゲット要素の間の距離を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TooltipBaseBuilder`2.HideDelay(System.Int32)">
            <summary>
                <see cref="P:C1.Web.Mvc.TooltipBase.HideDelay" /> を構成します。
            マウスがターゲット要素から出てからツールチップを非表示にするまでの遅延（ミリ秒）を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TooltipBaseBuilder`2.IsContentHtml(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.TooltipBase.IsContentHtml" /> を構成します。
            ツールチップのコンテンツをプレーンテキストで表示するか、HTML として表示するかを設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TooltipBaseBuilder`2.ShowDelay(System.Int32)">
            <summary>
                <see cref="P:C1.Web.Mvc.TooltipBase.ShowDelay" /> を構成します。
            マウスがターゲット要素に入ってからツールチップを表示するまでの遅延（ミリ秒）を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TooltipBaseBuilder`2.Threshold(System.Int32)">
            <summary>
                <see cref="P:C1.Web.Mvc.TooltipBase.Threshold" /> を構成します。
            ツールチップを表示する範囲の要素からの最大距離を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TooltipBaseBuilder`2.OnClientPopup(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.TooltipBase.OnClientPopup" /> クライアントイベントを構成します。
            ツールチップコンテンツが表示される前に発生します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TooltipBaseBuilder`2.ShowAtMouse(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.TooltipBase.ShowAtMouse" /> を構成します。
            ツールチップをターゲット要素ではなくマウスの位置を基準にして配置するかどうかを決定する値を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TooltipBaseBuilder`2.CssClass(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.TooltipBase.CssClass" /> を構成します。
            ツールチップの CSS クラスを設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ValueFilterBuilder.ExclusiveValueSearch(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.ValueFilter.ExclusiveValueSearch" /> を構成します。
            フィルタが @see:ValueFilter.filterText プロパティによって選択された値のみを含むかどうかを決定する値を設定します。
            </summary>
            <remarks>
            このプロパティはデフォルトで true に設定されます。これは Excel の動作と一致します。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ValueFilterBuilder.DataMap(System.Action{C1.Web.Mvc.Fluent.DataMapBuilder})">
            <summary>
                <see cref="P:C1.Web.Mvc.ValueFilter.DataMap" /> を構成します。
            未加工の値を ValueFilter の表示値に変換するために使用される DataMap を設定します。
            </summary>
            <param name="build">ビルダ関数。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.ComboBoxBase`1.ShouldSerializeSelectedValue">
            <summary>
            SelectedValue プロパティをシリアライズするかどうかを指定します。
            </summary>
            <returns>
            true の場合、プロパティはシリアライズされます。
            そうでない場合は、シリアライズされません。
            </returns>
        </member>
        <member name="F:C1.Web.Mvc.ComboBoxBase`1._selectedValueIsSet">
            <summary>
            SelectedValuePath を使用して取得された SelectedValue の値を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.DropDown.InputType">
            <summary>
            コントロールによってホストされる HTML 入力要素の "type" 属性を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.AlternatingRowStep">
            <summary>
            「交互表示」行の間の通常行の数を決定する値を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.ErrorTip">
            <summary>
            FlexGrid のエラーツールチップを取得します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridFilter`1.ExclusiveValueSearch">
            <summary>
            フィルタが @see:ValueFilter.filterText プロパティによって選択された値のみを含むかどうかを決定する値を取得または設定します。
            </summary>
            <remarks>
            このプロパティはデフォルトで true に設定されます。これは Excel の動作と一致します。
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.InputMask.InputType">
            <summary>
            コントロールによってホストされる HTML 入力要素の "type" 属性を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.InputTime`1.IsEditable">
            <summary>
            値を編集するかどうかを示す値を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.MenuBase`1.CloseOnLeave">
            <summary>
            マウスが項目の上から移動したときに、自動的にメニューを閉じるかどうかを決定する値を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeView.ExpandOnLoad">
            <summary>
            ユーザーがノードヘッダーをクリックしたときに、チェックボックスを切り替えるかどうかを決定する値を取得または設定します。
            </summary>
            <remarks>
            このプロパティのデフォルト値は <b>false</b> です。この場合は、ユーザーが（ノードヘッダーではなく）チェックボックス自体をクリックした場合にのみ、チェックボックスが切り替わります。
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.TreeView.CheckOnClick">
            <summary>
            ユーザーがノードヘッダーをクリックしたときに、チェックボックスを切り替えるかどうかを決定する値を取得または設定します。
            </summary>
            <remarks>
            このプロパティのデフォルト値は <b>false</b> です。この場合は、ユーザーが（ノードヘッダーではなく）チェックボックス自体をクリックした場合にのみ、チェックボックスが切り替わります。
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.TreeView.CheckedMemberPath">
            <summary>
            ノードのオン状態に連結する 1 つまたは複数のプロパティの名前を取得または設定します。
            </summary>
            <remarks>
            パスは、文字列または文字列の配列である必要があります。
            </remarks>
        </member>
        <member name="M:C1.Web.Mvc.ColumnFilter.#ctor">
            <summary>
            1 つの <see cref="T:C1.Web.Mvc.ColumnFilter" /> インスタンスを作成します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.ColumnFilter.#ctor(System.Web.Mvc.HtmlHelper)">
            <summary>
            1 つの <see cref="T:C1.Web.Mvc.ColumnFilter" /> インスタンスを作成します。
            </summary>
            <param name="helper">HtmlHelper インスタンス。</param>
        </member>
        <member name="M:C1.Web.Mvc.ValueFilter.#ctor(System.Web.Mvc.HtmlHelper)">
            <summary>
            1 つの <see cref="T:C1.Web.Mvc.ValueFilter" /> インスタンスを作成します。
            </summary>
            <param name="helper">HtmlHelper インスタンス。</param>
        </member>
        <member name="P:C1.Web.Mvc.ValueFilter.ExclusiveValueSearch">
            <summary>
            フィルタが @see:ValueFilter.filterText プロパティによって選択された値のみを含むかどうかを決定する値を取得または設定します。
            </summary>
            <remarks>
            このプロパティはデフォルトで true に設定されます。これは Excel の動作と一致します。
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.ValueFilter.DataMap">
            <summary>
            未加工の値を ValueFilter の表示値に変換するために使用される DataMap を取得します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.ValueFilter.ShouldSerializeDataMap">
            <summary>
            DataMap プロパティをシリアライズするかどうかを指定します。
            </summary>
            <returns>
            true の場合、プロパティはシリアライズされます。
            そうでない場合は、シリアライズされません。
            </returns>
        </member>
        <member name="P:C1.Web.Mvc.ColumnBase.CssClassAll">
            <summary>
            列または行内のすべてのセル（データとヘッダー）をレンダリングするときに使用する CSS クラス名を取得または設定します。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.ErrorTooltip">
            <summary>
            エラーツールチップを表します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.SortDescription.SortNullsFirst">
            <summary>
            コレクションがソートされるときに、（ソート方向に関係なく）null 値を先頭と末尾の
            どちらに表示するかを決定する値を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Tile.MaxResizeWidth">
            <summary>
            サイズ変更時にタイルのデフォルトの最大幅を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Tile.MaxResizeHeight">
            <summary>
            サイズ変更時にタイルのデフォルトの最大の高さを取得または設定します。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.TooltipBase">
            <summary>
            ツールチップの基本クラス。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.TooltipBase.Content">
            <summary>
            ツールチップのコンテンツを取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.TooltipBase.Gap">
            <summary>
            ツールチップとターゲット要素の間の距離を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.TooltipBase.HideDelay">
            <summary>
            マウスがターゲット要素から出てからツールチップを非表示にするまでの遅延（ミリ秒）を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.TooltipBase.IsContentHtml">
            <summary>
            ツールチップのコンテンツをプレーンテキストで表示するか、HTML として表示するかを取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.TooltipBase.ShowDelay">
            <summary>
            マウスがターゲット要素に入ってからツールチップを表示するまでの遅延（ミリ秒）を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.TooltipBase.Threshold">
            <summary>
            ツールチップを表示する範囲の要素からの最大距離を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.TooltipBase.OnClientPopup">
            <summary>
            ツールチップコンテンツが表示される前に発生します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.TooltipBase.ShowAtMouse">
            <summary>
            ツールチップをターゲット要素ではなくマウスの位置を基準にして配置するかどうかを決定する値を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.TooltipBase.CssClass">
            <summary>
            ツールチップの CSS クラスを取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.DropDown`1.InputType">
            <summary>
            コントロールによってホストされる HTML 入力要素の "type" 属性を取得または設定します。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.FileManager">
            <summary>
            多数のビューおよび関連情報を 1 つの場所に集約した表示です。さまざまなデータを同時に比較および監視するために使用されます。多様なデータビューがすべて一度に表示されます。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.FileManager.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            1 つの <see cref="T:C1.Web.Mvc.FileManager" /> インスタンスを作成します。
            </summary>
            <param name="helper">HTML ヘルパー</param>
            <param name="selector">セレクタ</param>
        </member>
        <member name="P:C1.Web.Mvc.FileManager.HostUrl">
            <summary>
            サーバーをホストするマシンのホスト URL。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FileManager.InitPathAzure">
            <summary>
            クラウド Azure の初期パス。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FileManager.InitPathOneDrive">
            <summary>
            クラウド OneDrive の初期パス。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FileManager.InitPathAWS">
            <summary>
            クラウド Aws の初期パス。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FileManager.InitPathGoogleDrive">
            <summary>
            クラウド GoogleDrive の初期パス。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FileManager.InitPathDropBox">
            <summary>
            クラウド DropBox の初期パス。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FileManager.FileExtentionImageFormater">
            <summary>
            各ファイル拡張子の画像パスを返す関数。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DropDownBuilder`3.InputType(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.DropDown`1.InputType" /> を構成します。
            コントロールによってホストされる HTML 入力要素の "type" 属性を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartBaseBuilder`3.Legend(C1.Web.Mvc.Chart.LegendOrientation)">
            <summary>
                <see cref="P:C1.Web.Mvc.TreeMap`1.Legend" />を構成します。
            凡例の方向を設定します。
            </summary>
            <param name="orientation">向き。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="P:C1.Web.Mvc.ChartLegend.Orientation">
            <summary>
            凡例の方向を決定する値を取得または設定します。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Chart.LegendOrientation">
            <summary>
            要素の方向を指定します。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.LegendOrientation.Auto">
            <summary>
            方向は要素の位置に基づいて自動的に選択されます。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.LegendOrientation.Vertical">
            <summary>
            垂直方向
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.LegendOrientation.Horizontal">
            <summary>
            水平方向
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Gauge.ShowTickText">
            <summary>
            ゲージに各目盛りマークのテキストを表示するかどうかを決定するプロパティを取得または設定します。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.CollectionViewNavigator">
            <summary>
            CollectionView でレコード間を移動するための CollectionViewNavigator コントロール
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.CollectionViewNavigator.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            1 つの <see cref="T:C1.Web.Mvc.CollectionViewNavigator" /> インスタンスを作成します。
            </summary>
            <param name="helper">HTML ヘルパー</param>
            <param name="selector">セレクタ</param>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewNavigator.ByPage">
            <summary>
            項目間またはページ間を移動するかどうかを決定する値を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewNavigator.HeaderFormat">
            <summary>
            現在の項目/ページ値合計をコントロールヘッダーに表示するために使用される書式文字列を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewNavigator.RepeatButtons">
            <summary>
            次へ/前へボタンが繰り返しボタンとして動作し、ボタンを押したままにしている限り繰り返し起動されるかどうかを決定する値を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewNavigator.ItemsSourceId">
            <summary>
            この列で使用される ItemsSourceId を取得または設定し、このコントロールに対してどの CollectionViewService を使用するかを指定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.AutoRowHeights">
            <summary>
            データまたはグリッドレイアウトが変化したときに、グリッドの行が自動的にサイズ変更されるかどうかを決定する値を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.LazyRender">
            <summary>
            最後のレンダリングサイクルで更新されたセルのレンダリングをグリッドがスキップするかどうかを取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.RefreshOnEdit">
            <summary>
            セルが編集された後に、グリッドのすべてのセルをリフレッシュするかどうかを取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Popup.IsResizable">
            <summary>
            ポップアップの端をマウスでドラッグしてポップアップをサイズ変更できるかどうかを決定する値を取得または設定します。
            </summary>
            <remarks>
            ホスト要素の max-width、min-width、max-height、および min-height CSS プロパティを設定することで、ポップアップのサイズを制限できます。
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.RadialGauge.NeedleShape">
            <summary>
            ゲージの針要素の形状を決定する値を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.RadialGauge.NeedleLength">
            <summary>
            ポインタ範囲に対するゲージの針要素の長さを決定する値を取得または設定します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.GaugeBuilder`2.ShowTickText(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.Gauge.ShowTickText" /> を構成します。
            ゲージに各目盛りマークのテキストを表示するかどうかを決定するプロパティを設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.CollectionViewNavigatorBuilder">
            <summary>
                <see cref="T:C1.Web.Mvc.CollectionViewNavigator" /> を構成するためのビルダを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CollectionViewNavigatorBuilder.#ctor(C1.Web.Mvc.CollectionViewNavigator)">
            <summary>
                <paramref name="component" /> を構成するために 1 つの <see cref="T:C1.Web.Mvc.Fluent.CollectionViewNavigatorBuilder" /> インスタンスを作成します。
            </summary>
            <param name="component">構成する <see cref="T:C1.Web.Mvc.CollectionViewNavigator" /> オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CollectionViewNavigatorBuilder.ByPage(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.CollectionViewNavigator.ByPage" /> を構成します。
            項目間またはページ間を移動するかどうかを決定する値を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CollectionViewNavigatorBuilder.HeaderFormat(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.CollectionViewNavigator.HeaderFormat" /> を構成します。
            現在の項目/ページ値合計をコントロールヘッダーに表示するために使用される書式文字列を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CollectionViewNavigatorBuilder.RepeatButtons(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.CollectionViewNavigator.RepeatButtons" /> を構成します。
            次へ/前へボタンが繰り返しボタンとして動作し、ボタンを押したままにしている限り繰り返し起動されるかどうかを決定する値を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CollectionViewNavigatorBuilder.ItemsSourceId(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.CollectionViewNavigator.ItemsSourceId" /> を構成します。
            この列で使用される ItemsSourceId を設定し、このコントロールに対してどの CollectionViewService を使用するかを指定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.FileManagerBuilder">
            <summary>
                <see cref="T:C1.Web.Mvc.FileManager" /> を構成するためのビルダを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FileManagerBuilder.#ctor(C1.Web.Mvc.FileManager)">
            <summary>
                <paramref name="component" /> を構成するために 1 つの <see cref="T:C1.Web.Mvc.Fluent.FileManagerBuilder" /> インスタンスを作成します。
            </summary>
            <param name="component">構成する <see cref="T:C1.Web.Mvc.FileManager" /> オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FileManagerBuilder.HostUrl(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.FileManager.HostUrl" /> を構成します。
            サーバーをホストするマシンのホスト URL。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FileManagerBuilder.InitPathAzure(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.FileManager.InitPathAzure" /> を構成します。
            クラウド Azure の初期パス。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FileManagerBuilder.InitPathOneDrive(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.FileManager.InitPathOneDrive" /> を構成します。
            クラウド OneDrive の初期パス。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FileManagerBuilder.InitPathAWS(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.FileManager.InitPathAWS" /> を構成します。
            クラウド Aws の初期パス。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FileManagerBuilder.InitPathGoogleDrive(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.FileManager.InitPathGoogleDrive" /> を構成します。
            クラウド GoogleDrive の初期パス。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FileManagerBuilder.InitPathDropBox(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.FileManager.InitPathDropBox" /> を構成します。
            クラウド DropBox の初期パス。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FileManagerBuilder.FileExtentionImageFormater(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.FileManager.FileExtentionImageFormater" /> を構成します。
            各ファイル拡張子の画像パスを返す関数。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.AutoRowHeights(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.FlexGridBase`1.AutoRowHeights" /> を構成します。
            データまたはグリッドレイアウトが変化したときに、グリッドの行が自動的にサイズ変更されるかどうかを決定する値を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.LazyRender(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.FlexGridBase`1.LazyRender" /> を構成します。
            最後のレンダリングサイクルで更新されたセルのレンダリングをグリッドがスキップするかどうかを設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.RefreshOnEdit(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.FlexGridBase`1.RefreshOnEdit" /> を構成します。
            セルが編集された後に、グリッドのすべてのセルをリフレッシュするかどうかを設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PopupBuilder.IsResizable(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.Popup.IsResizable" /> を構成します。
            ポップアップの端をマウスでドラッグしてポップアップをサイズ変更できるかどうかを決定する値を設定します。
            </summary>
            <remarks>
            ホスト要素の max-width、min-width、max-height、および min-height CSS プロパティを設定することで、ポップアップのサイズを制限できます。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.RadialGaugeBuilder.NeedleShape(C1.Web.Mvc.NeedleShape)">
            <summary>
                <see cref="P:C1.Web.Mvc.RadialGauge.NeedleShape" /> を構成します。
            ゲージの針要素の形状を決定する値を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.RadialGaugeBuilder.NeedleLength(C1.Web.Mvc.NeedleLength)">
            <summary>
                <see cref="P:C1.Web.Mvc.RadialGauge.NeedleLength" /> を構成します。
            ポインタ範囲に対するゲージの針要素の長さを決定する値を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.CollectionViewNavigator(System.String)">
            <summary>
                <see cref="T:C1.Web.Mvc.CollectionViewNavigator" /> コントロールを作成して、
            指定されたセレクタに対応する DOM 要素にアタッチします。
            </summary>
            <param name="selector">
            セレクタを指定します。これはオプションです。
            設定されなかった場合は、デフォルトの DOM 要素が生成されます。
            </param>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.CollectionViewNavigatorBuilder" />。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.FileManager(System.String)">
            <summary>
                <see cref="T:C1.Web.Mvc.FileManager" /> コントロールを作成して、
            指定されたセレクタに対応する DOM 要素にアタッチします。
            </summary>
            <param name="selector">
            セレクタを指定します。これはオプションです。
            設定されなかった場合は、デフォルトの DOM 要素が生成されます。
            </param>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.FileManagerBuilder" />。</returns>
        </member>
        <member name="T:C1.Web.Mvc.NeedleLength">
            <summary>
            ポインタ範囲に対する針要素の長さを指定します。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.NeedleLength.Outer">
            <summary>
            針要素の長さは、ポインタ範囲の外側半径と同じです。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.NeedleLength.Middle">
            <summary>
            針要素の長さは、ポインタ範囲の内側半径と外側半径の中間です。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.NeedleLength.Inner">
            <summary>
            針要素の長さは、ポインタ範囲の内側半径と同じです。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.NeedleShape">
            <summary>
            ゲージの針要素に定義済みの図形を指定します。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.NeedleShape.None">
            <summary>
            定義済み図形なし。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.NeedleShape.Triangle">
            <summary>
            針要素の形状は、三角形になります。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.NeedleShape.Diamond">
            <summary>
            針要素の形状は、ひし形になります。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.NeedleShape.Hexagon">
            <summary>
            針要素の形状は、六角形になります。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.NeedleShape.Rectangle">
            <summary>
            針要素の形状は、長方形になります。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.NeedleShape.Arrow">
            <summary>
            針要素の形状は、矢印になります。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.NeedleShape.WideArrow">
            <summary>
            針要素の形状は、広い矢印になります。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.NeedleShape.Pointer">
            <summary>
            針要素の形状は、ポインタになります。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.NeedleShape.WidePointer">
            <summary>
            針要素の形状は、広いポインタになります。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.NeedleShape.Outer">
            <summary>
            針要素の形状は三角形で、オフセットして表示されます。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ErrorTooltip.IsContentHtml">
            <summary>
            ツールチップのコンテンツをプレーンテキストで表示するか、HTML として表示するかを取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ExtraOptions.Step">
            <summary>
            階段グラフオプションを取得します。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.StepOptions">
            <summary>
            階段グラフのオプション。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.StepOptions.Position">
            <summary>
            階段グラフの段の位置を指定します。'Start'、'Center'、または 'End' にする必要があります。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartLegendBuilder.Orientation(C1.Web.Mvc.Chart.LegendOrientation)">
            <summary>
                <see cref="P:C1.Web.Mvc.ChartLegend.Orientation" /> を構成します。
            凡例の方向を決定する値を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ErrorTooltipBuilder.IsContentHtml(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.ErrorTooltip.IsContentHtml" /> を構成します。
            ツールチップのコンテンツをプレーンテキストで表示するか、HTML として表示するかを設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ExtraOptionsBuilder.Step(System.Action{C1.Web.Mvc.Fluent.StepOptionsBuilder})">
            <summary>
                <see cref="P:C1.Web.Mvc.ExtraOptions.Step" /> を構成します。
            階段グラフオプションを設定します。
            </summary>
            <param name="build">ビルダ関数。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.StepOptionsBuilder">
            <summary>
                <see cref="T:C1.Web.Mvc.StepOptions" /> を構成するためのビルダを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.StepOptionsBuilder.#ctor(C1.Web.Mvc.StepOptions)">
            <summary>
                <paramref name="obj" /> を構成するために 1 つの <see cref="T:C1.Web.Mvc.Fluent.StepOptionsBuilder" /> インスタンスを作成します。
            </summary>
            <param name="obj">構成する <see cref="T:C1.Web.Mvc.StepOptions" /> オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.StepOptionsBuilder.Position(C1.Web.Mvc.StepPosition)">
            <summary>
                <see cref="P:C1.Web.Mvc.StepOptions.Position" /> を構成します。
            階段グラフの段の位置を指定します。'Start'、'Center'、または 'End' にする必要があります。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="F:C1.Web.Mvc.Chart.ChartType.Step">
            <summary>
            階段グラフを表示します。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.ChartType.StepSymbols">
            <summary>
            各データポイントにシンボルを使用する階段グラフを表示します。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.ChartType.StepArea">
            <summary>
            階段面グラフを表示します。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.StepPosition">
            <summary>
            階段グラフの段の位置を指定します。'Start'、'Center'、または 'End' にする必要があります。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.StepPosition.Start">
            <summary>
            開始
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.StepPosition.Center">
            <summary>
            中央
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.StepPosition.End">
            <summary>
            終了
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.SelectionMode.MultiRange">
            <summary>
            ［Ctrl］キーを押しながらマウスをクリックおよびドラッグすることで、複数の範囲を選択できます。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridFilterBuilder`1.ExclusiveValueSearch(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.ValueFilter.ExclusiveValueSearch" /> を構成します。
            フィルタが @see:ValueFilter.filterText プロパティによって選択された値のみを含むかどうかを決定する値を設定します。
            </summary>
            <remarks>
            このプロパティはデフォルトで true に設定されます。これは Excel の動作と一致します。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="P:C1.Web.Mvc.BaseCollectionViewService`1.RefreshOnEdit">
            <summary>
            CollectionView が、アイテムの編集後に結果（ソート、フィルター、およびグループ化を適用する）を自動的に更新するかどうかを決定する値を取得または設定します。
            </summary>
            <remarks>
            このプロパティはデフォルトで <b>true</b> に設定されます。これにより、
                        編集が完了した後にコレクションが常に正しくソート、フィルタリング、およびグループ化されるようにします。
            </remarks>
        </member>
        <member name="T:C1.Web.Mvc.FlexGridSearch">
            <summary>
            The FlexGridSearch コントロールにより、ユーザーは FlexGrid に表示されている項目をすばやく検索できます。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.FlexGridSearch.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            1つの<see cref="T:C1.Web.Mvc.FlexGridSearch" />インスタンスを作成します。
            </summary>
            <param name="helper">HTML ヘルパー</param>
            <param name="selector">セレクタ</param>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridSearch.Grid">
            <summary>
            この FlexGridSearch に接続している FlexGrid を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridSearch.Text">
            <summary>
            検索するテキストを取得または設定します。 テキストには、スペースで区切られている複数の用語を含めることができます。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridSearch.Delay">
            <summary>
            キーストロークが発生してから検索が実行されるまでの遅延（ミリ秒単位）を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridSearch.Placeholder">
            <summary>
            コントロールが空のときにヒントとして表示される文字列を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridSearch.CssMatch">
            <summary>
            検索語と一致するすべての部分をコンテンツで強調表示するために使用する CSSクラスの名前を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.DashboardLayout.OnClientLayoutChanged">
            <summary>
            レイアウトが変更されたときに発生します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FileManager.InitPath">
            <summary>
            Initial path of cloud. (obsolete) please use Root Folder and Container Name (of Azure) instead.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FileManager.CloudType">
            <summary>
            FileManagerがサポートするクラウドの種類を設定します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnBaseBuilder`2.Columns(System.Action{C1.Web.Mvc.Fluent.ListItemFactory{C1.Web.Mvc.Column,C1.Web.Mvc.Fluent.ColumnBuilder}})">
            <summary>
                <see cref="P:C1.Web.Mvc.ColumnBase.Columns" />を設定します。
            </summary>
            <param name="builder">ビルダアクション。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnBaseBuilder`2.ColumnGroups(System.Action{C1.Web.Mvc.Fluent.ListItemFactory{C1.Web.Mvc.Column,C1.Web.Mvc.Fluent.ColumnBuilder}})">
            <summary>
                <see cref="P:C1.Web.Mvc.ColumnBase.Columns" />を設定します。
            </summary>
            <param name="builder">ビルダアクション。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnBaseBuilder`2.Template(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.ColumnBase.Template" />を構成します。
                        この列のデータセルのHTMLコンテンツを生成するに使用されるテンプレートの文字列を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnBaseBuilder`2.CollapseTo(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.ColumnBase.CollapseTo" />を構成します。
                        グループが折りたたまれたときに表示されたままにする必要がある子列のバインディングを設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnBaseBuilder`2.IsCollapsed(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.ColumnBase.IsCollapsed" />を構成します。
                        列のグループが折りたたまれているかどうかを設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BaseCollectionViewServiceBuilder`3.RefreshOnEdit(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.BaseCollectionViewService`1.RefreshOnEdit" />を構成します。
                        CollectionView が、アイテムの編集後に結果（ソート、フィルター、およびグループ化を適用する）を自動的に更新するかどうかを決定する値を設定します。
            </summary>
            <remarks>
            このプロパティはデフォルトで <b>true</b> に設定されます。これにより、
                        編集が完了した後にコレクションが常に正しくソート、フィルタリング、およびグループ化されるようにします。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DashboardLayoutBuilder.OnClientLayoutChanged(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.DashboardLayout.OnClientLayoutChanged" /> クライアントイベントを構成します。
            レイアウトが変更されたときに発生します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FileManagerBuilder.InitPath(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FileManager.InitPath" />.
            Initial path of cloud. (obsolete) please use Root Folder and Container Name (of Azure) instead.
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FileManagerBuilder.CloudType(C1.Web.Mvc.CloudTypes)">
            <summary>
                <see cref="P:C1.Web.Mvc.FileManager.CloudType" />を構成します。
            FileManagerがサポートするクラウドの種類を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.SortingType(C1.Web.Mvc.Grid.AllowSorting)">
            <summary>
                <see cref="P:C1.Web.Mvc.FlexGridBase`1.SortingType" /> を構成します。
            列のヘッダーセルをクリックしたときにグリッドが列をソートする方法を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.CopyHeaders(C1.Web.Mvc.Grid.CopyHeader)">
            <summary>
                <see cref="P:C1.Web.Mvc.FlexGridBase`1.CopyHeaders" /> を構成します。
            コンテンツをクリップボードにコピーするときに、コピーされたヘッダーセルを設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.AllowPinning(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.FlexGridBase`1.AllowPinning" />を構成します。
            グリッドで、列ヘッダーに固定ボタンを追加するか、またその固定ボタンをクリックすると列の固定状態を切り替えるかどうかを設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.ColumnGroups(System.Action{C1.Web.Mvc.Fluent.ListItemFactory{C1.Web.Mvc.Column,C1.Web.Mvc.Fluent.ColumnBuilder}})">
            <summary>
                <see cref="P:C1.Web.Mvc.FlexGridBase`1.Columns" />を設定します。
            </summary>
            <param name="builder">ビルダアクション。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.DefaultTypeWidth(C1.Web.Mvc.Grid.DataType,System.Int32)">
            <summary>
            列タイプに基づいて自動生成されたグリッド列のデフォルトの幅を定義する静的なオブジェクト。
            </summary>
            <param name="dataType">列のdataType。</param>
            <param name="width">dataTypeを含む列のデフォルト幅。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.FlexGridSearchBuilder">
            <summary>
                <see cref="T:C1.Web.Mvc.FlexGridSearch" />を構成するビルダーを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridSearchBuilder.#ctor(C1.Web.Mvc.FlexGridSearch)">
            <summary>
                <paramref name="component" />を構成する1つの<see cref="T:C1.Web.Mvc.Fluent.FlexGridSearchBuilder" />インスタンスを作成します。
            </summary>
            <param name="component">構成される<see cref="T:C1.Web.Mvc.FlexGridSearch" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridSearchBuilder.Grid(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.FlexGridSearch.Grid" />を構成します。
            この FlexGridSearch に接続している FlexGrid を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridSearchBuilder.Text(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.FlexGridSearch.Text" />を構成します。
            検索するテキストを設定します。 テキストには、スペースで区切られている複数の用語を含めることができます。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridSearchBuilder.Delay(System.Int32)">
            <summary>
                <see cref="P:C1.Web.Mvc.FlexGridSearch.Delay" />を構成します。
            キーストロークが発生してから検索が実行されるまでの遅延（ミリ秒単位）を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridSearchBuilder.Placeholder(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.FlexGridSearch.Placeholder" />を構成します。
            コントロールが空のときにヒントとして表示される文字列を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridSearchBuilder.CssMatch(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.FlexGridSearch.CssMatch" />を構成します。
            検索語と一致するすべての部分をコンテンツで強調表示するために使用する 
CSSクラスの名前を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.FlexGridSearch(System.String)">
            <summary>
                <see cref="T:C1.Web.Mvc.FlexGridSearch" />コントロールを作成し、指定されたセレクターと一致するdom要素にアタッチします。
            </summary>
            <param name="selector">
            セレクタを指定します（オプション）。
            設定されていない場合、デフォルトのdom要素が生成されます。
            </param>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.FlexGridSearchBuilder" />。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SplitTileBuilder.MaxResizeWidth(System.Int32)">
            <summary>
                <see cref="P:C1.Web.Mvc.SplitTile.MaxResizeWidth" />を構成します。
            
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SplitTileBuilder.MaxResizeHeight(System.Int32)">
            <summary>
                <see cref="P:C1.Web.Mvc.SplitTile.MaxResizeHeight" />を構成します。
            
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.SortingType">
            <summary>
            列のヘッダーセルをクリックしたときにグリッドが列をソートする方法を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.DefaultTypeWidth">
            <summary>
            列タイプに基づいて自動生成されたグリッド列のデフォルトの幅を定義する静的なオブジェクトを取得します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.CopyHeaders">
            <summary>
            コンテンツをクリップボードにコピーするときに、コピーされたヘッダーセルを取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.AllowPinning">
            <summary>
            グリッドで、列ヘッダーに固定ボタンを追加するか、またその固定ボタンをクリックすると列の固定状態を切り替えるかどうかを取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ColumnBase.Helper">
            <summary>
            HtmlHelper オブジェクトを取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ColumnBase.Template">
            <summary>
            この列のデータセルのHTMLコンテンツを生成するに使用されるテンプレートの文字列を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ColumnBase.Columns">
            <summary>
            列内のグリッドの列コレクションを取得します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ColumnBase.CollapseTo">
            <summary>
            グループが折りたたまれたときに表示されたままにする必要がある子列のバインディングを取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ColumnBase.IsCollapsed">
            <summary>
            列のグループが折りたたまれているかどうかを取得または設定します。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.CloudTypes">
            <summary>
            サポートされているクラウドの種類を指定します。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.CloudTypes.Azure">
            <summary>
            Microsoft Azure。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.CloudTypes.AWS">
            <summary>
            アマゾン ウェブ サービス。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.CloudTypes.DropBox">
            <summary>
            ドロップボックス。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.CloudTypes.GoogleDrive">
            <summary>
            Google ドライブ。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.CloudTypes.OneDrive">
            <summary>
            Microsoft OneDrive。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.SplitTile.MaxResizeWidth">
            <summary></summary>
        </member>
        <member name="P:C1.Web.Mvc.SplitTile.MaxResizeHeight">
            <summary></summary>
        </member>
        <member name="T:C1.Web.Mvc.Grid.AllowSorting">
            <summary>
            グリッドのソート機能を定義する定数を指定します。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.AllowSorting.None">
            <summary>
            ユーザーは、列ヘッダーをクリックしてグリッドをソートすることはできません。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.AllowSorting.SingleColumn">
            <summary>
            ユーザーは、一度に1列ずつグリッドをソートすることができます。
            列ヘッダーをクリックすると、列がソートされるか、ソート方向が反転します。
            Ctrlキーを押しながらクリックすると、ソート状態が削除されます。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.AllowSorting.MultiColumn">
            <summary>
            ユーザーは、一度に複数の列でグリッドをソートすることができます。
            列ヘッダーをクリックすると、列がソートされるか、ソート方向が反転します。
            Ctrlキーを押しながらクリックすると、クリックした列のソート状態が削除されます。
            Ctrl + Shift +クリックすると、ソート全体が削除されます。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Grid.CopyHeader">
            <summary>
            グリッドでデータをクリップボードにコピーするときに、コピーされたヘッダーセルを定義する定数を指定します。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.CopyHeader.None">
            <summary>
            何もコピーしません。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.CopyHeader.Column">
            <summary>
            ヘッダー列をコピーします。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.CopyHeader.Row">
            <summary>
            ヘッダー行をコピーします。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.CopyHeader.All">
            <summary>
            列ヘッダーと行ヘッダーの両方をコピーします。
            </summary>
        </member>
        <member name="M:GrapeCity.Common.GcNetFxLicenseProvider`1.VerifyDesignTimeEnvironment">
            <summary>
              コンポーネントが設計時かどうかを確認するには、環境を確認します。 
            </summary>
            <returns>
                設計時の場合は<c>true</c>。 そうでない場合は<c>false</c>。
            </returns>
            <remarks>
              設計時に、IDEのバグのため、一部のコンポーネントはDesigntimeLicenseContextで作成されない現象が発生します。
               たとえば、WinForms DataSourceツールウィンドウからコントロールをドラッグするか、またはASP.NETテンプレートでWebコントロールを使用した場合、
               コントロールはランタイムライセンスの検証を行い、ライセンスがないことがわかりました。
               本現象を解決するには、環境を確認し、設計時のライセンス検証を再度行うかを決定します。
            </remarks>
        </member>
        <member name="T:GrapeCity.Common.Resources.LicenseResource">
            <summary>
              PowerToolsLicenseProviderのリソースが含まれています。
            </summary>
        </member>
        <member name="P:GrapeCity.Common.Resources.LicenseResource.ResourceManager">
            <summary>
              このクラスで使用されるキャッシュされた ResourceManager インスタンスを返します。
            </summary>
        </member>
        <member name="P:GrapeCity.Common.Resources.LicenseResource.Culture">
            <summary>
              この強力に型付けされたリソースクラスを使用するすべてのリソース参照に対して、現在のスレッドの CurrentUICulture プロパティをオーバーライドします。
            </summary>
        </member>
        <member name="P:GrapeCity.Common.Resources.LicenseResource.ErrorIcon">
            <summary>
              ライセンスダイアログのエラーアイコンを取得します。
            </summary>
        </member>
        <member name="P:GrapeCity.Common.Resources.LicenseResource.InfoIcon">
            <summary>
              ライセンスダイアログの情報アイコンを取得します。
            </summary>
        </member>
        <member name="P:GrapeCity.Common.Resources.LicenseResource.WarningIcon">
            <summary>
              ライセンスダイアログの警告アイコンを取得します。
            </summary>
        </member>
        <member name="P:GrapeCity.Common.Resources.LicenseResource.GrapeCityIcon">
            <summary>
              ライセンスダイアログのGrapeCityアイコンを取得します。
            </summary>
        </member>
        <member name="M:GrapeCity.Common.Resources.LicenseResource.GetString(System.String)">
            <summary>
              ローカライズされた文字列を取得します。
            </summary>
            <param name="name">
              文字列の名前。 <see cref="T:GrapeCity.Common.Resources.LicenseResource" /> の定数値値である可能性があります。
            </param>
            <returns>
              ローカライズ文字列。
            </returns>
        </member>
        <member name="M:GrapeCity.Common.Resources.LicenseResource.GetString(System.String,System.Object[])">
            <summary>
              ローカライズされた文字列を取得します。
            </summary>
            <param name="name">
              文字列の名前。 <see cref="T:GrapeCity.Common.Resources.LicenseResource" /> の定数値値である可能性があります。
            </param>
            <param name="args">
              文字列に使用されるデータ。
            </param>
            <returns>
              ローカライズ文字列。
            </returns>
        </member>
        <member name="M:GrapeCity.Common.Resources.LicenseResource.GetAssemblyFileVersion(System.Reflection.Assembly)">
            <summary>
              指定したアセンブリ ファイルのバージョンの説明を取得します。
            </summary>
            <param name="assembly">
              ファイルのバージョンの説明を取得する必要がある<see cref="T:System.Reflection.Assembly" />。
            </param>
            <returns>
              指定したアセンブリファイルのバージョンの説明を示す<see cref="T:System.String" />。
            </returns>
        </member>
        <member name="M:GrapeCity.Common.Resources.LicenseResource.GetAssemblyName(System.Reflection.Assembly)">
            <summary>
              指定したアセンブリの名前を取得します。
            </summary>
            <param name="assembly">
              名前を取得する必要がある<see cref="T:System.Reflection.Assembly" />。
            </param>
            <returns>
              指定したアセンブリの名前を表す <see cref="T:System.String" />。
            </returns>
            <remarks>
              Assembly.GetNameメソッドにはFileIO権限が必要なので、このメソッドを使用してアセンブリ名を取得してください。
            </remarks>
        </member>
        <member name="M:GrapeCity.Common.Resources.LicenseResource.FormatSerialKey(System.String)">
            <summary>
              「xxxx-xxxx-xxxx-xxxx-xxxx-xxxx」としてプロダクトキーを書式設定します。
            </summary>
            <param name="productKey">
              A <see cref="T:System.String" /> indicates the original product key which is a sequence of 24 digits.
            </param>
            <returns>
              プロダクトキーを示す読み取り可能なテキスト。
            </returns>
        </member>
        <member name="T:GrapeCity.Common.Resources.LicenseDialogKind">
            <summary>
              ライセンスダイアログの種類を表します。
            </summary>
        </member>
        <member name="F:GrapeCity.Common.Resources.LicenseDialogKind.Info">
            <summary>
              [情報]ダイアログ。トライアル版ライセンスを使用している場合に表示されます。
            </summary>
        </member>
        <member name="F:GrapeCity.Common.Resources.LicenseDialogKind.Warning">
            <summary>
              [警告]ダイアログ。トライアル版ライセンスの有効期限が切れている場合に表示されます。
            </summary>
        </member>
        <member name="F:GrapeCity.Common.Resources.LicenseDialogKind.Error">
            <summary>
              [エラー]ダイアログ。
            </summary>
        </member>
        <member name="T:GrapeCity.Common.Resources.LicenseDialogWebLinkTarget">
            <summary>
              ライセンスダイアログでリンクの対象 Webサイトを表します。
            </summary>
        </member>
        <member name="F:GrapeCity.Common.Resources.LicenseDialogWebLinkTarget.None">
            <summary>
              対象なし。
            </summary>
        </member>
        <member name="F:GrapeCity.Common.Resources.LicenseDialogWebLinkTarget.GotoWebFAQ">
            <summary>
              「http://www.grapecity.com/support/portal/」を参考してください。
            </summary>
        </member>
        <member name="F:GrapeCity.Common.Resources.LicenseDialogWebLinkTarget.GotoWebActivation">
            <summary>
              「http://www.grapecity.com/componentone」を参考してください。
            </summary>
        </member>
        <member name="F:GrapeCity.Common.Resources.LicenseDialogWebLinkTarget.GotoWebShop">
            <summary>
              「http://www.grapecity.com/pricing/componentone/」を参考してください。
            </summary>
        </member>
        <member name="T:GrapeCity.Common.WebFormLicenseProvider`1">
            <summary>
              WindowsフォームPowerToolsコンポーネントのライセンスプロバイダーを表します。
            </summary>
        </member>
        <member name="T:C1.Util.Licensing.C1AllowedCallerAttribute">
            <summary>
            この製品をライセンスなしで使用できるアセンブリを指定するために使用される属性。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.BaseCollectionViewService`1.SortNulls">
            <summary>
            null値のソート方法を決定する値を取得または設定します。
            </summary>
            <remarks>
            このプロパティはデフォルトで Last に設定されます。これにより、コレクションをソートすると、並べ替えの方向に関係なくNULL値が最後に表示されます。
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.ODataCollectionViewService`1.DeferCommits">
            <summary>
            ODataCollectionViewがコミットをデータベースに戻す値を取得または設定します。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.BooleanChecker`1">
            <summary>
            FlexGrid BooleanCheckerを設定するために使用されるエクステンダを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.BooleanChecker`1.#ctor(C1.Web.Mvc.FlexGridBase{`0})">
            <summary>
            1つの<see cref="T:C1.Web.Mvc.BooleanChecker`1" />インスタンスを作成します。
            </summary>
            <param name="grid">BooleanCheckerを所有するグリッド。</param>
        </member>
        <member name="T:C1.Web.Mvc.Selector`1">
            <summary>
            FlexGrid Selectorを設定するために使用されるエクステンダを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Selector`1.#ctor(C1.Web.Mvc.FlexGridBase{`0})">
            <summary>
            1つの<see cref="T:C1.Web.Mvc.Selector`1" />インスタンスを作成します。
            </summary>
            <param name="grid">Selectorを所有するグリッド。</param>
        </member>
        <member name="P:C1.Web.Mvc.FileManager.RootFolder">
            <summary>
            ルートフォルダのパス。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FileManager.ContainerName">
            <summary>
            Use only for Azure, OneDrive cloud.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FileManager.IsReadOnly">
            <summary>
            ユーザーがコントロールのコンテンツのみを読み取ることができるかどうかを示す値を取得または設定します。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.BooleanCheckerBuilder`1">
            <summary>
            BooleanCheckerのHTMLビルダを定義します。
            </summary>
            <typeparam name="T">データ項目タイプ。</typeparam>
            <summary>
                <see cref="T:C1.Web.Mvc.BooleanChecker`1" />を構成するビルダーを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BooleanCheckerBuilder`1.#ctor(C1.Web.Mvc.BooleanChecker{`0})">
            <summary>
            1つのBooleanCheckerBuilderインスタンスを作成します。
            </summary>
            <param name="extender">BooleanCheckerBuilderエクステンダ。</param>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.SelectorBaseBuilder`3">
            <summary>
            SelectorBaseのHTMLビルダを定義します。
            </summary>
            <typeparam name="T">データ項目タイプ。</typeparam>
            <summary>
                <see cref="T:C1.Web.Mvc.SelectorBase`1" />を構成するビルダーを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SelectorBaseBuilder`3.#ctor(`1)">
            <summary>
            1つのSelectorBaseBuilderインスタンスを作成します。
            </summary>
            <param name="extender">エクステンダ。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SelectorBaseBuilder`3.Column(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.SelectorBase`1.Column" />を構成します。
            
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SelectorBaseBuilder`3.ShowCheckAll(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.SelectorBase`1.ShowCheckAll" />.を構成します。
            列ヘッダーに「すべてオン」項目チェックボックスを表示するかどうかを決定する値を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SelectorBaseBuilder`3.OnClientColumnChanging(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.SelectorBase`1.OnClientColumnChanging" /> クライアントイベントを構成します。
            column プロパティの値が変化する前に発生します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SelectorBaseBuilder`3.OnClientColumnChanged(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.SelectorBase`1.OnClientColumnChanged" /> クライアントイベントを構成します。
            column プロパティの値が変化した後に発生します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SelectorBaseBuilder`3.OnClientItemChecked(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.SelectorBase`1.OnClientItemChecked" /> クライアントイベントを構成します。
            ユーザーがこの列の項目をチェックするときに発生します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.BooleanCheckerExtension">
            <summary>
            BooleanCheckerエクステンダを使用できるすべてのコントロールに 拡張メソッドを追加する静的クラスを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BooleanCheckerExtension.BooleanChecker``1(C1.Web.Mvc.Fluent.FlexGridBuilder{``0},System.Action{C1.Web.Mvc.Fluent.BooleanCheckerBuilder{``0}})">
            <summary>
            FlexGridにBooleanCheckerエクステンダを適用します。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="gridBuilder">指定されたFlexGridビルダ。</param>
            <param name="booleanCheckerBuilder">指定されたBooleanCheckerビルダ。</param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BooleanCheckerExtension.BooleanChecker``1(C1.Web.Mvc.Fluent.FlexGridBuilder{``0})">
            <summary>
            FlexGrid にデフォルトの BooleanChecker エクステンダを適用します。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="gridBuilder">指定されたFlexGridビルダ。</param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BooleanCheckerExtension.BooleanChecker(C1.Web.Mvc.Fluent.FlexGridBuilder{System.Object})">
            <summary>
            FlexGrid にデフォルトの BooleanChecker エクステンダを適用します。
            </summary>
            <param name="gridBuilder">指定されたFlexGridビルダ。</param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BooleanCheckerExtension.BooleanChecker(C1.Web.Mvc.Fluent.FlexGridBuilder{System.Object},System.Action{C1.Web.Mvc.Fluent.BooleanCheckerBuilder{System.Object}})">
            <summary>
            FlexGridにBooleanCheckerエクステンダを適用します。
            </summary>
            <param name="gridBuilder">指定されたFlexGridビルダ。</param>
            <param name="booleanCheckerBuilder">指定されたBooleanCheckerビルダ。</param>
            <returns></returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.SelectorBuilder`1">
            <summary>
            SelectorのHTMLビルダを定義します。
            </summary>
            <typeparam name="T">データ項目タイプ。</typeparam>
            <summary>
                <see cref="T:C1.Web.Mvc.Selector`1" />を構成するビルダーを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SelectorBuilder`1.#ctor(C1.Web.Mvc.Selector{`0})">
            <summary>
            1つのSelectorBuilderインスタンスを作成します。
            </summary>
            <param name="extender">Selectorエクステンダ。</param>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.SelectorExtension">
            <summary>
            Selectorエクステンダを使用できるすべてのコントロールに 拡張メソッドを追加する静的クラスを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SelectorExtension.Selector``1(C1.Web.Mvc.Fluent.FlexGridBuilder{``0},System.Action{C1.Web.Mvc.Fluent.SelectorBuilder{``0}})">
            <summary>
            FlexGridにSelectorエクステンダを適用します。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="gridBuilder">指定されたFlexGridビルダ。</param>
            <param name="selectorBuilder">指定されたSelectorビルダ。</param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SelectorExtension.Selector``1(C1.Web.Mvc.Fluent.FlexGridBuilder{``0})">
            <summary>
            FlexGrid にデフォルトの Selector エクステンダを適用します。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="gridBuilder">指定されたFlexGridビルダ。</param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SelectorExtension.Selector(C1.Web.Mvc.Fluent.FlexGridBuilder{System.Object})">
            <summary>
            FlexGrid にデフォルトの Selector エクステンダを適用します。
            </summary>
            <param name="gridBuilder">指定されたFlexGridビルダ。</param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SelectorExtension.Selector(C1.Web.Mvc.Fluent.FlexGridBuilder{System.Object},System.Action{C1.Web.Mvc.Fluent.SelectorBuilder{System.Object}})">
            <summary>
            FlexGridにSelectorエクステンダを適用します。
            </summary>
            <param name="gridBuilder">指定されたFlexGridビルダ。</param>
            <param name="selectorBuilder">指定されたSelectorビルダ。</param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnBaseBuilder`2.TemplateFunction(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.ColumnBase.TemplateFunction" />を構成します。
                        この列のデータセルのHTMLコンテンツを生成するに使用されるテンプレートの関数を設定します。
            </summary>
            <remarks>
            この書式設定関数は、任意のセルに任意のコンテンツを追加できます。グリッドセルの外観および動作に対して完全な柔軟性が提供されます。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnBaseBuilder`2.DataMapEditor(C1.Web.Mvc.Grid.DataMapEditor)">
            <summary>
                <see cref="P:C1.Web.Mvc.ColumnBase.DataMapEditor" />を構成します。
            この列または行でデータマップされたセルを編集するときに使用するエディターのタイプを示す値を取得または設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BaseCollectionViewServiceBuilder`3.SortNulls(C1.Web.Mvc.CollectionViewSortNulls)">
            <summary>
                <see cref="P:C1.Web.Mvc.BaseCollectionViewService`1.SortNulls" /> を構成します。
            null値のソート方法を決定する値を取得または設定します。
            </summary>
            <remarks>
            このプロパティはデフォルトで Last に設定されます。これにより、コレクションをソートすると、並べ替えの方向に関係なくNULL値が最後に表示されます。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ODataCollectionViewServiceBuilder`1.DeferCommits(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.ODataCollectionViewService`1.DeferCommits" /> を構成します。
            ODataCollectionViewがコミットをデータベースに戻す値を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DropDownBuilder`2.ClickAction(C1.Web.Mvc.ClickAction)">
            <summary>
                <see cref="P:C1.Web.Mvc.DropDown.ClickAction" /> を構成します。
            ユーザーがコントロールの入力要素をクリックしたときに実行する操作を決定する値を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DropDownBuilder`3.ClickAction(C1.Web.Mvc.ClickAction)">
            <summary>
                <see cref="P:C1.Web.Mvc.DropDown`1.ClickAction" /> を構成します。
            ユーザーがコントロールの入力要素をクリックしたときに実行する操作を決定する値を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FileManagerBuilder.RootFolder(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.FileManager.RootFolder" /> を構成します。
            ルートフォルダのパス。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FileManagerBuilder.ContainerName(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FileManager.ContainerName" />.
            Use only for Azure, OneDrive cloud.
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FileManagerBuilder.IsReadOnly(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.FileManager.IsReadOnly" /> を構成します。
            ユーザーがコントロールのコンテンツのみを読み取ることができるかどうかを示す値を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientPinningColumn(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.FlexGridBase`1.OnClientPinningColumn" /> クライアントイベントを構成します。
            列が固定されているときに発生します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientPinnedColumn(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.FlexGridBase`1.OnClientPinnedColumn" /> クライアントイベントを構成します。
            列が固定された後に発生します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.PinningType(C1.Web.Mvc.Grid.PinningType)">
            <summary>
                <see cref="P:C1.Web.Mvc.FlexGridBase`1.PinningType" />を構成します。
            グリッドで、列ヘッダーに固定ボタンを追加するか、またその固定ボタンをクリックすると列の固定状態を切り替えるかどうかを設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.BigCheckboxes(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.FlexGridBase`1.BigCheckboxes" /> を構成します。
            ブール列の編集に使用されるチェックボックスがセル幅全体をカバーするように拡張するかどうかを決定する値を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.PreserveWhiteSpace(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.FlexGridBase`1.PreserveWhiteSpace" /> を構成します。
            グリッドがセル内の空白をデータに表示されるとおりに保持するか、または空白を単一の空白文字に折りたたむかどうかを決定する値を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridGroupPanelBuilder`1.GroupDescriptionCreator(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.FlexGridGroupPanel`1.GroupDescriptionCreator" /> を構成します。
            ユーザーが列をグループにドラッグしたときにグループの説明を作成するために使用される作成関数を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexPieBaseBuilder`3.InnerText(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.FlexPieBase`1.InnerText" /> を構成します。
            円グラフの内側（円の中心）のテキストを設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexPieBaseBuilder`3.InnerTextStyle(System.Action{C1.Web.Mvc.Fluent.SVGStyleBuilder})">
            <summary>
                <see cref="P:C1.Web.Mvc.FlexPieBase`1.InnerTextStyle" />.を構成します。
            円グラフ内のテキストのスタイルを取得または設定します。
            </summary>
            <param name="build">ビルダ関数。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiSelectBuilder`1.ShowFilterInput(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.MultiSelect`1.ShowFilterInput" /> を構成します。
            表示される項目をフィルタするために、コントロールが項目の上に「フィルタ」入力を表示するかどうかを設定します。
            </summary>
            <remarks>
            このプロパティのデフォルト値はfalseです。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiSelectBuilder`1.CheckOnFilter(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.MultiSelect`1.CheckOnFilter" /> を構成します。
            フィルタテキストが変更されたときに、ドロップダウンの MultiSelectListBoxがすべてのフィルタされた項目を自動的に選択するかどうかを決定する値を設定します。
            </summary>
            <remarks>
            このプロパティのデフォルト値はtrueです。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiSelectBuilder`1.FilterInputPlaceholder(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.MultiSelect`1.FilterInputPlaceholder" /> を構成します。
            ドロップダウンのフィルタ入力要素に対してプレースホルダとして使用される文字列を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.MultiSelectListBoxBuilder`1">
            <summary>
                <see cref="T:C1.Web.Mvc.MultiSelectListBox`1" />を構成するビルダーを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiSelectListBoxBuilder`1.#ctor(C1.Web.Mvc.MultiSelectListBox{`0})">
            <summary>
                <paramref name="component" />を構成する1つの<see cref="T:C1.Web.Mvc.Fluent.MultiSelectListBoxBuilder`1" />インスタンスを作成します。
            </summary>
            <param name="component">構成される<see cref="T:C1.Web.Mvc.MultiSelectListBox`1" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiSelectListBoxBuilder`1.DisplayMemberPath(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.MultiSelectListBox`1.DisplayMemberPath" /> を構成します。
            項目の視覚表示として使用するプロパティの名前を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiSelectListBoxBuilder`1.CheckedMemberPath(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.MultiSelectListBox`1.CheckedMemberPath" /> を構成します。
           各項目の横に配置されるチェックボックスの制御に使用されるプロパティの名前を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiSelectListBoxBuilder`1.IsContentHtml(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.MultiSelectListBox`1.IsContentHtml" /> を構成します。
            リストに項目をプレーンテキストとして表示するか、HTML として表示するかを示す値を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiSelectListBoxBuilder`1.ShowGroups(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.MultiSelectListBox`1.ShowGroups" /> を構成します。
           データグループを区切るためにドロップダウンにグループヘッダー項目を含めるかどうかを決定する値を 設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiSelectListBoxBuilder`1.SelectAllLabel(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.MultiSelectListBox`1.SelectAllLabel" /> を構成します。
            ShowSelectAllCheckbox　プロパティがtrueに設定されている場合、表示される「すべて選択」チェックボックスのラベルとして使用する文字列を設定します。
            </summary>
            <remarks>
            このプロパティはデフォルトでnullに設定されます。
                        これにより、コントロールには、ローカライズ化された文字列 「すべて選択」が表示されます。.
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiSelectListBoxBuilder`1.ShowSelectAllCheckbox(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.MultiSelectListBox`1.ShowSelectAllCheckbox" /> を構成します。
            コントロールのすべての項目を選択または選択解除するために、項目の上に「すべて選択」チェックボックスを表示するかどうかを設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiSelectListBoxBuilder`1.ShowFilterInput(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.MultiSelectListBox`1.ShowFilterInput" /> を構成します。
            表示される項目をフィルタするために、コントロールが項目の上に「フィルタ」入力を表示するかどうかを設定します。
            </summary>
            <remarks>
            このプロパティのデフォルト値はfalseです。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiSelectListBoxBuilder`1.FilterInputPlaceholder(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.MultiSelectListBox`1.FilterInputPlaceholder" /> を構成します。
            フィルタ入力要素に対してプレースホルダとして使用される文字列を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiSelectListBoxBuilder`1.CheckOnFilter(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.MultiSelectListBox`1.CheckOnFilter" /> を構成します。
            フィルタテキストが変更されたときに、ドロップダウンの MultiSelectListBoxがすべてのフィルタされた項目を自動的に選択するかどうかを決定する値を設定します。
            </summary>
            <remarks>
            このプロパティのデフォルト値はtrueです。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiSelectListBoxBuilder`1.OnClientCheckedItemsChanged(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.MultiSelectListBox`1.OnClientCheckedItemsChanged" /> クライアントイベントを構成します。
            @see:checkedItems プロパティの値が変更されたときに発生します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.MultiSelectListBox``1(System.String)">
            <summary>
                <see cref="T:C1.Web.Mvc.MultiSelectListBox`1" />コントロールを作成し、指定されたセレクターと一致するdom要素にアタッチします。
            </summary>
            <typeparam name="T">データ項目タイプ。</typeparam>
            <param name="selector">
            セレクタを指定します（オプション）。
            設定されていない場合、デフォルトのdom要素が生成されます。
            </param>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.MultiSelectListBoxBuilder`1" />。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.MultiSelectListBox(System.String)">
            <summary>
                <see cref="T:C1.Web.Mvc.MultiSelectListBox`1" />コントロールを作成し、指定されたセレクターと一致するdom要素にアタッチします。
            </summary>
            <param name="selector">
            セレクタを指定します（オプション）。
            設定されていない場合、デフォルトのdom要素が生成されます。
            </param>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.MultiSelectListBoxBuilder`1" />。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.BreakEvenBuilder`1">
            <summary>
                <see cref="T:C1.Web.Mvc.BreakEven`1" />を構成するビルダーを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BreakEvenBuilder`1.#ctor(C1.Web.Mvc.BreakEven{`0})">
            <summary>
                <paramref name="obj" />を構成する1つの<see cref="T:C1.Web.Mvc.Fluent.BreakEvenBuilder`1" />インスタンスを作成します。
            </summary>
            <param name="obj">構成される<see cref="T:C1.Web.Mvc.BreakEven`1" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BreakEvenBuilder`1.FixedCost(System.Int32)">
            <summary>
                <see cref="P:C1.Web.Mvc.BreakEven`1.FixedCost" /> を構成します。
            固定費の値を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BreakEvenBuilder`1.VariableCost(System.Int32)">
            <summary>
                <see cref="P:C1.Web.Mvc.BreakEven`1.VariableCost" /> を構成します。
            変動費の値を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BreakEvenBuilder`1.SalesPrice(System.Int32)">
            <summary>
                <see cref="P:C1.Web.Mvc.BreakEven`1.SalesPrice" /> を構成します。
            販売価格の値を取得または設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BreakEvenBuilder`1.Styles(System.Action{C1.Web.Mvc.Fluent.BreakEvenStylesBuilder})">
            <summary>
                <see cref="P:C1.Web.Mvc.BreakEven`1.Styles" /> を構成します。
            損益分岐グラフのスタイルを取得または設定します。
            </summary>
            <param name="build">ビルダ関数。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.BreakEvenStylesBuilder">
            <summary>
                <see cref="T:C1.Web.Mvc.BreakEvenStyles" />を構成するビルダーを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BreakEvenStylesBuilder.#ctor(C1.Web.Mvc.BreakEvenStyles)">
            <summary>
                <paramref name="obj" />を構成する1つの<see cref="T:C1.Web.Mvc.Fluent.BreakEvenStylesBuilder" />インスタンスを作成します。
            </summary>
            <param name="obj">構成される<see cref="T:C1.Web.Mvc.BreakEvenStyles" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BreakEvenStylesBuilder.FixedCost(System.Action{C1.Web.Mvc.Fluent.SVGStyleBuilder})">
            <summary>
                <see cref="P:C1.Web.Mvc.BreakEvenStyles.FixedCost" /> を構成します。
            固定費の線のスタイルを指定します。
            </summary>
            <param name="build">ビルダ関数。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BreakEvenStylesBuilder.VariableCost(System.Action{C1.Web.Mvc.Fluent.SVGStyleBuilder})">
            <summary>
                <see cref="P:C1.Web.Mvc.BreakEvenStyles.VariableCost" /> を構成します。
            変動費の線のスタイルを指定します。
            </summary>
            <param name="build">ビルダ関数。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BreakEvenStylesBuilder.TotalCost(System.Action{C1.Web.Mvc.Fluent.SVGStyleBuilder})">
            <summary>
                <see cref="P:C1.Web.Mvc.BreakEvenStyles.TotalCost" /> を構成します。
            合計費の線のスタイルを指定します。
            </summary>
            <param name="build">ビルダ関数。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BreakEvenStylesBuilder.SalesRevenue(System.Action{C1.Web.Mvc.Fluent.SVGStyleBuilder})">
            <summary>
                <see cref="P:C1.Web.Mvc.BreakEvenStyles.SalesRevenue" /> を構成します。
            販売収益の線のスタイルを指定します。
            </summary>
            <param name="build">ビルダ関数。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BreakEvenStylesBuilder.SafetyMargin(System.Action{C1.Web.Mvc.Fluent.SVGStyleBuilder})">
            <summary>
                <see cref="P:C1.Web.Mvc.BreakEvenStyles.SafetyMargin" /> を構成します。
            安全マージン領域のスタイルを指定します。
            </summary>
            <param name="build">ビルダ関数。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BreakEvenStylesBuilder.MarginalProfit(System.Action{C1.Web.Mvc.Fluent.SVGStyleBuilder})">
            <summary>
                <see cref="P:C1.Web.Mvc.BreakEvenStyles.MarginalProfit" /> を構成します。
            限界利益の線のスタイルを指定します。
            </summary>
            <param name="build">ビルダ関数。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BreakEvenStylesBuilder.BreakEven(System.Action{C1.Web.Mvc.Fluent.SVGStyleBuilder})">
            <summary>
                <see cref="P:C1.Web.Mvc.BreakEvenStyles.BreakEven" /> を構成します。
            損益分岐マーカーのスタイルを指定します。
            </summary>
            <param name="build">ビルダ関数。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SeriesListFactory`5.AddBreakEven">
            <summary>
            損益分岐系列を系列リストに追加します。
            </summary>
            <returns>系列ビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SeriesListFactory`5.AddBreakEven(System.String)">
            <summary>
            損益分岐系列を系列リストに追加します。
            </summary>
            <param name="name">系列の名前</param>
            <returns>系列ビルダ</returns>
        </member>
        <member name="T:C1.Web.Mvc.BreakEvenStyles">
            <summary>
            損益分岐系列でサポートされるスタイル。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.BreakEvenStyles.#ctor">
            <summary>
            1つの<see cref="T:C1.Web.Mvc.BreakEvenStyles" />インスタンスを作成します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.BreakEvenStyles.FixedCost">
            <summary>
            固定費の線のスタイルを指定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.BreakEvenStyles.VariableCost">
            <summary>
            変動費の線のスタイルを指定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.BreakEvenStyles.TotalCost">
            <summary>
            合計コストの線のスタイルを指定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.BreakEvenStyles.SalesRevenue">
            <summary>
            販売収益の線のスタイルを指定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.BreakEvenStyles.SafetyMargin">
            <summary>
            安全マージン領域のスタイルを指定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.BreakEvenStyles.MarginalProfit">
            <summary>
            限界利益の線のスタイルを指定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.BreakEvenStyles.BreakEven">
            <summary>
            損益分岐マーカーのスタイルを指定します。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.CollectionViewSortNulls">
            <summary>
            null値のソート方法を定義する定数を指定します。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.CollectionViewSortNulls.Natural">
            <summary>
            null値は自然な順序でソートされます（最初は昇順、最後は降順でソートします）。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.CollectionViewSortNulls.First">
            <summary>
            null値が最初に表示されます（ソート順序に関係なく）。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.CollectionViewSortNulls.Last">
            <summary>
            null値が最後に表示されます（ソート順序に関係なく）。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.DropDown.ClickAction">
            <summary>
            ユーザーがコントロールの入力要素をクリックしたときに実行する操作を決定する値を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.DropDown`1.ClickAction">
            <summary>
            ユーザーがコントロールの入力要素をクリックしたときに実行する操作を決定する値を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientPinningColumn">
            <summary>
            列が固定されるときに発生します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientPinnedColumn">
            <summary>
            列がサイズ固定されるときに発生します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.PinningType">
            <summary>
            グリッドで、列ヘッダーに固定ボタンを追加するか、またその固定ボタンをクリックすると列の固定状態を切り替えるかどうかを取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.BigCheckboxes">
            <summary>
            ブール列の編集に使用されるチェックボックスがセル幅全体をカバーするように拡張するかどうかを決定する値を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.PreserveWhiteSpace">
            <summary>
            グリッドがセル内の空白をデータに表示されるとおりに保持するか、または空白を単一の空白文字に折りたたむかどうかを決定する値を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridGroupPanel`1.GroupDescriptionCreator">
            <summary>
            ユーザーが列をグループにドラッグしたときにグループの説明を作成するために使用される作成関数を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexPieBase`1.InnerText">
            <summary>
            円グラフの内側（円の中心）のテキストを取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexPieBase`1.InnerTextStyle">
            <summary>
            円グラフ内のテキストのスタイルを取得または設定します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.FlexPieBase`1.ShouldSerializeInnerTextStyle">
            <summary>
            InnerTextStyle プロパティをシリアライズするかどうかを指定します。
            </summary>
            <returns>
            trueの場合、プロパティはシリアライズされます。 そうでない場合は、シリアライズされません。
            </returns>
        </member>
        <member name="P:C1.Web.Mvc.MultiSelect`1.ShowFilterInput">
            <summary>
            表示される項目をフィルタするために、コントロールが項目の上に「フィルタ」入力を表示するかどうかを取得または設定します。
            </summary>
            <remarks>
            このプロパティのデフォルト値はfalseです。
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.MultiSelect`1.CheckOnFilter">
            <summary>
            フィルタテキストが変更されたときに、ドロップダウンの MultiSelectListBox がすべてのフィルタされた項目を自動的に選択するかどうかを決定する値を取得または設定します。
            </summary>
            <remarks>
            このプロパティのデフォルト値はtrueです。
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.MultiSelect`1.FilterInputPlaceholder">
            <summary>
            ドロップダウンのフィルタ入力要素に対してプレースホルダとして使用される文字列を取得または設定します。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.MultiSelectListBox`1">
            <summary>
            MultiSelectListBoxコントロールは、プレーンテキストまたはHTMLを含む項目のリストを表示し、ユーザーが複数の項目を選択できるようにします。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.MultiSelectListBox`1.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            1つの<see cref="T:C1.Web.Mvc.MultiSelectListBox`1" />インスタンスを作成します。
            </summary>
            <param name="helper">HTML ヘルパー</param>
            <param name="selector">セレクタ</param>
        </member>
        <member name="P:C1.Web.Mvc.MultiSelectListBox`1.DisplayMemberPath">
            <summary>
            項目の視覚表示として使用するプロパティの名前を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.MultiSelectListBox`1.CheckedMemberPath">
            <summary>
            各項目の横に配置されるチェックボックスの制御に使用されるプロパティの名前を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.MultiSelectListBox`1.IsContentHtml">
            <summary>
            リストに項目をプレーンテキストとして表示するか、HTML として表示するかを示す値を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.MultiSelectListBox`1.ShowGroups">
            <summary>
            データグループを区切るためにドロップダウンにグループヘッダー項目を含めるかどうかを決定する値を 取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.MultiSelectListBox`1.SelectAllLabel">
            <summary>
            ShowSelectAllCheckbox　プロパティがtrueに設定されている場合、表示される「すべて選択」チェックボックスのラベルとして使用する文字列を取得または設定します。
            </summary>
            <remarks>
            このプロパティはデフォルトでnullに設定されます。
                        これにより、コントロールには、ローカライズ化された文字列 「すべて選択」が表示されます。.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.MultiSelectListBox`1.ShowSelectAllCheckbox">
            <summary>
            コントロールのすべての項目を選択または選択解除するために、項目の上に「すべて選択」チェックボックスを表示するかどうかを取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.MultiSelectListBox`1.ShowFilterInput">
            <summary>
            表示される項目をフィルタするために、コントロールが項目の上に「フィルタ」入力を表示するかどうかを取得または設定します。
            </summary>
            <remarks>
            このプロパティのデフォルト値はfalseです。
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.MultiSelectListBox`1.FilterInputPlaceholder">
            <summary>
            {@link MultiSelectListBox}のフィルタ入力要素に対してプレースホルダとして使用される文字列を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.MultiSelectListBox`1.CheckOnFilter">
            <summary>
            フィルタテキストが変更されたときに、ドロップダウンの MultiSelectListBox がすべてのフィルタされた項目を自動的に選択するかどうかを決定する値を取得または設定します。
            </summary>
            <remarks>
            このプロパティのデフォルト値はtrueです。
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.MultiSelectListBox`1.OnClientCheckedItemsChanged">
            <summary>
            @see:checkedItems プロパティの値が変更されたときに発生します。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.SelectorBase`1">
            <summary>
            セレクターのベースとしてエクステンダーを定義します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.SelectorBase`1.Column">
            <summary></summary>
        </member>
        <member name="P:C1.Web.Mvc.SelectorBase`1.ShowCheckAll">
            <summary>
            列ヘッダーに「すべてオン」項目チェックボックスを表示するかどうかを決定する値を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.SelectorBase`1.OnClientColumnChanging">
            <summary>
            column プロパティの値が変化する前に発生します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.SelectorBase`1.OnClientColumnChanged">
            <summary>
            column プロパティの値が変化した後に発生します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.SelectorBase`1.OnClientItemChecked">
            <summary>
            ユーザーがこの列の項目をチェックするときに発生します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.SelectorBase`1.#ctor(C1.Web.Mvc.FlexGridBase{`0})">
            <summary>
            1つの<see cref="T:C1.Web.Mvc.SelectorBase`1" />インスタンスを作成します。
            </summary>
            <param name="grid">SelectorBaseを拡張するエクステンダーを所有するグリッド。</param>
        </member>
        <member name="P:C1.Web.Mvc.ColumnBase.TemplateFunction">
            <summary>
            この列のデータセルのHTMLコンテンツを生成するに使用されるテンプレートの関数を取得または設定します。
            </summary>
            <remarks>
            この書式設定関数は、任意のセルに任意のコンテンツを追加できます。グリッドセルの外観および動作に対して完全な柔軟性が提供されます。
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.ColumnBase.DataMapEditor">
            <summary>
            この列または行でデータマップされたセルを編集するときに使用するエディターのタイプを示す値を取得または設定します。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.ClickAction">
            <summary>
            ユーザーがコントロールの入力要素をクリックしたときに実行する操作を定義する定数を指定します。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.ClickAction.Select">
            <summary>
            入力要素の内容を選択します。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.ClickAction.Open">
            <summary>
            ドロップダウンを開きます。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.ClickAction.Toggle">
            <summary>
            ドロップダウンを切り替えます。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.CloudTypes.LocalStorage">
            <summary>
            LocalStorage
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.BreakEven`1">
            <summary>
            損益分岐グラフの系列を表します。
            </summary>
            <remarks>
            損益分岐点グラフは、合計コストが販売と等しくなる販売量レベルを示すグラフです。スタイルプロパティを使用して、損益分岐点グラフをカスタマイズします。nameプロパティには、凡例エントリとして表示されるコンマ区切りの名前が含まれます。
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.BreakEven`1.FixedCost">
            <summary>
            固定費の値を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.BreakEven`1.VariableCost">
            <summary>
            変動費の値を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.BreakEven`1.SalesPrice">
            <summary>
            販売価格の値を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.BreakEven`1.Styles">
            <summary>
            損益分岐グラフのスタイルを取得または設定します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.BreakEven`1.#ctor(C1.Web.Mvc.FlexChartCore{`0})">
            <summary>
            1つの<see cref="T:C1.Web.Mvc.BreakEven`1" />インスタンスを作成します。
            </summary>
            <param name="owner">この系列を所有するオーナー。</param>
        </member>
        <member name="P:C1.Web.Mvc.BreakEven`1.ExtraSeriesTypeName">
            <summary>
            系列名を取得します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.SortDescription.SortNulls">
            <summary>
            null値のソート方法を決定する値を取得または設定します。
            </summary>
            <remarks>
            このプロパティはデフォルトで <b>Last</b> に設定されます。
                       これにより、コレクションをソートすると、並べ替えの方向に関係なくNULL値が最後に表示されます。
                        この動作はExcelと同じです。
            </remarks>
        </member>
        <member name="T:C1.Web.Mvc.Grid.PinningType">
            <summary>
            単一の列または列範囲の固定/固定解除を可能にする定数を指定します。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.PinningType.None">
            <summary>
            ユーザーは列を固定できません。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.PinningType.SingleColumn">
            <summary>
            ユーザーは、一度に1つの列の固定と固定解除を行うことができます（プロセス内で移動する可能性があります）。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.PinningType.ColumnRange">
            <summary>
            ユーザーは、列の範囲の固定と固定解除できます（固定または固定解除されている場合、列は移動しません）。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.PinningType.Both">
            <summary>
            ユーザーは、1つの列または列の範囲を固定および固定解除できます（Shiftキーの使用）。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Grid.DataMapEditor">
            <summary>
            データマップされた列で使用されるエディターのタイプを定義する定数を指定します。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.DataMapEditor.AutoComplete">
            <summary>
            オートコンプリートと検証を備えた入力要素を使用します。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.DataMapEditor.DropDownList">
            <summary>
            オートコンプリート、検証、およびドロップダウンリストを備えた入力要素を使用します。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.DataMapEditor.RadioButtons">
            <summary>
            マウスとキーボードをサポートするラジオボタンを使用します。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.PopupTrigger.ClickOwner">
            <summary>
            ユーザーがオーナ要素をクリックしたとき。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.PopupTrigger.ClickPopup">
            <summary>
            ユーザーがポップアップをクリックしたとき。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.PopupTrigger.BlurOwner">
            <summary>
            オーナ要素がフォーカスを失ったとき。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.PopupTrigger.BlurPopup">
            <summary>
            ポップアップがフォーカスを失ったとき。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.PopupTrigger.DownOwner">
            <summary>
            オーナ要素の上でマウスボタンが押されたとき。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.PopupTrigger.DownPopup">
            <summary>
            ポップアップの上でマウスボタンが押されたとき。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.PopupTrigger.Down">
            <summary>
            オーナ要素またはポップアップの上でマウスボタンが押されたとき。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.PopupTrigger.EnterOwner">
            <summary>
            マウスがオーナ要素に入ったとき。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.PopupTrigger.EnterPopup">
            <summary>
            マウスがポップアップに入ったとき。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.PopupTrigger.Enter">
            <summary>
            マウスがオーナ要素またはポップアップに入ったとき。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.PopupTrigger.LeaveOwner">
            <summary>
            マウスがオーナ要素から離れたとき。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.PopupTrigger.LeavePopup">
            <summary>
            マウスがポップアップから離れたとき。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.PopupTrigger.Leave">
            <summary>
            マウスがオーナ要素またはポップアップから離れたとき。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.BarcodeBase">
            <summary>
            すべてのバーコードコントロールクラスの基本（抽象）クラス。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.BarcodeBase.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            1つの<see cref="T:C1.Web.Mvc.BarcodeBase" />インスタンスを作成します。
            </summary>
            <param name="helper">HTML ヘルパー</param>
            <param name="selector">セレクター</param>
        </member>
        <member name="P:C1.Web.Mvc.BarcodeBase.Value">
            <summary>
            コントロールによって描画された現在のコード値を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.BarcodeBase.QuietZone">
            <summary>
            バーコードシンボルの周囲のクワイエットゾーン（空白の余白）のサイズを取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.BarcodeBase.RenderType">
            <summary>
            コントロールの描画の種類を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.BarcodeBase.Color">
            <summary>
            コントロールの描画に使用される前景色を取得または設定します。
            </summary>
            <remarks>
            このプロパティのデフォルト値はBlackです。
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.BarcodeBase.BackgroundColor">
            <summary>
            コントロールの描画に使用される背景色を取得または設定します。
            </summary>
            <remarks>
            このプロパティのデフォルト値はWhiteです。
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.BarcodeBase.HideExtraChecksum">
            <summary>
            コントロールのラベルテキストにチェックディジットを表示するかどうかを示します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.BarcodeBase.Font">
            <summary>
            コントロールのラベルテキストのフォント情報を取得または設定します。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Codabar">
            <summary>
            Codabar バーコードのタイプを描画するためのコントロールを表します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Codabar.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            1つの<see cref="T:C1.Web.Mvc.Codabar" />インスタンスを作成します。
            </summary>
            <param name="helper">HTML ヘルパー</param>
            <param name="selector">セレクター</param>
        </member>
        <member name="P:C1.Web.Mvc.Codabar.AutoWidth">
            <summary>
            コントロールの幅がValueの長さに応じて自動的に変化するかどうかを示す値を取得または設定します。
            </summary>
            <remarks>
            このプロパティをfalseに設定する場合、コントロールに適切な* CSS幅*が設定されていることを確認する必要があります。
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.Codabar.AutoWidthZoom">
            <summary>
            自動計算されたコントロールの幅に適用されるズーム倍率を取得または設定します。
            </summary>
            <remarks>
            このプロパティは、AutoWidthプロパティがtrueに設定されている場合にのみ有効になります。
                         1以上の任意の数値を使用できます。
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.Codabar.ShowLabel">
            <summary>
            シンボル下に値を描画するかどうかを示します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Codabar.CheckDigit">
            <summary>
            シンボルがLuhn アルゴリズムのチェックディジットを必要とするかどうかを示します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Codabar.LabelPosition">
            <summary>
            コントロールの値を描画する位置を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Codabar.NwRatio">
            <summary>
            コントロールの細バーと太バーの比率を取得または設定します。
            </summary>
            <remarks>
            このプロパティの値は1:2または1:3に設定することができます。
            </remarks>
        </member>
        <member name="T:C1.Web.Mvc.Code39">
            <summary>
            Code39 バーコードのタイプを描画するためのコントロールを表します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Code39.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            1つの<see cref="T:C1.Web.Mvc.Code39" />インスタンスを作成します。
            </summary>
            <param name="helper">HTML ヘルパー</param>
            <param name="selector">セレクター</param>
        </member>
        <member name="P:C1.Web.Mvc.Code39.AutoWidth">
            <summary>
            コントロールの幅がValueの長さに応じて自動的に変化するかどうかを示す値を取得または設定します。
            </summary>
            <remarks>
            このプロパティをfalseに設定する場合、コントロールに適切な* CSS幅*が設定されていることを確認する必要があります。
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.Code39.AutoWidthZoom">
            <summary>
            自動計算されたコントロールの幅に適用されるズーム倍率を取得または設定します。
            </summary>
            <remarks>
            このプロパティは、AutoWidthプロパティがtrueに設定されている場合にのみ有効になります。
                         1以上の任意の数値を使用できます。
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.Code39.ShowLabel">
            <summary>
            シンボル下に値を描画するかどうかを示します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Code39.CheckDigit">
            <summary>
            シンボルがLuhn アルゴリズムのチェックディジットを必要とするかどうかを示します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Code39.FullAscii">
            <summary>
            シンボルがすべての128 ASCII文字のエンコーディングを有効にするかどうかを示します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Code39.LabelPosition">
            <summary>
            コントロールの値を描画する位置を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Code39.NwRatio">
            <summary>
            コントロールの細バーと太バーの比率を取得または設定します。
            </summary>
            <remarks>
            このプロパティの値は1:2または1:3に設定することができます。
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.Code39.LabelWithStartAndStopCharacter">
            <summary>
            ラベルに開始文字と終了文字を表示するかどうかを示します。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Code128">
            <summary>
            Code128 バーコードのタイプを描画するためのコントロールを表します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Code128.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            1つの<see cref="T:C1.Web.Mvc.Code128" />インスタンスを作成します。
            </summary>
            <param name="helper">HTML ヘルパー</param>
            <param name="selector">セレクター</param>
        </member>
        <member name="P:C1.Web.Mvc.Code128.AutoWidth">
            <summary>
            コントロールの幅がValueの長さに応じて自動的に変化するかどうかを示す値を取得または設定します。
            </summary>
            <remarks>
            このプロパティをfalseに設定する場合、コントロールに適切な* CSS幅*が設定されていることを確認する必要があります。
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.Code128.AutoWidthZoom">
            <summary>
            自動計算されたコントロールの幅に適用されるズーム倍率を取得または設定します。
            </summary>
            <remarks>
            このプロパティは、AutoWidthプロパティがtrueに設定されている場合にのみ有効になります。
                         1以上の任意の数値を使用できます。
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.Code128.ShowLabel">
            <summary>
            シンボル下に値を描画するかどうかを示します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Code128.CodeSet">
            <summary>
            このコントロールで使用されるコードセットの種類を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Code128.LabelPosition">
            <summary>
            コントロールの値を描画する位置を取得または設定します。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.EanBase">
            <summary>
            Ean8およびEan13のバーコードコントロールクラスの基本（抽象）クラス。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.EanBase.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            1つの<see cref="T:C1.Web.Mvc.EanBase" />インスタンスを作成します。
            </summary>
            <param name="helper">HTML ヘルパー</param>
            <param name="selector">セレクター</param>
        </member>
        <member name="P:C1.Web.Mvc.EanBase.ShowLabel">
            <summary>
            シンボル下に値を描画するかどうかを示します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.EanBase.LabelPosition">
            <summary>
            コントロールの値を描画する位置を取得または設定します。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Ean8">
            <summary>
            EAN-8 を描画するためのコントロールを表します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Ean8.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            1つの<see cref="T:C1.Web.Mvc.Ean8" />インスタンスを作成します。
            </summary>
            <param name="helper">HTML ヘルパー</param>
            <param name="selector">セレクター</param>
        </member>
        <member name="T:C1.Web.Mvc.Ean13">
            <summary>
            EAN-13 を描画するためのコントロールを表します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Ean13.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            1つの<see cref="T:C1.Web.Mvc.Ean13" />インスタンスを作成します。
            </summary>
            <param name="helper">HTML ヘルパー</param>
            <param name="selector">セレクター</param>
        </member>
        <member name="P:C1.Web.Mvc.Ean13.AddOn">
            <summary>
            コントロールのaddOn値を取得または設定します。
            </summary>
            <remarks>
            このプロパティの値は2または5に設定することができます。
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.Ean13.AddOnHeight">
            <summary>
            コントロールのaddOnシンボルの高さを取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Ean13.AddOnLabelPosition">
            <summary>
            コントロールのaddOn値を描画する位置を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Ean13.QuietZone">
            <summary>
            バーコードシンボルの周囲のクワイエットゾーン（空白の余白）のサイズを取得または設定します。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Gs1_128">
            <summary>
            GS1_128 バーコードのタイプを描画するためのコントロールを表します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Gs1_128.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            1つの<see cref="T:C1.Web.Mvc.Gs1_128" />インスタンスを作成します。
            </summary>
            <param name="helper">HTML ヘルパー</param>
            <param name="selector">セレクター</param>
        </member>
        <member name="P:C1.Web.Mvc.Gs1_128.AutoWidth">
            <summary>
            コントロールの幅がValueの長さに応じて自動的に変化するかどうかを示す値を取得または設定します。
            </summary>
            <remarks>
            このプロパティをfalseに設定する場合、コントロールに適切な* CSS幅*が設定されていることを確認する必要があります。
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.Gs1_128.AutoWidthZoom">
            <summary>
            自動計算されたコントロールの幅に適用されるズーム倍率を取得または設定します。
            </summary>
            <remarks>
            このプロパティは、AutoWidthプロパティがtrueに設定されている場合にのみ有効になります。
                         1以上の任意の数値を使用できます。
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.Gs1_128.ShowLabel">
            <summary>
            シンボル下に値を描画するかどうかを示します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Gs1_128.LabelPosition">
            <summary>
            コントロールの値を描画する位置を取得または設定します。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.QrCode">
            <summary>
            QRCode バーコードのタイプを描画するためのコントロールを表します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.QrCode.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            1つの<see cref="T:C1.Web.Mvc.QrCode" />インスタンスを作成します。
            </summary>
            <param name="helper">HTML ヘルパー</param>
            <param name="selector">セレクター</param>
        </member>
        <member name="P:C1.Web.Mvc.QrCode.CharCode">
            <summary>
            文字セットに関連付けられた文字のコレクションを取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.QrCode.Charset">
            <summary>
            このコントロールのエンコーディングに使用される文字セットを取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.QrCode.Model">
            <summary>
            使用されるコントロールのモデルスタイルを取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.QrCode.Version">
            <summary>
            コントロールのさまざまなモジュール構成を取得または設定します。 QRCodeのバージョンは、バージョン1からバージョン40までです。 各バージョンには、異なるモジュール構成やモジュール数があります。 （モジュールとは、QRCodeを構成する黒と白のドットのことです。）
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.QrCode.ErrorCorrectionLevel">
            <summary>
            QRCodeのエラー修正レベルを取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.QrCode.Mask">
            <summary>
            シンボル全体をカバーするようにグリッドで繰り返されて定義されたパターンを取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.QrCode.Connection">
            <summary>
            シンボルが構造された付加メッセージの一部であるかどうかを示します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.QrCode.ConnectionIndex">
            <summary>
            構造された付加メッセージ内のシンボルブロックのインデックスを取得または設定します。
            </summary>
            <remarks>
            このプロパティの値は0または15に設定することができます。
            </remarks>
        </member>
        <member name="T:C1.Web.Mvc.UpcBase">
            <summary>
            すべてのUPCバーコードコントロールクラスの基本（抽象）クラス。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.UpcBase.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            1つの<see cref="T:C1.Web.Mvc.UpcBase" />インスタンスを作成します。
            </summary>
            <param name="helper">HTML ヘルパー</param>
            <param name="selector">セレクター</param>
        </member>
        <member name="P:C1.Web.Mvc.UpcBase.ShowLabel">
            <summary>
            シンボル下に値を描画するかどうかを示します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.UpcBase.LabelPosition">
            <summary>
            コントロールの値を描画する位置を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.UpcBase.AddOn">
            <summary>
            コントロールのaddOn値を取得または設定します。
            </summary>
            <remarks>
            このプロパティの値は2または5に設定することができます。
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.UpcBase.AddOnHeight">
            <summary>
            コントロールのaddOnシンボルの高さを取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.UpcBase.AddOnLabelPosition">
            <summary>
            コントロールのaddOn値を描画する位置を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.UpcBase.QuietZone">
            <summary>
            バーコードシンボルの周囲のクワイエットゾーン（空白の余白）のサイズを取得または設定します。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.UpcA">
            <summary>
            UPC-A を描画するためのコントロールを表します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.UpcA.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            1つの<see cref="T:C1.Web.Mvc.UpcA" />インスタンスを作成します。
            </summary>
            <param name="helper">HTML ヘルパー</param>
            <param name="selector">セレクター</param>
        </member>
        <member name="T:C1.Web.Mvc.UpcE0">
            <summary>
            UPC-E0 を描画するためのコントロールを表します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.UpcE0.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            1つの<see cref="T:C1.Web.Mvc.UpcE0" />インスタンスを作成します。
            </summary>
            <param name="helper">HTML ヘルパー</param>
            <param name="selector">セレクター</param>
        </member>
        <member name="T:C1.Web.Mvc.UpcE1">
            <summary>
            UPC-E1 を描画するためのコントロールを表します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.UpcE1.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            1つの<see cref="T:C1.Web.Mvc.UpcE1" />インスタンスを作成します。
            </summary>
            <param name="helper">HTML ヘルパー</param>
            <param name="selector">セレクター</param>
        </member>
        <member name="T:C1.Web.Mvc.Code49">
            <summary>
            Code49 バーコードのタイプを描画するためのコントロールを表します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Code49.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            1つの<see cref="T:C1.Web.Mvc.Code49" />インスタンスを作成します。
            </summary>
            <param name="helper">HTML ヘルパー</param>
            <param name="selector">セレクター</param>
        </member>
        <member name="P:C1.Web.Mvc.Code49.ShowLabel">
            <summary>
            シンボル下に値を描画するかどうかを示します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Code49.Grouping">
            <summary>
            シンボルのモードがGroup Alphanumeric Modeかどうかを示します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Code49.GroupIndex">
            <summary>
            グループ内のシンボルのインデックスを取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Code49.LabelPosition">
            <summary>
            コントロールの値を描画する位置を取得または設定します。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Code93">
            <summary>
            Code93 バーコードのタイプを描画するためのコントロールを表します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Code93.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            1つの<see cref="T:C1.Web.Mvc.Code93" />インスタンスを作成します。
            </summary>
            <param name="helper">HTML ヘルパー</param>
            <param name="selector">セレクター</param>
        </member>
        <member name="P:C1.Web.Mvc.Code93.AutoWidth">
            <summary>
            コントロールの幅がValueの長さに応じて自動的に変化するかどうかを示す値を取得または設定します。
            </summary>
            <remarks>
            このプロパティをfalseに設定する場合、コントロールに適切な* CSS幅*が設定されていることを確認する必要があります。
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.Code93.AutoWidthZoom">
            <summary>
            自動計算されたコントロールの幅に適用されるズーム倍率を取得または設定します。
            </summary>
            <remarks>
            このプロパティは、AutoWidthプロパティがtrueに設定されている場合にのみ有効になります。
                         1以上の任意の数値を使用できます。
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.Code93.ShowLabel">
            <summary>
            シンボル下に値を描画するかどうかを示します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Code93.CheckDigit">
            <summary>
            シンボルがLuhn アルゴリズムのチェックディジットを必要とするかどうかを示します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Code93.FullAscii">
            <summary>
            シンボルがすべての93 ASCII文字のエンコーディングを有効にするかどうかを示します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Code93.LabelPosition">
            <summary>
            コントロールの値を描画する位置を取得または設定します。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.DataMatrixBase">
            <summary>
            すべてのDataMatrixバーコードクラスの基本（抽象）クラス。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.DataMatrixBase.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            1つの<see cref="T:C1.Web.Mvc.DataMatrixBase" />インスタンスを作成します。
            </summary>
            <param name="helper">HTML ヘルパー</param>
            <param name="selector">セレクター</param>
        </member>
        <member name="T:C1.Web.Mvc.DataMatrixEcc200">
            <summary>
            ECC200の Reed-Solomon コードを使用して DataMatrix バーコードを描画するためのコントロールを表します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.DataMatrixEcc200.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            1つの<see cref="T:C1.Web.Mvc.DataMatrixEcc200" />インスタンスを作成します。
            </summary>
            <param name="helper">HTML ヘルパー</param>
            <param name="selector">セレクター</param>
        </member>
        <member name="P:C1.Web.Mvc.DataMatrixEcc200.SymbolSize">
            <summary>
            シンボルのサイズを取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.DataMatrixEcc200.EncodingMode">
            <summary>
            エンコーディングモードを取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.DataMatrixEcc200.StructuredAppend">
            <summary>
            シンボルが構造された付加メッセージの一部であるかどうかを示します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.DataMatrixEcc200.StructureNumber">
            <summary>
            構造された付加メッセージ内にあるシンボルのブロックを取得または設定します。
            </summary>
            <remarks>
            このプロパティの値は0-15に設定することができます。
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.DataMatrixEcc200.FileIdentifier">
            <summary>
            このコントロールのファイルの識別子を取得または設定します。
            </summary>
            <remarks>
            このプロパティの値は1-254に設定することができます。
            </remarks>
        </member>
        <member name="T:C1.Web.Mvc.DataMatrixEcc000">
            <summary>
            ECC000 - ECC140 コードを使用して DataMatrix バーコードを描画するためのコントロールを表します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.DataMatrixEcc000.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            1つの<see cref="T:C1.Web.Mvc.DataMatrixEcc000" />インスタンスを作成します。
            </summary>
            <param name="helper">HTML ヘルパー</param>
            <param name="selector">セレクター</param>
        </member>
        <member name="P:C1.Web.Mvc.DataMatrixEcc000.Version">
            <summary>
            バーコードの描画に使用されるDataMatrixのECCバージョンを取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.DataMatrixEcc000.SymbolSize">
            <summary>
            シンボルのサイズを取得または設定します。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Interleaved2of5">
            <summary>
            Interleaved2of5 バーコードのタイプを描画するためのコントロールを表します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Interleaved2of5.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            1つの<see cref="T:C1.Web.Mvc.Interleaved2of5" />インスタンスを作成します。
            </summary>
            <param name="helper">HTML ヘルパー</param>
            <param name="selector">セレクター</param>
        </member>
        <member name="P:C1.Web.Mvc.Interleaved2of5.AutoWidth">
            <summary>
            コントロールの幅がValueの長さに応じて自動的に変化するかどうかを示す値を取得または設定します。
            </summary>
            <remarks>
            このプロパティをfalseに設定する場合、コントロールに適切な* CSS幅*が設定されていることを確認する必要があります。
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.Interleaved2of5.AutoWidthZoom">
            <summary>
            自動計算されたコントロールの幅に適用されるズーム倍率を取得または設定します。
            </summary>
            <remarks>
            このプロパティは、AutoWidthプロパティがtrueに設定されている場合にのみ有効になります。
                         1以上の任意の数値を使用できます。
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.Interleaved2of5.ShowLabel">
            <summary>
            シンボル下に値を描画するかどうかを示します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Interleaved2of5.NwRatio">
            <summary>
            コントロールの細バーと太バーの比率を取得または設定します。
            </summary>
            <remarks>
            このプロパティの値は1:2または1:3に設定することができます。
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.Interleaved2of5.BearerBar">
            <summary>
            ベアラバーを有効にするかどうかを示します。
                        ベアラバーとは、バーコードシンボルの上下,左右又は周辺を取り囲む太い黒い境界線のことです。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Interleaved2of5.LabelPosition">
            <summary>
            コントロールの値を描画する位置を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Interleaved2of5.CheckCharacter">
            <summary>
            チェック文字を有効にするかどうかを示します。
                       Interleaved2of5は、数値を「インターリーブ」するために偶数桁を必要とするため、
                        チェック文字を使用する場合、エンコーディングされるデータは奇数桁でなければならず、
                        結果として必要な偶数桁になります。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Itf14">
            <summary>
            ITF-14 バーコードのタイプを描画するためのコントロールを表します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Itf14.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            1つの<see cref="T:C1.Web.Mvc.Itf14" />インスタンスを作成します。
            </summary>
            <param name="helper">HTML ヘルパー</param>
            <param name="selector">セレクター</param>
        </member>
        <member name="P:C1.Web.Mvc.Itf14.ShowLabel">
            <summary>
            シンボル下に値を描画するかどうかを示します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Itf14.NwRatio">
            <summary>
            コントロールの細バーと太バーの比率を取得または設定します。
            </summary>
            <remarks>
            このプロパティの値は1:2または1:3に設定することができます。
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.Itf14.BearerBar">
            <summary>
            ベアラバーを有効にするかどうかを示します。
                        ベアラバーとは、バーコードシンボルの上下,左右又は周辺を取り囲む太い黒い境界線のことです。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Itf14.LabelPosition">
            <summary>
            コントロールの値を描画する位置を取得または設定します。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.JapanesePostal">
            <summary>
            Japanese Postalバーコードタイプとその関連する特定の設定を表します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.JapanesePostal.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            1つの<see cref="T:C1.Web.Mvc.JapanesePostal" />インスタンスを作成します。
            </summary>
            <param name="helper">HTML ヘルパー</param>
            <param name="selector">セレクター</param>
        </member>
        <member name="P:C1.Web.Mvc.JapanesePostal.ShowLabel">
            <summary>
            シンボル下に値を描画するかどうかを示します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.JapanesePostal.LabelPosition">
            <summary>
            コントロールの値を描画する位置を取得または設定します。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Gs1DataBarBase">
            <summary>
            すべてのGS1 DataBarバーコードコントロールクラスの基本（抽象）クラス。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Gs1DataBarBase.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            1つの<see cref="T:C1.Web.Mvc.Gs1DataBarBase" />インスタンスを作成します。
            </summary>
            <param name="helper">HTML ヘルパー</param>
            <param name="selector">セレクター</param>
        </member>
        <member name="P:C1.Web.Mvc.Gs1DataBarBase.ShowLabel">
            <summary>
            シンボル下に値を描画するかどうかを示します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Gs1DataBarBase.LabelPosition">
            <summary>
            コントロールの値を描画する位置を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Gs1DataBarBase.Linkage">
            <summary>
            2D複合コンポーネントを取得または設定し、 そのセパレータパターンはGS1 DataBarシンボルの上に印刷され、 およびGS1 DataBarシンボルに整列して隣接しています。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Gs1DataBarBase.LinkageVersion">
            <summary>
            リンケージに使用できる複合バーコードコンポーネントを取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Gs1DataBarBase.LinkageHeight">
            <summary>
            リンケージシのシンボルの高さを取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Gs1DataBarBase.HideLinkageText">
            <summary>
            ラベルテキストにリンケージを表示するかどうかを示します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Gs1DataBarBase.HideAiText">
            <summary>
            ラベルテキストにアプリケーション識別子を表示するかどうかを示します。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Gs1DataBarExpanded">
            <summary>
            GS1 DataBar バーコードのタイプを描画するためのコントロールを表します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Gs1DataBarExpanded.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            1つの<see cref="T:C1.Web.Mvc.Gs1DataBarExpanded" />インスタンスを作成します。
            </summary>
            <param name="helper">HTML ヘルパー</param>
            <param name="selector">セレクター</param>
        </member>
        <member name="P:C1.Web.Mvc.Gs1DataBarExpanded.AutoWidth">
            <summary>
            コントロールの幅がValueの長さに応じて自動的に変化するかどうかを示す値を取得または設定します。
            </summary>
            <remarks>
            このプロパティをfalseに設定する場合、コントロールに適切な* CSS幅*が設定されていることを確認する必要があります。
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.Gs1DataBarExpanded.AutoWidthZoom">
            <summary>
            自動計算されたコントロールの幅に適用されるズーム倍率を取得または設定します。
            </summary>
            <remarks>
            このプロパティは、AutoWidthプロパティがtrueに設定されている場合にのみ有効になります。
                         1以上の任意の数値を使用できます。
            </remarks>
        </member>
        <member name="T:C1.Web.Mvc.Gs1DataBarExpandedStacked">
            <summary>
            GS1 DataBar バーコードのタイプを描画するためのコントロールを表します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Gs1DataBarExpandedStacked.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            1つの<see cref="T:C1.Web.Mvc.Gs1DataBarExpandedStacked" />インスタンスを作成します。
            </summary>
            <param name="helper">HTML ヘルパー</param>
            <param name="selector">セレクター</param>
        </member>
        <member name="P:C1.Web.Mvc.Gs1DataBarExpandedStacked.AutoWidth">
            <summary>
            コントロールの幅がValueの長さに応じて自動的に変化するかどうかを示す値を取得または設定します。
            </summary>
            <remarks>
            このプロパティをfalseに設定する場合、コントロールに適切な* CSS幅*が設定されていることを確認する必要があります。
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.Gs1DataBarExpandedStacked.AutoWidthZoom">
            <summary>
            自動計算されたコントロールの幅に適用されるズーム倍率を取得または設定します。
            </summary>
            <remarks>
            このプロパティは、AutoWidthプロパティがtrueに設定されている場合にのみ有効になります。
                         1以上の任意の数値を使用できます。
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.Gs1DataBarExpandedStacked.RowCount">
            <summary>
            RSS Expandedが積み重ねられる行数を取得または設定します。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Gs1DataBarLimited">
            <summary>
            GS1 DataBar バーコードのタイプを描画するためのコントロールを表します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Gs1DataBarLimited.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            1つの<see cref="T:C1.Web.Mvc.Gs1DataBarLimited" />インスタンスを作成します。
            </summary>
            <param name="helper">HTML ヘルパー</param>
            <param name="selector">セレクター</param>
        </member>
        <member name="T:C1.Web.Mvc.Gs1DataBarOmnidirectional">
            <summary>
            GS1 DataBar バーコードのタイプを描画するためのコントロールを表します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Gs1DataBarOmnidirectional.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            1つの<see cref="T:C1.Web.Mvc.Gs1DataBarOmnidirectional" />インスタンスを作成します。
            </summary>
            <param name="helper">HTML ヘルパー</param>
            <param name="selector">セレクター</param>
        </member>
        <member name="T:C1.Web.Mvc.Gs1DataBarStacked">
            <summary>
            GS1 DataBar バーコードのタイプを描画するためのコントロールを表します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Gs1DataBarStacked.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            1つの<see cref="T:C1.Web.Mvc.Gs1DataBarStacked" />インスタンスを作成します。
            </summary>
            <param name="helper">HTML ヘルパー</param>
            <param name="selector">セレクター</param>
        </member>
        <member name="P:C1.Web.Mvc.Gs1DataBarStacked.Ratio">
            <summary>
            シンボルの最上行の比率の高さを取得または設定します。 任意の数値をサポートします。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Gs1DataBarStackedOmnidirectional">
            <summary>
            GS1 DataBar バーコードのタイプを描画するためのコントロールを表します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Gs1DataBarStackedOmnidirectional.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            1つの<see cref="T:C1.Web.Mvc.Gs1DataBarStackedOmnidirectional" />インスタンスを作成します。
            </summary>
            <param name="helper">HTML ヘルパー</param>
            <param name="selector">セレクター</param>
        </member>
        <member name="P:C1.Web.Mvc.Gs1DataBarStackedOmnidirectional.Ratio">
            <summary>
            シンボルの最上行の比率の高さを取得または設定します。 任意の数値をサポートします。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Gs1DataBarTruncated">
            <summary>
            GS1 DataBar バーコードのタイプを描画するためのコントロールを表します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Gs1DataBarTruncated.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            1つの<see cref="T:C1.Web.Mvc.Gs1DataBarTruncated" />インスタンスを作成します。
            </summary>
            <param name="helper">HTML ヘルパー</param>
            <param name="selector">セレクター</param>
        </member>
        <member name="T:C1.Web.Mvc.Pdf417">
            <summary>
            PDF417 バーコードのタイプを描画するためのコントロールを表します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Pdf417.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            1つの<see cref="T:C1.Web.Mvc.Pdf417" />インスタンスを作成します。
            </summary>
            <param name="helper">HTML ヘルパー</param>
            <param name="selector">セレクター</param>
        </member>
        <member name="P:C1.Web.Mvc.Pdf417.AutoWidth">
            <summary>
            コントロールの幅がValueの長さに応じて自動的に変化するかどうかを示す値を取得または設定します。
            </summary>
            <remarks>
            このプロパティをfalseに設定する場合、コントロールに適切な* CSS幅*が設定されていることを確認する必要があります。
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.Pdf417.AutoWidthZoom">
            <summary>
            自動計算されたコントロールの幅に適用されるズーム倍率を取得または設定します。
            </summary>
            <remarks>
            このプロパティは、AutoWidthプロパティがtrueに設定されている場合にのみ有効になります。
                         1以上の任意の数値を使用できます。
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.Pdf417.ErrorCorrectionLevel">
            <summary>
            このコントロールのエラー修正レベルを取得または設定します。 PDF417 シンボルは、9レベルのエラー修正をサポートします。 レベル０は強度が低く、9 は最も高い修正能力を持ちます。 修正レベルが0に設定されている場合、重要度の低い情報はほとんどエンコーディングされず、 スキャナーは最も単純なエラーの修正を実行できます。 8に設定すると、重大なスキャンするときの問題を修正できます。 PDF417のデフォルトのエラー修正は「auto」です。これにより、 各PDF417シンボルにエンコーディングされた情報量に基づいて、修正レベルが自動的に指定されます。
            </summary>
            <remarks>
            このプロパティの値はnull、undefined、または0〜8に設定できます。
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.Pdf417.Columns">
            <summary>
            シンボル内の列数を取得または設定します。
            </summary>
            <remarks>
            このプロパティの値はnull、undefined、または0〜30に設定できます。
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.Pdf417.Rows">
            <summary>
            シンボル内の行数を取得または設定します。
            </summary>
            <remarks>
            このプロパティの値はnull、undefined、または3〜90に設定できます。
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.Pdf417.Compact">
            <summary>
            コンパクトPDF417シンボルかどうかを示します。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.MicroPdf417">
            <summary>
            MicroPDF417 バーコードのタイプを描画するためのコントロールを表します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.MicroPdf417.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            1つの<see cref="T:C1.Web.Mvc.MicroPdf417" />インスタンスを作成します。
            </summary>
            <param name="helper">HTML ヘルパー</param>
            <param name="selector">セレクター</param>
        </member>
        <member name="P:C1.Web.Mvc.MicroPdf417.Dimensions">
            <summary>
            シンボルの行数と列数を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.MicroPdf417.CompactionMode">
            <summary>
            シンボルのエンコーディング方法を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.MicroPdf417.StructuredAppend">
            <summary>
            構造的連接が有効かどうかを示します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.MicroPdf417.SegmentIndex">
            <summary>
            構造的連接のインデックスを取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.MicroPdf417.FileId">
            <summary>
            構造的連接のファイル IDを取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.MicroPdf417.OptionalFields">
            <summary>
            構造的連接のオプションフィールドを取得または設定します。現在、segmentCountのみがサポートされています。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Accordion">
            <summary>
            垂直に積み重ねられているインタラクティブな見出し（タイトルが含まれる）のセットであるコントロールを定義します。
            </summary>
            <remarks>
            見出しは、コンテンツの関連セクションを表示または非表示にするために
                使用されるコントロールとして機能します。
Accordionは、コンテンツの複数のセクションを1つのページに表示するときに
                スクロールする必要を減らすのに役立ちます。
            </remarks>
        </member>
        <member name="M:C1.Web.Mvc.Accordion.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            1つの<see cref="T:C1.Web.Mvc.Accordion" />インスタンスを作成します。
            </summary>
            <param name="helper">HTML ヘルパー</param>
            <param name="selector">セレクター</param>
        </member>
        <member name="P:C1.Web.Mvc.Accordion.Panes">
            <summary>
            headerとcontentのプロパティがAccordionコントロールの内容を決定するAccordionPaneオブジェクトのコレクションを取得します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Accordion.SelectedIndex">
            <summary>
            現在選択されている（アクティブな）ペインのインデックスを取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Accordion.IsAnimated">
            <summary>
            ペインの折りたたみまたは展開時にアニメーション表示を行うかどうかを決定する値を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Accordion.ShowIcons">
            <summary>
            Accordionがペインのヘッダーに展開/折りたたみのアイコンを表示するかどうかを決定する値を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Accordion.AutoSwitch">
            <summary>
            ユーザーが矢印キーを使用してペインを選択したときにコントロールがペインを自動的に切り替えるかどうかを決定する値を取得または設定します。
            </summary>
            <remarks>
            AutoSwitch がtrue（デフォルト値）に設定されている場合、矢印キーを押すとペインが自動的に切り替わります。 ペインキーを押すと、選択されていないタブヘッダーは除外され、ペイン順序の次の要素が選択されます。AutoSwitch がfalseに設定されている場合、矢印キーまたはTabキーを押すと、フォーカスが次のペインヘッダーまたは前のペインヘッダーに移動しますが、 ペインは切り替わりません。フォーカスがあるペインをアクティブにするには、EnterキーまたはSpaceキーを押す必要があります。
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.Accordion.AllowCollapseAll">
            <summary>
            ユーザーがすべての項目を折りたたむことができるかどうかを決定する値を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Accordion.AllowExpandMany">
            <summary>
            ユーザーが一度に複数のペインを展開できるかどうかを決定する値を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Accordion.OnClientSelectedIndexChanged">
            <summary>
            selectedIndex プロパティの値が変化すると発生します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnBaseBuilder`2.Editor(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.ColumnBase.Editor" />を構成します。
            カスタムセルエディタとして使用する入力コントロールへの参照を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputColorBuilder.OnClientInvalidInput(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.InputColor.OnClientInvalidInput" /> クライアントイベントを構成します。
            無効な入力値が検出された場合に発生します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.AccordionBuilder">
            <summary>
                <see cref="T:C1.Web.Mvc.Accordion" />を構成するビルダーを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AccordionBuilder.Tabs(System.Action{C1.Web.Mvc.Fluent.ListItemFactory{C1.Web.Mvc.AccordionPane,C1.Web.Mvc.Fluent.AccordionPaneBuilder}})">
            <summary>
            Panesプロパティを設定します。
            </summary>
            <param name="build">構築アクション</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AccordionBuilder.#ctor(C1.Web.Mvc.Accordion)">
            <summary>
                <paramref name="component" />を構成する1つの<see cref="T:C1.Web.Mvc.Fluent.AccordionBuilder" />インスタンスを作成します。
            </summary>
            <param name="component">構成される<see cref="T:C1.Web.Mvc.Accordion" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AccordionBuilder.SelectedIndex(System.Int32)">
            <summary>
                <see cref="P:C1.Web.Mvc.Accordion.SelectedIndex" />を構成します。現在選択されている（アクティブな）ペインのインデックスを設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AccordionBuilder.IsAnimated(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.Accordion.IsAnimated" />を構成します。ペインの折りたたみまたは展開時にアニメーション表示を行うかどうかを決定する値を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AccordionBuilder.ShowIcons(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.Accordion.ShowIcons" />を構成します。
Accordionがペインのヘッダーに展開/折りたたみのアイコンを表示するかどうかを決定する値を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AccordionBuilder.AutoSwitch(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.Accordion.AutoSwitch" />を構成します。ユーザーが矢印キーを使用してペインを選択したときにコントロールがペインを自動的に切り替えるかどうかを決定する値を設定します。
            </summary>
            <remarks>
            AutoSwitch がtrue（デフォルト値）に設定されている場合、矢印キーを押すとペインが自動的に切り替わります。 ペインキーを押すと、選択されていないタブヘッダーは除外され、ペイン順序の次の要素が選択されます。AutoSwitch がfalseに設定されている場合、矢印キーまたはTabキーを押すと、フォーカスが次のペインヘッダーまたは前のペインヘッダーに移動しますが、 ペインは切り替わりません。フォーカスがあるペインをアクティブにするには、EnterキーまたはSpaceキーを押す必要があります。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AccordionBuilder.AllowCollapseAll(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.Accordion.AllowCollapseAll" />を構成します。ユーザーがすべての項目を折りたたむことができるかどうかを決定する値を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AccordionBuilder.AllowExpandMany(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.Accordion.AllowExpandMany" />を構成します。ユーザーが一度に複数のペインを展開できるかどうかを決定する値を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AccordionBuilder.OnClientSelectedIndexChanged(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.Accordion.OnClientSelectedIndexChanged" /> クライアントイベントを構成します。
            selectedIndex プロパティの値が変化するときに発生します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.BarcodeBaseBuilder`2">
            <summary>
                <see cref="T:C1.Web.Mvc.BarcodeBase" />を構成するビルダーを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BarcodeBaseBuilder`2.#ctor(`0)">
            <summary>
                <paramref name="component" />を構成する1つの<see cref="T:C1.Web.Mvc.Fluent.BarcodeBaseBuilder`2" />インスタンスを作成します。
            </summary>
            <param name="component">構成される<see cref="T:C1.Web.Mvc.BarcodeBase" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BarcodeBaseBuilder`2.Value(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.BarcodeBase.Value" />を構成します。コントロールによって描画された現在のコード値を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BarcodeBaseBuilder`2.QuietZone(C1.Web.Mvc.IQuietZone)">
            <summary>
                <see cref="P:C1.Web.Mvc.BarcodeBase.QuietZone" />を構成します。バーコードシンボルの周囲のクワイエットゾーン（空白の余白）のサイズを設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BarcodeBaseBuilder`2.RenderType(C1.Web.Mvc.RenderType)">
            <summary>
                <see cref="P:C1.Web.Mvc.BarcodeBase.RenderType" />を構成します。コントロールの描画の種類を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BarcodeBaseBuilder`2.Color(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.BarcodeBase.Color" />を構成します。コントロールの描画に使用される前景色を設定します。
            </summary>
            <remarks>
            このプロパティのデフォルト値はBlackです。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BarcodeBaseBuilder`2.BackgroundColor(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.BarcodeBase.BackgroundColor" />を構成します。コントロールの描画に使用される背景色を設定します。
            </summary>
            <remarks>
            このプロパティのデフォルト値はWhiteです。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BarcodeBaseBuilder`2.HideExtraChecksum(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.BarcodeBase.HideExtraChecksum" />を構成します。コントロールのラベルテキストにチェックディジットを表示するかどうかを示します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BarcodeBaseBuilder`2.Font(C1.Web.Mvc.IBarcodeFont)">
            <summary>
                <see cref="P:C1.Web.Mvc.BarcodeBase.Font" />を構成します。コントロールのラベルテキストのフォント情報を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.CodabarBuilder">
            <summary>
                <see cref="T:C1.Web.Mvc.Codabar" />を構成するビルダーを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CodabarBuilder.#ctor(C1.Web.Mvc.Codabar)">
            <summary>
                <paramref name="component" />を構成する1つの<see cref="T:C1.Web.Mvc.Fluent.CodabarBuilder" />インスタンスを作成します。
            </summary>
            <param name="component">構成される<see cref="T:C1.Web.Mvc.Codabar" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CodabarBuilder.AutoWidth(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.Codabar.AutoWidth" />を構成します。コントロールの幅がValueの長さに応じて自動的に変化するかどうかを示す値を設定します。
            </summary>
            <remarks>
            このプロパティをfalseに設定する場合、コントロールに適切な* CSS幅*が設定されていることを確認する必要があります。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CodabarBuilder.AutoWidthZoom(System.Int32)">
            <summary>
                <see cref="P:C1.Web.Mvc.Codabar.AutoWidthZoom" />を構成します。自動計算されたコントロールの幅に適用されるズーム倍率を設定します。
            </summary>
            <remarks>
            このプロパティは、AutoWidthプロパティがtrueに設定されている場合にのみ有効になります。
                         1以上の任意の数値を使用できます。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CodabarBuilder.ShowLabel(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.Codabar.ShowLabel" />を構成します。シンボル下に値を描画するかどうかを示します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CodabarBuilder.CheckDigit(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.Codabar.CheckDigit" />を構成します。シンボルがLuhn アルゴリズムのチェックディジットを必要とするかどうかを示します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CodabarBuilder.LabelPosition(C1.Web.Mvc.Barcode.LabelPosition)">
            <summary>
                <see cref="P:C1.Web.Mvc.Codabar.LabelPosition" />を構成します。コントロールの値を描画する位置を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CodabarBuilder.NwRatio(C1.Web.Mvc.NarrowWideRatio)">
            <summary>
                <see cref="P:C1.Web.Mvc.Codabar.NwRatio" />を構成します。コントロールの細バーと太バーの比率を設定します。
            </summary>
            <remarks>
            このプロパティの値は1:2または1:3に設定することができます。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.Code128Builder">
            <summary>
                <see cref="T:C1.Web.Mvc.Code128" />を構成するビルダーを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Code128Builder.#ctor(C1.Web.Mvc.Code128)">
            <summary>
                <paramref name="component" />を構成する1つの<see cref="T:C1.Web.Mvc.Fluent.Code128Builder" />インスタンスを作成します。
            </summary>
            <param name="component">構成される<see cref="T:C1.Web.Mvc.Code128" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Code128Builder.AutoWidth(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.Code128.AutoWidth" />を構成します。コントロールの幅がValueの長さに応じて自動的に変化するかどうかを示す値を設定します。
            </summary>
            <remarks>
            このプロパティをfalseに設定する場合、コントロールに適切な* CSS幅*が設定されていることを確認する必要があります。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Code128Builder.AutoWidthZoom(System.Int32)">
            <summary>
                <see cref="P:C1.Web.Mvc.Code128.AutoWidthZoom" />を構成します。自動計算されたコントロールの幅に適用されるズーム倍率を設定します。
            </summary>
            <remarks>
            このプロパティは、AutoWidthプロパティがtrueに設定されている場合にのみ有効になります。
                         1以上の任意の数値を使用できます。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Code128Builder.ShowLabel(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.Code128.ShowLabel" />を構成します。シンボル下に値を描画するかどうかを示します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Code128Builder.CodeSet(C1.Web.Mvc.Code128CodeSet)">
            <summary>
                <see cref="P:C1.Web.Mvc.Code128.CodeSet" />を構成します。このコントロールで使用されるコードセットの種類を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Code128Builder.LabelPosition(C1.Web.Mvc.Barcode.LabelPosition)">
            <summary>
                <see cref="P:C1.Web.Mvc.Code128.LabelPosition" />を構成します。コントロールの値を描画する位置を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.Code39Builder">
            <summary>
                <see cref="T:C1.Web.Mvc.Code39" />を構成するビルダーを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Code39Builder.#ctor(C1.Web.Mvc.Code39)">
            <summary>
                <paramref name="component" />を構成する1つの<see cref="T:C1.Web.Mvc.Fluent.Code39Builder" />インスタンスを作成します。
            </summary>
            <param name="component">構成される<see cref="T:C1.Web.Mvc.Code39" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Code39Builder.AutoWidth(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.Code39.AutoWidth" />を構成します。コントロールの幅がValueの長さに応じて自動的に変化するかどうかを示す値を設定します。
            </summary>
            <remarks>
            このプロパティをfalseに設定する場合、コントロールに適切な* CSS幅*が設定されていることを確認する必要があります。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Code39Builder.AutoWidthZoom(System.Int32)">
            <summary>
                <see cref="P:C1.Web.Mvc.Code39.AutoWidthZoom" />を構成します。自動計算されたコントロールの幅に適用されるズーム倍率を設定します。
            </summary>
            <remarks>
            このプロパティは、AutoWidthプロパティがtrueに設定されている場合にのみ有効になります。
                         1以上の任意の数値を使用できます。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Code39Builder.ShowLabel(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.Code39.ShowLabel" />を構成します。シンボル下に値を描画するかどうかを示します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Code39Builder.CheckDigit(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.Code39.CheckDigit" />を構成します。シンボルがLuhn アルゴリズムのチェックディジットを必要とするかどうかを示します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Code39Builder.FullAscii(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.Code39.FullAscii" />を構成します。シンボルがすべての128 ASCII文字のエンコーディングを有効にするかどうかを示します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Code39Builder.LabelPosition(C1.Web.Mvc.Barcode.LabelPosition)">
            <summary>
                <see cref="P:C1.Web.Mvc.Code39.LabelPosition" />を構成します。コントロールの値を描画する位置を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Code39Builder.NwRatio(C1.Web.Mvc.NarrowWideRatio)">
            <summary>
                <see cref="P:C1.Web.Mvc.Code39.NwRatio" />を構成します。コントロールの細バーと太バーの比率を設定します。
            </summary>
            <remarks>
            このプロパティの値は1:2または1:3に設定することができます。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Code39Builder.LabelWithStartAndStopCharacter(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.Code39.LabelWithStartAndStopCharacter" />を構成します。ラベルに開始文字と終了文字を表示するかどうかを示します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.Code49Builder">
            <summary>
                <see cref="T:C1.Web.Mvc.Code49" />を構成するビルダーを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Code49Builder.#ctor(C1.Web.Mvc.Code49)">
            <summary>
                <paramref name="component" />を構成する1つの<see cref="T:C1.Web.Mvc.Fluent.Code49Builder" />インスタンスを作成します。
            </summary>
            <param name="component">構成される<see cref="T:C1.Web.Mvc.Code49" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Code49Builder.ShowLabel(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.Code49.ShowLabel" />を構成します。シンボル下に値を描画するかどうかを示します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Code49Builder.Grouping(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.Code49.Grouping" />を構成します。シンボルのモードがGroup Alphanumeric Modeかどうかを示します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Code49Builder.GroupIndex(System.Int32)">
            <summary>
                <see cref="P:C1.Web.Mvc.Code49.GroupIndex" />を構成します。グループ内のシンボルのインデックスを設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Code49Builder.LabelPosition(C1.Web.Mvc.Barcode.LabelPosition)">
            <summary>
                <see cref="P:C1.Web.Mvc.Code49.LabelPosition" />を構成します。コントロールの値を描画する位置を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.Code93Builder">
            <summary>
                <see cref="T:C1.Web.Mvc.Code93" />を構成するビルダーを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Code93Builder.#ctor(C1.Web.Mvc.Code93)">
            <summary>
                <paramref name="component" />を構成する1つの<see cref="T:C1.Web.Mvc.Fluent.Code93Builder" />インスタンスを作成します。
            </summary>
            <param name="component">構成される<see cref="T:C1.Web.Mvc.Code93" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Code93Builder.AutoWidth(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.Code93.AutoWidth" />を構成します。コントロールの幅がValueの長さに応じて自動的に変化するかどうかを示す値を設定します。
            </summary>
            <remarks>
            このプロパティをfalseに設定する場合、コントロールに適切な* CSS幅*が設定されていることを確認する必要があります。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Code93Builder.AutoWidthZoom(System.Int32)">
            <summary>
                <see cref="P:C1.Web.Mvc.Code93.AutoWidthZoom" />を構成します。自動計算されたコントロールの幅に適用されるズーム倍率を設定します。
            </summary>
            <remarks>
            このプロパティは、AutoWidthプロパティがtrueに設定されている場合にのみ有効になります。
                         1以上の任意の数値を使用できます。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Code93Builder.ShowLabel(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.Code93.ShowLabel" />を構成します。シンボル下に値を描画するかどうかを示します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Code93Builder.CheckDigit(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.Code93.CheckDigit" />を構成します。シンボルがLuhn アルゴリズムのチェックディジットを必要とするかどうかを示します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Code93Builder.FullAscii(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.Code93.FullAscii" />を構成します。シンボルがすべての93 ASCII文字のエンコーディングを有効にするかどうかを示します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Code93Builder.LabelPosition(C1.Web.Mvc.Barcode.LabelPosition)">
            <summary>
                <see cref="P:C1.Web.Mvc.Code93.LabelPosition" />を構成します。コントロールの値を描画する位置を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ComboBoxBaseBuilder`3.CaseSensitiveSearch(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.ComboBoxBase`1.CaseSensitiveSearch" />を構成します。検索するときに大文字と小文字を区別するかどうかを決定する値を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.DataMatrixBaseBuilder`2">
            <summary>
                <see cref="T:C1.Web.Mvc.DataMatrixBase" />を構成するビルダーを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DataMatrixBaseBuilder`2.#ctor(`0)">
            <summary>
                <paramref name="component" />を構成する1つの<see cref="T:C1.Web.Mvc.Fluent.DataMatrixBaseBuilder`2" />インスタンスを作成します。
            </summary>
            <param name="component">構成される<see cref="T:C1.Web.Mvc.DataMatrixBase" />オブジェクト。</param>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.DataMatrixEcc000Builder">
            <summary>
                <see cref="T:C1.Web.Mvc.DataMatrixEcc000" />を構成するビルダーを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DataMatrixEcc000Builder.#ctor(C1.Web.Mvc.DataMatrixEcc000)">
            <summary>
                <paramref name="component" />を構成する1つの<see cref="T:C1.Web.Mvc.Fluent.DataMatrixEcc000Builder" />インスタンスを作成します。
            </summary>
            <param name="component">構成される<see cref="T:C1.Web.Mvc.DataMatrixEcc000" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DataMatrixEcc000Builder.Version(C1.Web.Mvc.DataMatrixVersion)">
            <summary>
                <see cref="P:C1.Web.Mvc.DataMatrixEcc000.Version" />を構成します。バーコードの描画に使用されるDataMatrixのECCバージョンを設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DataMatrixEcc000Builder.SymbolSize(C1.Web.Mvc.Ecc000_140SymbolSize)">
            <summary>
                <see cref="P:C1.Web.Mvc.DataMatrixEcc000.SymbolSize" />を構成します。シンボルのサイズを取得または設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.DataMatrixEcc200Builder">
            <summary>
                <see cref="T:C1.Web.Mvc.DataMatrixEcc200" />を構成するビルダーを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DataMatrixEcc200Builder.#ctor(C1.Web.Mvc.DataMatrixEcc200)">
            <summary>
                <paramref name="component" />を構成する1つの<see cref="T:C1.Web.Mvc.Fluent.DataMatrixEcc200Builder" />インスタンスを作成します。
            </summary>
            <param name="component">構成される<see cref="T:C1.Web.Mvc.DataMatrixEcc200" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DataMatrixEcc200Builder.SymbolSize(C1.Web.Mvc.Ecc200SymbolSize)">
            <summary>
                <see cref="P:C1.Web.Mvc.DataMatrixEcc200.SymbolSize" />を構成します。シンボルのサイズを取得または設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DataMatrixEcc200Builder.EncodingMode(C1.Web.Mvc.Ecc200EncodingMode)">
            <summary>
                <see cref="P:C1.Web.Mvc.DataMatrixEcc200.EncodingMode" />を構成します。エンコーディングモードを設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DataMatrixEcc200Builder.StructuredAppend(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.DataMatrixEcc200.StructuredAppend" />を構成します。シンボルが構造された付加メッセージの一部であるかどうかを示します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DataMatrixEcc200Builder.StructureNumber(System.Int32)">
            <summary>
                <see cref="P:C1.Web.Mvc.DataMatrixEcc200.StructureNumber" />を構成します。構造された付加メッセージ内にあるシンボルのブロックを設定します。
            </summary>
            <remarks>
            このプロパティの値は0-15に設定することができます。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DataMatrixEcc200Builder.FileIdentifier(System.Int32)">
            <summary>
                <see cref="P:C1.Web.Mvc.DataMatrixEcc200.FileIdentifier" />を構成します。このコントロールのファイルの識別子を設定します。
            </summary>
            <remarks>
            このプロパティの値は1-254に設定することができます。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.Ean13Builder">
            <summary>
                <see cref="T:C1.Web.Mvc.Ean13" />を構成するビルダーを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Ean13Builder.#ctor(C1.Web.Mvc.Ean13)">
            <summary>
                <paramref name="component" />を構成する1つの<see cref="T:C1.Web.Mvc.Fluent.Ean13Builder" />インスタンスを作成します。
            </summary>
            <param name="component">構成される<see cref="T:C1.Web.Mvc.Ean13" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Ean13Builder.AddOn(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.Ean13.AddOn" />を構成します。コントロールのaddOn値を設定します。
            </summary>
            <remarks>
            このプロパティの値は2または5に設定することができます。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Ean13Builder.AddOnHeight(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.Ean13.AddOnHeight" />を構成します。コントロールのaddOnシンボルの高さを設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Ean13Builder.AddOnLabelPosition(C1.Web.Mvc.Barcode.LabelPosition)">
            <summary>
                <see cref="P:C1.Web.Mvc.Ean13.AddOnLabelPosition" />を構成します。コントロールのaddOn値を描画する位置を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Ean13Builder.QuietZone(C1.Web.Mvc.IQuietZoneWithAddOn)">
            <summary>
                <see cref="P:C1.Web.Mvc.Ean13.QuietZone" />を構成します。バーコードシンボルの周囲のクワイエットゾーン（空白の余白）のサイズを設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.Ean8Builder">
            <summary>
                <see cref="T:C1.Web.Mvc.Ean8" />を構成するビルダーを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Ean8Builder.#ctor(C1.Web.Mvc.Ean8)">
            <summary>
                <paramref name="component" />を構成する1つの<see cref="T:C1.Web.Mvc.Fluent.Ean8Builder" />インスタンスを作成します。
            </summary>
            <param name="component">構成される<see cref="T:C1.Web.Mvc.Ean8" />オブジェクト。</param>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.EanBaseBuilder`2">
            <summary>
                <see cref="T:C1.Web.Mvc.EanBase" />を構成するビルダーを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.EanBaseBuilder`2.#ctor(`0)">
            <summary>
                <paramref name="component" />を構成する1つの<see cref="T:C1.Web.Mvc.Fluent.EanBaseBuilder`2" />インスタンスを作成します。
            </summary>
            <param name="component">構成される<see cref="T:C1.Web.Mvc.EanBase" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.EanBaseBuilder`2.ShowLabel(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.EanBase.ShowLabel" />を構成します。シンボル下に値を描画するかどうかを示します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.EanBaseBuilder`2.LabelPosition(C1.Web.Mvc.Barcode.LabelPosition)">
            <summary>
                <see cref="P:C1.Web.Mvc.EanBase.LabelPosition" />を構成します。コントロールの値を描画する位置を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartCoreBuilder`3.RenderEngine(C1.Web.Mvc.Chart.RenderEngine)">
            <summary>
                <see cref="P:C1.Web.Mvc.FlexChartCore`1.RenderEngine" />を構成します。チャートのレンダリングエンジンを設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.CaseSensitiveSearch(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.FlexGridBase`1.CaseSensitiveSearch" />を構成します。検索するときに大文字と小文字を区別するかどうかを決定する値を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.ExpandSelectionOnCopyPaste(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.FlexGridBase`1.ExpandSelectionOnCopyPaste" />を構成します。グリッドでクリップボードへ、またはクリップボードから、コンテンツをコピーまたは貼り付けるときに、選択範囲を自動的に拡張して結合範囲のセルを含めるかどうかを決定する値を取得または設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.Gs1_128Builder">
            <summary>
                <see cref="T:C1.Web.Mvc.Gs1_128" />を構成するビルダーを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Gs1_128Builder.#ctor(C1.Web.Mvc.Gs1_128)">
            <summary>
                <paramref name="component" />を構成する1つの<see cref="T:C1.Web.Mvc.Fluent.Gs1_128Builder" />インスタンスを作成します。
            </summary>
            <param name="component">構成される<see cref="T:C1.Web.Mvc.Gs1_128" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Gs1_128Builder.AutoWidth(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.Gs1_128.AutoWidth" />を構成します。コントロールの幅がValueの長さに応じて自動的に変化するかどうかを示す値を設定します。
            </summary>
            <remarks>
            このプロパティをfalseに設定する場合、コントロールに適切な* CSS幅*が設定されていることを確認する必要があります。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Gs1_128Builder.AutoWidthZoom(System.Int32)">
            <summary>
                <see cref="P:C1.Web.Mvc.Gs1_128.AutoWidthZoom" />を構成します。自動計算されたコントロールの幅に適用されるズーム倍率を設定します。
            </summary>
            <remarks>
            このプロパティは、AutoWidthプロパティがtrueに設定されている場合にのみ有効になります。
                         1以上の任意の数値を使用できます。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Gs1_128Builder.ShowLabel(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.Gs1_128.ShowLabel" />を構成します。シンボル下に値を描画するかどうかを示します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Gs1_128Builder.LabelPosition(C1.Web.Mvc.Barcode.LabelPosition)">
            <summary>
                <see cref="P:C1.Web.Mvc.Gs1_128.LabelPosition" />を構成します。コントロールの値を描画する位置を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.Gs1DataBarBaseBuilder`2">
            <summary>
                <see cref="T:C1.Web.Mvc.Gs1DataBarBase" />を構成するビルダーを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Gs1DataBarBaseBuilder`2.#ctor(`0)">
            <summary>
                <paramref name="component" />を構成する1つの<see cref="T:C1.Web.Mvc.Fluent.Gs1DataBarBaseBuilder`2" />インスタンスを作成します。
            </summary>
            <param name="component">構成される<see cref="T:C1.Web.Mvc.Gs1DataBarBase" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Gs1DataBarBaseBuilder`2.ShowLabel(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.Gs1DataBarBase.ShowLabel" />を構成します。シンボル下に値を描画するかどうかを示します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Gs1DataBarBaseBuilder`2.LabelPosition(C1.Web.Mvc.Barcode.LabelPosition)">
            <summary>
                <see cref="P:C1.Web.Mvc.Gs1DataBarBase.LabelPosition" />を構成します。コントロールの値を描画する位置を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Gs1DataBarBaseBuilder`2.Linkage(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.Gs1DataBarBase.Linkage" />を構成します。2D複合コンポーネントを取得または設定し、 そのセパレータパターンはGS1 DataBarシンボルの上に印刷され、 およびGS1 DataBarシンボルに整列して隣接しています。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Gs1DataBarBaseBuilder`2.LinkageVersion(C1.Web.Mvc.Gs1DataBarLinkageVersion)">
            <summary>
                <see cref="P:C1.Web.Mvc.Gs1DataBarBase.LinkageVersion" />を構成します。リンケージに使用できる複合バーコードコンポーネントを設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Gs1DataBarBaseBuilder`2.LinkageHeight(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.Gs1DataBarBase.LinkageHeight" />を構成します。リンケージシのシンボルの高さを設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Gs1DataBarBaseBuilder`2.HideLinkageText(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.Gs1DataBarBase.HideLinkageText" />を構成します。ラベルテキストにリンケージを表示するかどうかを示します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Gs1DataBarBaseBuilder`2.HideAiText(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.Gs1DataBarBase.HideAiText" />を構成します。ラベルテキストにアプリケーション識別子を表示するかどうかを示します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.Gs1DataBarExpandedBuilder">
            <summary>
                <see cref="T:C1.Web.Mvc.Gs1DataBarExpanded" />を構成するビルダーを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Gs1DataBarExpandedBuilder.#ctor(C1.Web.Mvc.Gs1DataBarExpanded)">
            <summary>
                <paramref name="component" />を構成する1つの<see cref="T:C1.Web.Mvc.Fluent.Gs1DataBarExpandedBuilder" />インスタンスを作成します。
            </summary>
            <param name="component">構成される<see cref="T:C1.Web.Mvc.Gs1DataBarExpanded" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Gs1DataBarExpandedBuilder.AutoWidth(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.Gs1DataBarExpanded.AutoWidth" />を構成します。コントロールの幅がValueの長さに応じて自動的に変化するかどうかを示す値を設定します。
            </summary>
            <remarks>
            このプロパティをfalseに設定する場合、コントロールに適切な* CSS幅*が設定されていることを確認する必要があります。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Gs1DataBarExpandedBuilder.AutoWidthZoom(System.Int32)">
            <summary>
                <see cref="P:C1.Web.Mvc.Gs1DataBarExpanded.AutoWidthZoom" />を構成します。自動計算されたコントロールの幅に適用されるズーム倍率を設定します。
            </summary>
            <remarks>
            このプロパティは、AutoWidthプロパティがtrueに設定されている場合にのみ有効になります。
                         1以上の任意の数値を使用できます。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.Gs1DataBarExpandedStackedBuilder">
            <summary>
                <see cref="T:C1.Web.Mvc.Gs1DataBarExpandedStacked" />を構成するビルダーを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Gs1DataBarExpandedStackedBuilder.#ctor(C1.Web.Mvc.Gs1DataBarExpandedStacked)">
            <summary>
                <paramref name="component" />を構成する1つの<see cref="T:C1.Web.Mvc.Fluent.Gs1DataBarExpandedStackedBuilder" />インスタンスを作成します。
            </summary>
            <param name="component">構成される<see cref="T:C1.Web.Mvc.Gs1DataBarExpandedStacked" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Gs1DataBarExpandedStackedBuilder.AutoWidth(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.Gs1DataBarExpandedStacked.AutoWidth" />を構成します。コントロールの幅がValueの長さに応じて自動的に変化するかどうかを示す値を設定します。
            </summary>
            <remarks>
            このプロパティをfalseに設定する場合、コントロールに適切な* CSS幅*が設定されていることを確認する必要があります。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Gs1DataBarExpandedStackedBuilder.AutoWidthZoom(System.Int32)">
            <summary>
                <see cref="P:C1.Web.Mvc.Gs1DataBarExpandedStacked.AutoWidthZoom" />を構成します。自動計算されたコントロールの幅に適用されるズーム倍率を設定します。
            </summary>
            <remarks>
            このプロパティは、AutoWidthプロパティがtrueに設定されている場合にのみ有効になります。
                         1以上の任意の数値を使用できます。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Gs1DataBarExpandedStackedBuilder.RowCount(System.Int32)">
            <summary>
                <see cref="P:C1.Web.Mvc.Gs1DataBarExpandedStacked.RowCount" />を構成します。RSS Expandedが積み重ねられる行数を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.Gs1DataBarLimitedBuilder">
            <summary>
                <see cref="T:C1.Web.Mvc.Gs1DataBarLimited" />を構成するビルダーを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Gs1DataBarLimitedBuilder.#ctor(C1.Web.Mvc.Gs1DataBarLimited)">
            <summary>
                <paramref name="component" />を構成する1つの<see cref="T:C1.Web.Mvc.Fluent.Gs1DataBarLimitedBuilder" />インスタンスを作成します。
            </summary>
            <param name="component">構成される<see cref="T:C1.Web.Mvc.Gs1DataBarLimited" />オブジェクト。</param>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.Gs1DataBarOmnidirectionalBuilder">
            <summary>
                <see cref="T:C1.Web.Mvc.Gs1DataBarOmnidirectional" />を構成するビルダーを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Gs1DataBarOmnidirectionalBuilder.#ctor(C1.Web.Mvc.Gs1DataBarOmnidirectional)">
            <summary>
                <paramref name="component" />を構成する1つの<see cref="T:C1.Web.Mvc.Fluent.Gs1DataBarOmnidirectionalBuilder" />インスタンスを作成します。
            </summary>
            <param name="component">構成される<see cref="T:C1.Web.Mvc.Gs1DataBarOmnidirectional" />オブジェクト。</param>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.Gs1DataBarStackedBuilder">
            <summary>
                <see cref="T:C1.Web.Mvc.Gs1DataBarStacked" />を構成するビルダーを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Gs1DataBarStackedBuilder.#ctor(C1.Web.Mvc.Gs1DataBarStacked)">
            <summary>
                <paramref name="component" />を構成する1つの<see cref="T:C1.Web.Mvc.Fluent.Gs1DataBarStackedBuilder" />インスタンスを作成します。
            </summary>
            <param name="component">構成される<see cref="T:C1.Web.Mvc.Gs1DataBarStacked" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Gs1DataBarStackedBuilder.Ratio(System.Double)">
            <summary>
                <see cref="P:C1.Web.Mvc.Gs1DataBarStacked.Ratio" />を構成します。シンボルの最上行の比率の高さを設定します。 任意の数値をサポートします。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.Gs1DataBarStackedOmnidirectionalBuilder">
            <summary>
                <see cref="T:C1.Web.Mvc.Gs1DataBarStackedOmnidirectional" />を構成するビルダーを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Gs1DataBarStackedOmnidirectionalBuilder.#ctor(C1.Web.Mvc.Gs1DataBarStackedOmnidirectional)">
            <summary>
                <paramref name="component" />を構成する1つの<see cref="T:C1.Web.Mvc.Fluent.Gs1DataBarStackedOmnidirectionalBuilder" />インスタンスを作成します。
            </summary>
            <param name="component">構成される<see cref="T:C1.Web.Mvc.Gs1DataBarStackedOmnidirectional" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Gs1DataBarStackedOmnidirectionalBuilder.Ratio(System.Double)">
            <summary>
                <see cref="P:C1.Web.Mvc.Gs1DataBarStackedOmnidirectional.Ratio" />を構成します。シンボルの最上行の比率の高さを設定します。 任意の数値をサポートします。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.Gs1DataBarTruncatedBuilder">
            <summary>
                <see cref="T:C1.Web.Mvc.Gs1DataBarTruncated" />を構成するビルダーを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Gs1DataBarTruncatedBuilder.#ctor(C1.Web.Mvc.Gs1DataBarTruncated)">
            <summary>
                <paramref name="component" />を構成する1つの<see cref="T:C1.Web.Mvc.Fluent.Gs1DataBarTruncatedBuilder" />インスタンスを作成します。
            </summary>
            <param name="component">構成される<see cref="T:C1.Web.Mvc.Gs1DataBarTruncated" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputDateBaseBuilder`2.OnClientInvalidInput(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.InputDateBase.OnClientInvalidInput" /> クライアントイベントを構成します。
            無効な入力値が検出された場合に発生します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputMaskBuilder.OnClientInvalidInput(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.InputMask.OnClientInvalidInput" /> クライアントイベントを構成します。
            無効な入力値が検出された場合に発生します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputNumberBuilder.OnClientInvalidInput(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.InputNumber.OnClientInvalidInput" /> クライアントイベントを構成します。
            無効な入力値が検出された場合に発生します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputTimeBuilder`1.OnClientInvalidInput(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.InputTime`1.OnClientInvalidInput" /> クライアントイベントを構成します。
            無効な入力値が検出された場合に発生します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.Interleaved2of5Builder">
            <summary>
                <see cref="T:C1.Web.Mvc.Interleaved2of5" />を構成するビルダーを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Interleaved2of5Builder.#ctor(C1.Web.Mvc.Interleaved2of5)">
            <summary>
                <paramref name="component" />を構成する1つの<see cref="T:C1.Web.Mvc.Fluent.Interleaved2of5Builder" />インスタンスを作成します。
            </summary>
            <param name="component">構成される<see cref="T:C1.Web.Mvc.Interleaved2of5" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Interleaved2of5Builder.AutoWidth(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.Interleaved2of5.AutoWidth" />を構成します。コントロールの幅がValueの長さに応じて自動的に変化するかどうかを示す値を設定します。
            </summary>
            <remarks>
            このプロパティをfalseに設定する場合、コントロールに適切な* CSS幅*が設定されていることを確認する必要があります。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Interleaved2of5Builder.AutoWidthZoom(System.Int32)">
            <summary>
                <see cref="P:C1.Web.Mvc.Interleaved2of5.AutoWidthZoom" />を構成します。自動計算されたコントロールの幅に適用されるズーム倍率を設定します。
            </summary>
            <remarks>
            このプロパティは、AutoWidthプロパティがtrueに設定されている場合にのみ有効になります。
                         1以上の任意の数値を使用できます。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Interleaved2of5Builder.ShowLabel(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.Interleaved2of5.ShowLabel" />を構成します。シンボル下に値を描画するかどうかを示します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Interleaved2of5Builder.NwRatio(C1.Web.Mvc.NarrowWideRatio)">
            <summary>
                <see cref="P:C1.Web.Mvc.Interleaved2of5.NwRatio" />を構成します。コントロールの細バーと太バーの比率を設定します。
            </summary>
            <remarks>
            このプロパティの値は1:2または1:3に設定することができます。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Interleaved2of5Builder.BearerBar(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.Interleaved2of5.BearerBar" />を構成します。ベアラバーを有効にするかどうかを示します。
                        ベアラバーとは、バーコードシンボルの上下,左右又は周辺を取り囲む太い黒い境界線のことです。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Interleaved2of5Builder.LabelPosition(C1.Web.Mvc.Barcode.LabelPosition)">
            <summary>
                <see cref="P:C1.Web.Mvc.Interleaved2of5.LabelPosition" />を構成します。コントロールの値を描画する位置を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Interleaved2of5Builder.CheckCharacter(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.Interleaved2of5.CheckCharacter" />を構成します。チェック文字を有効にするかどうかを示します。
                       Interleaved2of5は、数値を「インターリーブ」するために偶数桁を必要とするため、
                        チェック文字を使用する場合、エンコーディングされるデータは奇数桁でなければならず、
                        結果として必要な偶数桁になります。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.Itf14Builder">
            <summary>
                <see cref="T:C1.Web.Mvc.Itf14" />を構成するビルダーを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Itf14Builder.#ctor(C1.Web.Mvc.Itf14)">
            <summary>
                <paramref name="component" />を構成する1つの<see cref="T:C1.Web.Mvc.Fluent.Itf14Builder" />インスタンスを作成します。
            </summary>
            <param name="component">構成される<see cref="T:C1.Web.Mvc.Itf14" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Itf14Builder.ShowLabel(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.Itf14.ShowLabel" />を構成します。シンボル下に値を描画するかどうかを示します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Itf14Builder.NwRatio(C1.Web.Mvc.NarrowWideRatio)">
            <summary>
                <see cref="P:C1.Web.Mvc.Itf14.NwRatio" />を構成します。コントロールの細バーと太バーの比率を設定します。
            </summary>
            <remarks>
            このプロパティの値は1:2または1:3に設定することができます。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Itf14Builder.BearerBar(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.Itf14.BearerBar" />を構成します。ベアラバーを有効にするかどうかを示します。
                        ベアラバーとは、バーコードシンボルの上下,左右又は周辺を取り囲む太い黒い境界線のことです。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Itf14Builder.LabelPosition(C1.Web.Mvc.Barcode.LabelPosition)">
            <summary>
                <see cref="P:C1.Web.Mvc.Itf14.LabelPosition" />を構成します。コントロールの値を描画する位置を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.JapanesePostalBuilder">
            <summary>
                <see cref="T:C1.Web.Mvc.JapanesePostal" />を構成するビルダーを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.JapanesePostalBuilder.#ctor(C1.Web.Mvc.JapanesePostal)">
            <summary>
                <paramref name="component" />を構成する1つの<see cref="T:C1.Web.Mvc.Fluent.JapanesePostalBuilder" />インスタンスを作成します。
            </summary>
            <param name="component">構成される<see cref="T:C1.Web.Mvc.JapanesePostal" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.JapanesePostalBuilder.ShowLabel(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.JapanesePostal.ShowLabel" />を構成します。シンボル下に値を描画するかどうかを示します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.JapanesePostalBuilder.LabelPosition(C1.Web.Mvc.Barcode.LabelPosition)">
            <summary>
                <see cref="P:C1.Web.Mvc.JapanesePostal.LabelPosition" />を構成します。コントロールの値を描画する位置を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ListBoxBuilder`1.CaseSensitiveSearch(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.ListBox`1.CaseSensitiveSearch" />を構成します。検索するときに大文字と小文字を区別するかどうかを決定する値を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.MicroPdf417Builder">
            <summary>
                <see cref="T:C1.Web.Mvc.MicroPdf417" />を構成するビルダーを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MicroPdf417Builder.#ctor(C1.Web.Mvc.MicroPdf417)">
            <summary>
                <paramref name="component" />を構成する1つの<see cref="T:C1.Web.Mvc.Fluent.MicroPdf417Builder" />インスタンスを作成します。
            </summary>
            <param name="component">構成される<see cref="T:C1.Web.Mvc.MicroPdf417" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MicroPdf417Builder.Dimensions(C1.Web.Mvc.MicroPdfDimensions)">
            <summary>
                <see cref="P:C1.Web.Mvc.MicroPdf417.Dimensions" />を構成します。シンボルの行数と列数を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MicroPdf417Builder.CompactionMode(C1.Web.Mvc.MicroPdfCompactionMode)">
            <summary>
                <see cref="P:C1.Web.Mvc.MicroPdf417.CompactionMode" />を構成します。シンボルのエンコーディング方法を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MicroPdf417Builder.StructuredAppend(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.MicroPdf417.StructuredAppend" />を構成します。構造的連接が有効かどうかを示します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MicroPdf417Builder.SegmentIndex(System.Int32)">
            <summary>
                <see cref="P:C1.Web.Mvc.MicroPdf417.SegmentIndex" />を構成します。構造的連接のインデックスを設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MicroPdf417Builder.FileId(System.Int32)">
            <summary>
                <see cref="P:C1.Web.Mvc.MicroPdf417.FileId" />を構成します。構造的連接のファイル IDを設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MicroPdf417Builder.OptionalFields(C1.Web.Mvc.IOptionalFields)">
            <summary>
                <see cref="P:C1.Web.Mvc.MicroPdf417.OptionalFields" />を構成します。構造的連接のオプションフィールドを設定します。現在、segmentCountのみがサポートされています。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.Pdf417Builder">
            <summary>
                <see cref="T:C1.Web.Mvc.Pdf417" />を構成するビルダーを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Pdf417Builder.#ctor(C1.Web.Mvc.Pdf417)">
            <summary>
                <paramref name="component" />を構成する1つの<see cref="T:C1.Web.Mvc.Fluent.Pdf417Builder" />インスタンスを作成します。
            </summary>
            <param name="component">構成される<see cref="T:C1.Web.Mvc.Pdf417" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Pdf417Builder.AutoWidth(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.Pdf417.AutoWidth" />を構成します。コントロールの幅がValueの長さに応じて自動的に変化するかどうかを示す値を設定します。
            </summary>
            <remarks>
            このプロパティをfalseに設定する場合、コントロールに適切な* CSS幅*が設定されていることを確認する必要があります。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Pdf417Builder.AutoWidthZoom(System.Int32)">
            <summary>
                <see cref="P:C1.Web.Mvc.Pdf417.AutoWidthZoom" />を構成します。自動計算されたコントロールの幅に適用されるズーム倍率を設定します。
            </summary>
            <remarks>
            このプロパティは、AutoWidthプロパティがtrueに設定されている場合にのみ有効になります。
                         1以上の任意の数値を使用できます。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Pdf417Builder.ErrorCorrectionLevel(System.Int32)">
            <summary>
                <see cref="P:C1.Web.Mvc.Pdf417.ErrorCorrectionLevel" />を構成します。このコントロールのエラー修正レベルを設定します。 PDF417 シンボルは、9レベルのエラー修正をサポートします。 レベル０は強度が低く、9 は最も高い修正能力を持ちます。 修正レベルが0に設定されている場合、重要度の低い情報はほとんどエンコーディングされず、 スキャナーは最も単純なエラーの修正を実行できます。 8に設定すると、重大なスキャンするときの問題を修正できます。 PDF417のデフォルトのエラー修正は「auto」です。これにより、 各PDF417シンボルにエンコーディングされた情報量に基づいて、修正レベルが自動的に指定されます。
            </summary>
            <remarks>
            このプロパティの値はnull、undefined、または0〜8に設定できます。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Pdf417Builder.Columns(System.Int32)">
            <summary>
                <see cref="P:C1.Web.Mvc.Pdf417.Columns" />を構成します。シンボル内の列数を設定します。
            </summary>
            <remarks>
            このプロパティの値はnull、undefined、または0〜30に設定できます。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Pdf417Builder.Rows(System.Int32)">
            <summary>
                <see cref="P:C1.Web.Mvc.Pdf417.Rows" />を構成します。シンボル内の行数を設定します。
            </summary>
            <remarks>
            このプロパティの値はnull、undefined、または3〜90に設定できます。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.Pdf417Builder.Compact(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.Pdf417.Compact" />を構成します。コンパクトPDF417シンボルかどうかを示します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PopupBuilder.Position(C1.Web.Mvc.PopupPosition)">
            <summary>
                <see cref="P:C1.Web.Mvc.Popup.Position" />を構成します。オーナ要素に対してポップアップを表示する位置を決定する値を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PopupBuilder.DialogResultSubmit(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.Popup.DialogResultSubmit" />を構成します。
            ダイアログがフォーム要素によってホストされ、ユーザーがフォームを送信するときに、dialogResultとして使用される文字列を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PopupBuilder.OnClientDragging(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.Popup.OnClientDragging" /> クライアントイベントを構成します。
            ポップアップがドラッグされようとしているときに発生するクライアント機能を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PopupBuilder.OnClientDragged(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.Popup.OnClientDragged" /> クライアントイベントを構成します。
            ポップアップがドラッグされた後に発生するクライアント機能を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PopupBuilder.OnClientPositionChanging(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.Popup.OnClientPositionChanging" /> クライアントイベントを構成します。
            DragingイベントとDraggedイベントの間で、ユーザーがポップアップを移動しているときに発生するクライアント関数を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PopupBuilder.OnClientPositionChanged(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.Popup.OnClientPositionChanged" /> クライアントイベントを構成します。
            PositionChangingイベントが発生した後、DraggingイベントとDraggedイベントの間で、ユーザーがポップアップを移動するときに発生するクライアント機能を取得または設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PopupBuilder.OnClientResizing(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.Popup.OnClientResizing" /> クライアントイベントを構成します。
            ポップアップがサイズ変更されようとしているときに発生するクライアント機能を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PopupBuilder.OnClientResized(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.Popup.OnClientResized" /> クライアントイベントを構成します。
            ポップアップがサイズ変更された後に発生するクライアント機能を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PopupBuilder.OnClientSizeChanging(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.Popup.OnClientSizeChanging" /> クライアントイベントを構成します。
            resizingイベントとresizedイベントの間で、ユーザーがポップアップをサイズ変更しているときに発生するクライアント関数を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PopupBuilder.OnClientSizeChanged(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.Popup.OnClientSizeChanged" /> クライアントイベントを構成します。
            SizeChangingイベントが発生した後、resizingイベントとresizedイベントの間で、ユーザーがポップアップをサイズ変更するときに発生するクライアント機能を取得または設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.QrCodeBuilder">
            <summary>
                <see cref="T:C1.Web.Mvc.QrCode" />を構成するビルダーを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.QrCodeBuilder.#ctor(C1.Web.Mvc.QrCode)">
            <summary>
                <paramref name="component" />を構成する1つの<see cref="T:C1.Web.Mvc.Fluent.QrCodeBuilder" />インスタンスを作成します。
            </summary>
            <param name="component">構成される<see cref="T:C1.Web.Mvc.QrCode" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.QrCodeBuilder.CharCode(System.Int32)">
            <summary>
                <see cref="P:C1.Web.Mvc.QrCode.CharCode" />を構成します。文字セットに関連付けられた文字のコレクションを設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.QrCodeBuilder.Charset(C1.Web.Mvc.QrCodeCharset)">
            <summary>
                <see cref="P:C1.Web.Mvc.QrCode.Charset" />を構成します。このコントロールのエンコーディングに使用される文字セットを設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.QrCodeBuilder.Model(C1.Web.Mvc.QrCodeModel)">
            <summary>
                <see cref="P:C1.Web.Mvc.QrCode.Model" />を構成します。使用されるコントロールのモデルスタイルを設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.QrCodeBuilder.Version(System.Int32)">
            <summary>
                <see cref="P:C1.Web.Mvc.QrCode.Version" />を構成します。コントロールのさまざまなモジュール構成を設定します。 QRCodeのバージョンは、バージョン1からバージョン40までです。 各バージョンには、異なるモジュール構成やモジュール数があります。 （モジュールとは、QRCodeを構成する黒と白のドットのことです。）
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.QrCodeBuilder.ErrorCorrectionLevel(C1.Web.Mvc.QrCodeCorrectionLevel)">
            <summary>
                <see cref="P:C1.Web.Mvc.QrCode.ErrorCorrectionLevel" />を構成します。QRCodeのエラー修正レベルを設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.QrCodeBuilder.Mask(System.Int32)">
            <summary>
                <see cref="P:C1.Web.Mvc.QrCode.Mask" />を構成します。シンボル全体をカバーするようにグリッドで繰り返されて定義されたパターンを設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.QrCodeBuilder.Connection(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.QrCode.Connection" />を構成します。シンボルが構造された付加メッセージの一部であるかどうかを示します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.QrCodeBuilder.ConnectionIndex(System.Int32)">
            <summary>
                <see cref="P:C1.Web.Mvc.QrCode.ConnectionIndex" />を構成します。構造された付加メッセージ内のシンボルブロックのインデックスを設定します。
            </summary>
            <remarks>
            このプロパティの値は0または15に設定することができます。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.UpcABuilder">
            <summary>
                <see cref="T:C1.Web.Mvc.UpcA" />を構成するビルダーを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.UpcABuilder.#ctor(C1.Web.Mvc.UpcA)">
            <summary>
                <paramref name="component" />を構成する1つの<see cref="T:C1.Web.Mvc.Fluent.UpcABuilder" />インスタンスを作成します。
            </summary>
            <param name="component">構成される<see cref="T:C1.Web.Mvc.UpcA" />オブジェクト。</param>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.UpcBaseBuilder`2">
            <summary>
                <see cref="T:C1.Web.Mvc.UpcBase" />を構成するビルダーを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.UpcBaseBuilder`2.#ctor(`0)">
            <summary>
                <paramref name="component" />を構成する1つの<see cref="T:C1.Web.Mvc.Fluent.UpcBaseBuilder`2" />インスタンスを作成します。
            </summary>
            <param name="component">構成される<see cref="T:C1.Web.Mvc.UpcBase" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.UpcBaseBuilder`2.ShowLabel(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.UpcBase.ShowLabel" />を構成します。シンボル下に値を描画するかどうかを示します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.UpcBaseBuilder`2.LabelPosition(C1.Web.Mvc.Barcode.LabelPosition)">
            <summary>
                <see cref="P:C1.Web.Mvc.UpcBase.LabelPosition" />を構成します。コントロールの値を描画する位置を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.UpcBaseBuilder`2.AddOn(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.UpcBase.AddOn" />を構成します。コントロールのaddOn値を設定します。
            </summary>
            <remarks>
            このプロパティの値は2または5に設定することができます。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.UpcBaseBuilder`2.AddOnHeight(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.UpcBase.AddOnHeight" />を構成します。コントロールのaddOnシンボルの高さを設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.UpcBaseBuilder`2.AddOnLabelPosition(C1.Web.Mvc.Barcode.LabelPosition)">
            <summary>
                <see cref="P:C1.Web.Mvc.UpcBase.AddOnLabelPosition" />を構成します。コントロールのaddOn値を描画する位置を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.UpcBaseBuilder`2.QuietZone(C1.Web.Mvc.IQuietZoneWithAddOn)">
            <summary>
                <see cref="P:C1.Web.Mvc.UpcBase.QuietZone" />を構成します。バーコードシンボルの周囲のクワイエットゾーン（空白の余白）のサイズを設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.UpcE0Builder">
            <summary>
                <see cref="T:C1.Web.Mvc.UpcE0" />を構成するビルダーを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.UpcE0Builder.#ctor(C1.Web.Mvc.UpcE0)">
            <summary>
                <paramref name="component" />を構成する1つの<see cref="T:C1.Web.Mvc.Fluent.UpcE0Builder" />インスタンスを作成します。
            </summary>
            <param name="component">構成される<see cref="T:C1.Web.Mvc.UpcE0" />オブジェクト。</param>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.UpcE1Builder">
            <summary>
                <see cref="T:C1.Web.Mvc.UpcE1" />を構成するビルダーを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.UpcE1Builder.#ctor(C1.Web.Mvc.UpcE1)">
            <summary>
                <paramref name="component" />を構成する1つの<see cref="T:C1.Web.Mvc.Fluent.UpcE1Builder" />インスタンスを作成します。
            </summary>
            <param name="component">構成される<see cref="T:C1.Web.Mvc.UpcE1" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.Accordion(System.String)">
            <summary>
                <see cref="T:C1.Web.Mvc.Accordion" />コントロールを作成し、指定されたセレクターと一致するdom要素にアタッチします。
            </summary>
            <param name="selector">
            セレクタを指定します（オプション）。
            設定されていない場合、デフォルトのdom要素が生成されます。
            </param>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.AccordionBuilder" />。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.Codabar(System.String)">
            <summary>
                <see cref="T:C1.Web.Mvc.Codabar" />コントロールを作成し、指定されたセレクターと一致するdom要素にアタッチします。
            </summary>
            <param name="selector">
            セレクタを指定します（オプション）。
            設定されていない場合、デフォルトのdom要素が生成されます。
            </param>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.CodabarBuilder" />。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.Code128(System.String)">
            <summary>
                <see cref="T:C1.Web.Mvc.Code128" />コントロールを作成し、指定されたセレクターと一致するdom要素にアタッチします。
            </summary>
            <param name="selector">
            セレクタを指定します（オプション）。
            設定されていない場合、デフォルトのdom要素が生成されます。
            </param>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.Code128Builder" />。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.Code39(System.String)">
            <summary>
                <see cref="T:C1.Web.Mvc.Code39" />コントロールを作成し、指定されたセレクターと一致するdom要素にアタッチします。
            </summary>
            <param name="selector">
            セレクタを指定します（オプション）。
            設定されていない場合、デフォルトのdom要素が生成されます。
            </param>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.Code39Builder" />。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.Code49(System.String)">
            <summary>
                <see cref="T:C1.Web.Mvc.Code49" />コントロールを作成し、指定されたセレクターと一致するdom要素にアタッチします。
            </summary>
            <param name="selector">
            セレクタを指定します（オプション）。
            設定されていない場合、デフォルトのdom要素が生成されます。
            </param>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.Code49Builder" />。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.Code93(System.String)">
            <summary>
                <see cref="T:C1.Web.Mvc.Code93" />コントロールを作成し、指定されたセレクターと一致するdom要素にアタッチします。
            </summary>
            <param name="selector">
            セレクタを指定します（オプション）。
            設定されていない場合、デフォルトのdom要素が生成されます。
            </param>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.Code93Builder" />。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.DataMatrixEcc000(System.String)">
            <summary>
                <see cref="T:C1.Web.Mvc.DataMatrixEcc000" />コントロールを作成し、指定されたセレクターと一致するdom要素にアタッチします。
            </summary>
            <param name="selector">
            セレクタを指定します（オプション）。
            設定されていない場合、デフォルトのdom要素が生成されます。
            </param>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.DataMatrixEcc000Builder" />。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.DataMatrixEcc200(System.String)">
            <summary>
                <see cref="T:C1.Web.Mvc.DataMatrixEcc200" />コントロールを作成し、指定されたセレクターと一致するdom要素にアタッチします。
            </summary>
            <param name="selector">
            セレクタを指定します（オプション）。
            設定されていない場合、デフォルトのdom要素が生成されます。
            </param>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.DataMatrixEcc200Builder" />。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.Ean13(System.String)">
            <summary>
                <see cref="T:C1.Web.Mvc.Ean13" />コントロールを作成し、指定されたセレクターと一致するdom要素にアタッチします。
            </summary>
            <param name="selector">
            セレクタを指定します（オプション）。
            設定されていない場合、デフォルトのdom要素が生成されます。
            </param>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.Ean13Builder" />。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.Ean8(System.String)">
            <summary>
                <see cref="T:C1.Web.Mvc.Ean8" />コントロールを作成し、指定されたセレクターと一致するdom要素にアタッチします。
            </summary>
            <param name="selector">
            セレクタを指定します（オプション）。
            設定されていない場合、デフォルトのdom要素が生成されます。
            </param>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.Ean8Builder" />。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.Gs1_128(System.String)">
            <summary>
                <see cref="T:C1.Web.Mvc.Gs1_128" />コントロールを作成し、指定されたセレクターと一致するdom要素にアタッチします。
            </summary>
            <param name="selector">
            セレクタを指定します（オプション）。
            設定されていない場合、デフォルトのdom要素が生成されます。
            </param>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.Gs1_128Builder" />。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.Gs1DataBarExpanded(System.String)">
            <summary>
                <see cref="T:C1.Web.Mvc.Gs1DataBarExpanded" />コントロールを作成し、指定されたセレクターと一致するdom要素にアタッチします。
            </summary>
            <param name="selector">
            セレクタを指定します（オプション）。
            設定されていない場合、デフォルトのdom要素が生成されます。
            </param>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.Gs1DataBarExpandedBuilder" />。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.Gs1DataBarExpandedStacked(System.String)">
            <summary>
                <see cref="T:C1.Web.Mvc.Gs1DataBarExpandedStacked" />コントロールを作成し、指定されたセレクターと一致するdom要素にアタッチします。
            </summary>
            <param name="selector">
            セレクタを指定します（オプション）。
            設定されていない場合、デフォルトのdom要素が生成されます。
            </param>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.Gs1DataBarExpandedStackedBuilder" />。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.Gs1DataBarLimited(System.String)">
            <summary>
                <see cref="T:C1.Web.Mvc.Gs1DataBarLimited" />コントロールを作成し、指定されたセレクターと一致するdom要素にアタッチします。
            </summary>
            <param name="selector">
            セレクタを指定します（オプション）。
            設定されていない場合、デフォルトのdom要素が生成されます。
            </param>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.Gs1DataBarLimitedBuilder" />。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.Gs1DataBarOmnidirectional(System.String)">
            <summary>
                <see cref="T:C1.Web.Mvc.Gs1DataBarOmnidirectional" />コントロールを作成し、指定されたセレクターと一致するdom要素にアタッチします。
            </summary>
            <param name="selector">
            セレクタを指定します（オプション）。
            設定されていない場合、デフォルトのdom要素が生成されます。
            </param>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.Gs1DataBarOmnidirectionalBuilder" />。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.Gs1DataBarStacked(System.String)">
            <summary>
                <see cref="T:C1.Web.Mvc.Gs1DataBarStacked" />コントロールを作成し、指定されたセレクターと一致するdom要素にアタッチします。
            </summary>
            <param name="selector">
            セレクタを指定します（オプション）。
            設定されていない場合、デフォルトのdom要素が生成されます。
            </param>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.Gs1DataBarStackedBuilder" />。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.Gs1DataBarStackedOmnidirectional(System.String)">
            <summary>
                <see cref="T:C1.Web.Mvc.Gs1DataBarStackedOmnidirectional" />コントロールを作成し、指定されたセレクターと一致するdom要素にアタッチします。
            </summary>
            <param name="selector">
            セレクタを指定します（オプション）。
            設定されていない場合、デフォルトのdom要素が生成されます。
            </param>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.Gs1DataBarStackedOmnidirectionalBuilder" />。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.Gs1DataBarTruncated(System.String)">
            <summary>
                <see cref="T:C1.Web.Mvc.Gs1DataBarTruncated" />コントロールを作成し、指定されたセレクターと一致するdom要素にアタッチします。
            </summary>
            <param name="selector">
            セレクタを指定します（オプション）。
            設定されていない場合、デフォルトのdom要素が生成されます。
            </param>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.Gs1DataBarTruncatedBuilder" />。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.Interleaved2of5(System.String)">
            <summary>
                <see cref="T:C1.Web.Mvc.Interleaved2of5" />コントロールを作成し、指定されたセレクターと一致するdom要素にアタッチします。
            </summary>
            <param name="selector">
            セレクタを指定します（オプション）。
            設定されていない場合、デフォルトのdom要素が生成されます。
            </param>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.Interleaved2of5Builder" />。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.Itf14(System.String)">
            <summary>
                <see cref="T:C1.Web.Mvc.Itf14" />コントロールを作成し、指定されたセレクターと一致するdom要素にアタッチします。
            </summary>
            <param name="selector">
            セレクタを指定します（オプション）。
            設定されていない場合、デフォルトのdom要素が生成されます。
            </param>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.Itf14Builder" />。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.JapanesePostal(System.String)">
            <summary>
                <see cref="T:C1.Web.Mvc.JapanesePostal" />コントロールを作成し、指定されたセレクターと一致するdom要素にアタッチします。
            </summary>
            <param name="selector">
            セレクタを指定します（オプション）。
            設定されていない場合、デフォルトのdom要素が生成されます。
            </param>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.JapanesePostalBuilder" />。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.MicroPdf417(System.String)">
            <summary>
                <see cref="T:C1.Web.Mvc.MicroPdf417" />コントロールを作成し、指定されたセレクターと一致するdom要素にアタッチします。
            </summary>
            <param name="selector">
            セレクタを指定します（オプション）。
            設定されていない場合、デフォルトのdom要素が生成されます。
            </param>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.MicroPdf417Builder" />。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.Pdf417(System.String)">
            <summary>
                <see cref="T:C1.Web.Mvc.Pdf417" />コントロールを作成し、指定されたセレクターと一致するdom要素にアタッチします。
            </summary>
            <param name="selector">
            セレクタを指定します（オプション）。
            設定されていない場合、デフォルトのdom要素が生成されます。
            </param>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.Pdf417Builder" />。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.QrCode(System.String)">
            <summary>
                <see cref="T:C1.Web.Mvc.QrCode" />コントロールを作成し、指定されたセレクターと一致するdom要素にアタッチします。
            </summary>
            <param name="selector">
            セレクタを指定します（オプション）。
            設定されていない場合、デフォルトのdom要素が生成されます。
            </param>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.QrCodeBuilder" />。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.UpcA(System.String)">
            <summary>
                <see cref="T:C1.Web.Mvc.UpcA" />コントロールを作成し、指定されたセレクターと一致するdom要素にアタッチします。
            </summary>
            <param name="selector">
            セレクタを指定します（オプション）。
            設定されていない場合、デフォルトのdom要素が生成されます。
            </param>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.UpcABuilder" />。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.UpcE0(System.String)">
            <summary>
                <see cref="T:C1.Web.Mvc.UpcE0" />コントロールを作成し、指定されたセレクターと一致するdom要素にアタッチします。
            </summary>
            <param name="selector">
            セレクタを指定します（オプション）。
            設定されていない場合、デフォルトのdom要素が生成されます。
            </param>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.UpcE0Builder" />。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.UpcE1(System.String)">
            <summary>
                <see cref="T:C1.Web.Mvc.UpcE1" />コントロールを作成し、指定されたセレクターと一致するdom要素にアタッチします。
            </summary>
            <param name="selector">
            セレクタを指定します（オプション）。
            設定されていない場合、デフォルトのdom要素が生成されます。
            </param>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.UpcE1Builder" />。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.AccordionPaneBuilder">
            <summary>
                <see cref="T:C1.Web.Mvc.AccordionPane" />を構成するビルダーを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AccordionPaneBuilder.#ctor(C1.Web.Mvc.AccordionPane)">
            <summary>
                <paramref name="obj" />を構成する1つの<see cref="T:C1.Web.Mvc.Fluent.AccordionPaneBuilder" />インスタンスを作成します。
            </summary>
            <param name="obj">構成される<see cref="T:C1.Web.Mvc.AccordionPane" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AccordionPaneBuilder.Header(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.AccordionPane.Header" />を構成します。
            AccordionPaneのheader要素を決定するためのセレクター文字列を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AccordionPaneBuilder.Content(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.AccordionPane.Content" />を構成します。
            AccordionPaneのcontent要素を決定するためのセレクター文字列を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AccordionPaneBuilder.IsDisabled(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.AccordionPane.IsDisabled" />を構成します。この AccordionPane が無効かどうかを示す値を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AccordionPaneBuilder.IsVisible(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.AccordionPane.IsVisible" />を構成します。この AccordionPane が表示されるかどうかを示す値を取得または設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TooltipBaseBuilder`2.Position(C1.Web.Mvc.PopupPosition)">
            <summary>
                <see cref="P:C1.Web.Mvc.TooltipBase.Position" />を構成します。オーナ要素に対してツールチップを表示する必要があるPopupPositionを設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Code128CodeSet">
            <summary>
            Code128の作成に使用するコードセットを定義します。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Code128CodeSet.A">
            <summary>
            128A (Code Set A) では、ASCII 文字 00 ～ 95（０～９、A ～ Z、制御コード）、特殊文字、および FNC１～４が使用されます。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Code128CodeSet.B">
            <summary>
            128B (Code Set B) では、ASCII 文字 32 ～ 127（０～９、A ～ Z、a ～ z）、特殊文字、および FNC１～４が使用されます。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Code128CodeSet.C">
            <summary>
            128C (Code Set C) では、00 ～ 99（１つのコードで２桁をエンコード）および FNC1 が使用されます。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.IBarcodeFont.FontFamily">
            <summary>
            バーコード値のフォントのファミリーを取得または設定します。
            このプロパティのデフォルト値は <b>sans-serif</b>です。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.IBarcodeFont.FontStyle">
            <summary>
            バーコード値のフォントスタイルを取得または設定します。
            このプロパティのデフォルト値は <b>normal</b>です。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.IBarcodeFont.FontWeight">
            <summary>
            バーコード値の値のフォントの太さを取得または設定します。
            このプロパティのデフォルト値は <b>normal</b>です。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.IBarcodeFont.TextDecoration">
            <summary>
            バーコード値の特殊のテキスト書式を取得または設定します。
            このプロパティのデフォルト値は <b>none</b>です。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.IBarcodeFont.TextAlign">
            <summary>
            バーコード値のテキストの表示位置を取得または設定します。
            このプロパティのデフォルト値は <b>center</b>です。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.IBarcodeFont.FontSize">
            <summary>
            バーコード値のフォントのサイズを取得または設定します。
            このプロパティのデフォルト値は <b>12px</b>です。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.IOptionalFields">
            <summary>
            構造的連接のオプションフィールド。現在、segmentCountのみがサポートされています。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.IOptionalFields.SegmentCount">
            <summary>
            セグメント数のフィールドが使用されているかどうかを示します。 セグメント数のフィールド（分散ファイル内の構造的連接シンボルの総数を識別する）には、 1〜99 999の値を含めることができ、2つのコードワードとしてエンコーディングすることができます。 オプションのセグメント数フィールドが使用されている場合、 そのフィールドがすべてのセグメントに表示されます。

このプロパティのデフォルト値は<b>true</b>です。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.IQuietZone.Left">
            <summary>
            バーコードシンボルの左側のクワイエットゾーンのサイズ。

このプロパティのデフォルト値は<b>0</b>です。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.IQuietZone.Right">
            <summary>
            バーコードシンボルの右側のクワイエットゾーンのサイズ。

このプロパティのデフォルト値は<b>0</b>です。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.IQuietZone.Top">
            <summary>
            バーコードシンボルの上側のクワイエットゾーンのサイズ。

このプロパティのデフォルト値は<b>0</b>です。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.IQuietZone.Bottom">
            <summary>
            バーコードシンボルの下側のクワイエットゾーンのサイズ。

このプロパティのデフォルト値は<b>0</b>です。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.NarrowWideRatio">
            <summary>
            太バーと細バーの幅比率を定義します。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.NarrowWideRatio.OneToTwo">
            <summary>
            太バーと細バーの幅比率1:2です。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.NarrowWideRatio.OneToThree">
            <summary>
            太バーと細バーの幅比率1:3です。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Barcode.LabelPosition">
            <summary>
            バーコード値を表示するラベルの位置を定義します。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Barcode.LabelPosition.Top">
            <summary>
            バーコードの上部にバーコードラベルを表示します。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Barcode.LabelPosition.Bottom">
            <summary>
            バーコードの下部にバーコードラベルを表示します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.IQuietZoneWithAddOn.AddOn">
            <summary>
            addOnは、メインシンボルとアドオンシンボルの間のクワイエットゾーンのサイズです。
            このプロパティのデフォルト値は<b>0</b>です。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.QrCodeCharset">
            <summary>
            バーコードエンコーディングの文字セットの種類を定義します。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.QrCodeCharset.Utf8">
            <summary>
            UTF-8文字セットを使用してエンコーディングします。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.QrCodeCharset.ShiftJis">
            <summary>
            Shift_JIS文字セットを使用してエンコーディングします。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.QrCodeModel">
            <summary>
            使用するQRCodeのモデルスタイルを示します。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.QrCodeModel.Model1">
            <summary>
            QRCode model1:オリジナルモデル。 Model1はModel2のプロトタイプで、 Micro QR.1～14バージョンがAIMI規格に登録されています。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.QrCodeModel.Model2">
            <summary>
            QRCode model2:拡張したモデル。 Model2には、位置設定を改善するための配置パターンがあり、 またModel 1よりも大きなデータが含まれています。 AIMI規格には1〜40バージョンが登録されています。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.QrCodeCorrectionLevel">
            <summary>
            QRCodeエラー修正レベルを定義します。 詳細については、<a href="https://www.qrcode.com/en/about/error_correction.html" target="_blank">ErrorCorrectionLevel</a>を参考してください。 </summary>
        </member>
        <member name="F:C1.Web.Mvc.QrCodeCorrectionLevel.Low">
            <summary>
            コードを約7％修正します。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.QrCodeCorrectionLevel.Medium">
            <summary>
            コードを約15%修正します。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.QrCodeCorrectionLevel.Quartile">
            <summary>
            コードを約25%修正します。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.QrCodeCorrectionLevel.High">
            <summary>
            コードを約30%修正します。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Gs1DataBarLinkageVersion">
            <summary>
            リンケージに使用できる複合バーコードコンポーネントシンボルを定義します。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Gs1DataBarLinkageVersion.Cca">
            <summary>
            CCAコンポーネントには、2つ、3つ、や4つのデータ列があり、コンポーネントのサイズは3〜12行です。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Gs1DataBarLinkageVersion.Ccb">
            <summary>
            CCBは、最大338桁をエンコーディングできる複数行のシンボルコンポーネントです。 CCBコンポーネントには、2つ、3つ、や4つのデータ列があり、コンポーネントのサイズは4〜44行です。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.MicroPdfDimensions">
            <summary>
            シンボルの行数と列数を定義します。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.MicroPdfCompactionMode">
            <summary>
            MicroPDFエンコーディング方法のシンボルを示します。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.MicroPdfCompactionMode.Text">
            <summary>
            すべての印刷可能なASCII文字と3つのASCII制御文字を含めます。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.MicroPdfCompactionMode.Numeric">
            <summary>
            8ビットバイト。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.MicroPdfCompactionMode.Byte">
            <summary>
            連続した数字の長い文字列。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.RenderType">
            <summary>
            すべての種類のバーコードの描画の種類を指定します。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.RenderType.Canvas">
            <summary>
                <a href="https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API" target="_blank">Canvas</a>を使用してバーコードを描画します。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.RenderType.Svg">
            <summary>
                <a href="https://developer.mozilla.org/en-US/docs/Web/SVG" target="_blank">SVG</a> を使用してバーコードを描画します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexChartCore`1.RenderEngine">
            <summary>
            チャートのレンダリングエンジンを取得または設定します。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Chart.RenderEngine">
            <summary>
            チャートのRenderEngineを指定します。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.RenderEngine.Svg">
            <summary>
            SvgRenderEngine - デフォルト。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.RenderEngine.WebGL">
            <summary>
            WebGLRenderEngine.。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ComboBoxBase`1.CaseSensitiveSearch">
            <summary>
            検索するときに大文字と小文字を区別するかどうかを決定する値を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.CaseSensitiveSearch">
            <summary>
            検索するときに大文字と小文字を区別するかどうかを決定する値を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.ExpandSelectionOnCopyPaste">
            <summary>
            グリッドでクリップボードへ、またはクリップボードから、コンテンツをコピーまたは貼り付けるときに、選択範囲を自動的に拡張して結合範囲のセルを含めるかどうかを決定する値を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.InputColor.OnClientInvalidInput">
            <summary>
            無効な文字が入力されたときに発生します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.InputDateBase.OnClientInvalidInput">
            <summary>
            無効な文字が入力されたときに発生します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.InputMask.OnClientInvalidInput">
            <summary>
            無効な文字が入力されたときに発生します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.InputNumber.OnClientInvalidInput">
            <summary>
            無効な文字が入力されたときに発生します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.InputTime`1.OnClientInvalidInput">
            <summary>
            無効な文字が入力されたときに発生します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ListBox`1.CaseSensitiveSearch">
            <summary>
            検索するときに大文字と小文字を区別するかどうかを決定する値を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Popup.Position">
            <summary>
            オーナ要素に対してポップアップを表示する位置を決定する値を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Popup.DialogResultSubmit">
            <summary>
            ダイアログがフォーム要素によってホストされ、ユーザーがフォームを送信するときに、dialogResultとして使用される文字列を設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Popup.OnClientDragging">
            <summary>
            ポップアップがドラッグされようとしているときに発生するクライアント機能を設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Popup.OnClientDragged">
            <summary>
            ポップアップがドラッグされた後に発生するクライアント機能を設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Popup.OnClientPositionChanging">
            <summary>
            DragingイベントとDraggedイベントの間で、ユーザーがポップアップを移動しているときに発生するクライアント関数を設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Popup.OnClientPositionChanged">
            <summary>
            PositionChangingイベントが発生した後、DraggingイベントとDraggedイベントの間で、ユーザーがポップアップを移動するときに発生するクライアント関数を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Popup.OnClientResizing">
            <summary>
            ポップアップがサイズ変更されようとしているときに発生するクライアント機能を設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Popup.OnClientResized">
            <summary>
            ポップアップがサイズ変更された後に発生するクライアント機能を設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Popup.OnClientSizeChanging">
            <summary>
            resizingイベントとresizedイベントの間で、ユーザーがポップアップのサイズを変更するときに発生するクライアント機能を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Popup.OnClientSizeChanged">
            <summary>
            SizeChangingイベントが発生した後、resizingイベントとresizedイベントの間で、ユーザーがポップアップのサイズを変更するときに発生するクライアント機能を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ColumnBase.Editor">
            <summary>
            カスタムセルエディタとして使用する入力コントロールへの参照を設定します。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.PopupPosition">
            <summary>
            参照要素に対するポップアップ要素の位置を表します。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.PopupPosition.Above">
            <summary>
            参照要素の上。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.PopupPosition.AboveRight">
            <summary>
            参照要素の上右。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.PopupPosition.RightTop">
            <summary>
            参照要素の右上。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.PopupPosition.Right">
            <summary>
            参照要素の右。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.PopupPosition.RightBottom">
            <summary>
            参照要素の右下。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.PopupPosition.BelowRight">
            <summary>
            参照要素の下右。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.PopupPosition.Below">
            <summary>
            参照要素の下。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.PopupPosition.BelowLeft">
            <summary>
            参照要素の下左。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.PopupPosition.LeftBottom">
            <summary>
            参照要素の左下。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.PopupPosition.Left">
            <summary>
            参照要素の左。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.PopupPosition.LeftTop">
            <summary>
            参照要素の左上。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.PopupPosition.AboveLeft">
            <summary>
            参照要素の上左。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.AccordionPane">
            <summary>
            Accordion コントロール内のペインを表します。
            </summary>
            <remarks>
            AccordionPaneには、headerとcontentの2つの要素が含まれます。
                headerはペインのタイトルを表示します。
                また、contentはペインのコンテンツを示す折りたたみ可能な要素です。
            </remarks>
        </member>
        <member name="M:C1.Web.Mvc.AccordionPane.#ctor">
            <summary>
            1つの<see cref="T:C1.Web.Mvc.AccordionPane" />インスタンスを作成します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.AccordionPane.Header">
            <summary>
            AccordionPaneのヘッダー要素を決定するためのセレクター文字列を設定します。...
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.AccordionPane.Content">
            <summary>
            AccordionPaneのcontent要素を決定するためのセレクター文字列を設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.AccordionPane.IsDisabled">
            <summary>
            このAccordionPaneが無効かどうかを示す値を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.AccordionPane.IsVisible">
            <summary>
            このAccordionPaneが表示されるかどうかを示す値を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.TooltipBase.Position">
            <summary>
            オーナ要素に対してツールチップを表示する必要があるPopupPositionを取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.BarcodeBase.OnClientIsValidChanged">
            <summary>
            IsValid プロパティの値が変更されたときに発生します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.BaseCollectionViewService`1.CalculatedFields">
            <summary>
            キーが計算フィールドを表し、値が式であるオブジェクトを取得または設定します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BaseCollectionViewServiceBuilder`3.CalculatedFields(System.Action{C1.Web.Mvc.Fluent.ListItemFactory{C1.Web.Mvc.CalculatedField,C1.Web.Mvc.Fluent.CalculatedFieldBuilder}})">
            <summary>
                <see cref="P:C1.Web.Mvc.BaseCollectionViewService`1.CalculatedFields" /> を構成します。
            計算フィールドを設定します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AutoCompleteBaseBuilder`3.BeginsWithSearch(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.AutoCompleteBase`1.BeginsWithSearch" /> を構成します。
            指定された検索用語で始まる項目を検索するかどうかを決定する値を取得または設定します。このプロパティのデフォルト値はFalseです。これにより、コントロールは指定された検索語を含む項目を検索します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BarcodeBaseBuilder`2.OnClientIsValidChanged(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.BarcodeBase.OnClientIsValidChanged" /> クライアントイベントを構成します。
            IsValid プロパティの値が変化するときに発生します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CalendarBuilder.RangeMin(System.Int32)">
            <summary>
                <see cref="P:C1.Web.Mvc.Calendar.RangeMin" /> を構成します。
            日付範囲を編集するときに許可される最小日数を設定します。
            </summary>
            <remarks>
            このプロパティのデフォルト値は**0**です。これは、範囲の長さの最小値がないことを意味します。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CalendarBuilder.RangeMax(System.Int32)">
            <summary>
                <see cref="P:C1.Web.Mvc.Calendar.RangeMax" /> を構成します。
            日付範囲を編集するときに許可される最大長を設定します。
            </summary>
            <remarks>
            このプロパティのデフォルト値は**0**です。これは、範囲の長さの最大長がないことを意味します。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CalendarBuilder.RangeEnd(System.DateTime)">
            <summary>
                <see cref="P:C1.Web.Mvc.Calendar.RangeEnd" /> を構成します。
            範囲選択で最後に選択された日付を設定します。
            </summary>
            <remarks>
            日付範囲の選択を有効にするには、SelectionModeプロパティを**DateSelectionMode.Range**に設定します。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CalendarBuilder.OnClientRangeEndChanged(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.Calendar.OnClientRangeEndChanged" /> クライアントイベントを構成します。
            RangeEnd プロパティの値が変化するときに発生します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CalendarBuilder.MonthCount(System.Int32)">
            <summary>
                <see cref="P:C1.Web.Mvc.Calendar.MonthCount" /> を構成します。
            カレンダー内に表示する月数を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CalendarBuilder.WeeksBefore(System.Int32)">
            <summary>
                <see cref="P:C1.Web.Mvc.Calendar.WeeksBefore" /> を構成します。
            カレンダーに現在の月より前に表示する週数を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CalendarBuilder.WeeksAfter(System.Int32)">
            <summary>
                <see cref="P:C1.Web.Mvc.Calendar.WeeksAfter" /> を構成します。
            カレンダーに現在の月の後に表示する週数を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CalendarBuilder.ShowMonthPicker(C1.Web.Mvc.ShowMonthPicker)">
            <summary>
                <see cref="P:C1.Web.Mvc.Calendar.ShowMonthPicker" /> を構成します。
            ユーザーが月カレンダーのヘッダー要素をクリックすると、カレンダーに月のリストを表示するかどうかを決定する値を設定します。
            </summary>
            <remarks>
            このプロパティのデフォルト値はShowMonthPicker.Firstです。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartBaseBuilder`3.Legend(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.TreeMap`1.Legend" /> を構成します。
            凡例のmaxSizeを設定します。
            </summary>
            <param name="maxSize">サイズはピクセル単位で指定できます。 maxSize = '100px'またはパーセント：maxSize = '50％ '。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.ShowPlaceholders(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.FlexGridBase`1.ShowPlaceholders" /> を構成します。
            グリッドでセルを編集するときに、列ヘッダをプレースホルダーとして使用するかどうかを決定する値を設定します。 このプロパティは、グリッドの組み込みエディターでのみ機能します。 このプロパティはIEでは役に立ちません。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexPieBaseBuilder`3.ChartsPerLine(System.Int32)">
            <summary>
                <see cref="P:C1.Web.Mvc.FlexPieBase`1.ChartsPerLine" /> を構成します。
            1行あたりのチャートの最大数を設定します。
            </summary>
            <remarks>
            このプロパティは、複数の円グラフがある場合に使用されます。デフォルトではゼロであり、コントロールはレイアウトを自動的に定義します。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexPieBaseBuilder`3.Titles(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.FlexPieBase`1.Titles" /> を構成します。
            円グラフのタイトルを設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputDateBaseBuilder`2.PredefinedRanges(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.InputDateBase.PredefinedRanges" /> を構成します。
            事前定義された範囲を返す関数を設定します。
            </summary>
            <remarks>
            このプロパティは、SelectionModeプロパティがDateSelectionMode.Rangeに設定されている場合にのみ役立ちます。 null値の事前定義された範囲は、カレンダーをクリックしてユーザーが定義するカスタム範囲を表します。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputDateBaseBuilder`2.RepeatButtons(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.InputDateBase.RepeatButtons" /> を構成します。
            カレンダーボタンがリピートボタン(押された状態で繰り返し実行するボタン)として動作するかどうかを決定する値を取得または設定します。
            </summary>
            <remarks>
            このプロパティのデフォルト値は<b>true</b>です。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputDateBaseBuilder`2.ShowYearPicker(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.InputDateBase.ShowYearPicker" /> を構成します。
            ユーザーが年カレンダーのヘッダー要素をクリックすると、ドロップダウンカレンダーに年のリストを表示するかどうかを決定する値を取得または設定します。
            </summary>
            <remarks>
            このプロパティのデフォルト値は<b>true</b>です。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputDateBaseBuilder`2.RangeEnd(System.Nullable{System.DateTime})">
            <summary>
                <see cref="P:C1.Web.Mvc.InputDateBase.RangeEnd" /> を構成します。
            範囲選択で最後に選択された日付を設定します。
            </summary>
            <remarks>
            選択範囲は、ValueおよびRangeEndプロパティによって定義されます。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputDateBaseBuilder`2.RangeMin(System.Int32)">
            <summary>
                <see cref="P:C1.Web.Mvc.InputDateBase.RangeMin" /> を構成します。
            日付範囲を編集するときに許可される最小日数を設定します。
            </summary>
            <remarks>
            このプロパティのデフォルト値はゼロです。これは、範囲の長さの最小値がないことを意味します。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputDateBaseBuilder`2.RangeMax(System.Int32)">
            <summary>
                <see cref="P:C1.Web.Mvc.InputDateBase.RangeMax" /> を構成します。
            日付範囲を編集するときに許可される最大長を設定します。
            </summary>
            <remarks>
            このプロパティのデフォルト値はゼロです。これは、範囲の長さの最大長がないことを意味します。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputDateBaseBuilder`2.OnClientRangeEndChanged(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.InputDateBase.OnClientRangeEndChanged" /> クライアントイベントを構成します。
            RangeEnd プロパティの値が変化するときに発生します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputDateBaseBuilder`2.WeeksBefore(System.Int32)">
            <summary>
                <see cref="P:C1.Web.Mvc.InputDateBase.WeeksBefore" /> を構成します。
            カレンダーに現在の月より前に表示する週数を設定します。
            </summary>
            <remarks>
            このプロパティのデフォルト値は<b>zero</b>です。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputDateBaseBuilder`2.WeeksAfter(System.Int32)">
            <summary>
                <see cref="P:C1.Web.Mvc.InputDateBase.WeeksAfter" /> を構成します。
            カレンダーに現在の月の後に表示する週数を設定します。
            </summary>
            <remarks>
            このプロパティのデフォルト値は<b>zero</b>です。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputDateBaseBuilder`2.MonthCount(System.Int32)">
            <summary>
                <see cref="P:C1.Web.Mvc.InputDateBase.MonthCount" /> を構成します。
            ドロップダウンカレンダーに表示する月数を設定します。
            </summary>
            <remarks>
            このプロパティのデフォルト値は1です。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputDateBaseBuilder`2.AlwaysShowCalendar(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.InputDateBase.AlwaysShowCalendar" /> を構成します。
            事前定義された範囲が選択されている場合でも、カレンダーをドロップダウンに表示したままにするかどうかを決定する値を設定します。
            </summary>
            <remarks>
            このプロパティのデフォルト値はfalseです。これにより、事前定義された範囲が選択された場合、カレンダーが非表示になります。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputDateBaseBuilder`2.CloseOnSelection(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.InputDateBase.CloseOnSelection" /> を構成します。
            ユーザーが選択操作を行ったときにドロップダウンを自動的に閉じるかどうかを決定する値を取得または設定します。
            </summary>
            <remarks>
            このプロパティのデフォルト値はtrueです。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputDateBaseBuilder`2.ShowMonthPicker(C1.Web.Mvc.ShowMonthPicker)">
            <summary>
                <see cref="P:C1.Web.Mvc.InputDateBase.ShowMonthPicker" /> を構成します。
            ユーザーが月カレンダーのヘッダー要素をクリックすると、カレンダーに月のリストを表示するかどうかを決定する値を設定します。
            </summary>
            <remarks>
            このプロパティのデフォルト値はShowMonthPicker.Firstです。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.InputDateRangeBuilder">
            <summary>
                <see cref="T:C1.Web.Mvc.InputDateRange" />を構成するビルダーを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputDateRangeBuilder.#ctor(C1.Web.Mvc.InputDateRange)">
            <summary>
                <paramref name="component" />を構成する1つの<see cref="T:C1.Web.Mvc.Fluent.InputDateRangeBuilder" />インスタンスを作成します。
            </summary>
            <param name="component">構成される<see cref="T:C1.Web.Mvc.InputDateRange" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputDateRangeBuilder.MonthCount(System.Int32)">
            <summary>
                <see cref="P:C1.Web.Mvc.InputDateRange.MonthCount" /> を構成します。
            ドロップダウンカレンダーに表示する月数を設定します。
            </summary>
            <remarks>
            このプロパティのデフォルト値は2です。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiSelectBuilder`1.Delay(System.Int32)">
            <summary>
                <see cref="P:C1.Web.Mvc.MultiSelect`1.Delay" /> を構成します。
            キーストロークが発生してから検索が実行されてフィルタが更新されるまでの遅延（ミリ秒単位）を設定します。このプロパティは、ShowFilterInputプロパティがtrueに設定されている場合にのみ役立ちます。
            </summary>
            <remarks>
            このプロパティのデフォルト値は500ミリ秒です。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiSelectListBoxBuilder`1.SelectedIndex(System.Int32)">
            <summary>
                <see cref="P:C1.Web.Mvc.MultiSelectListBox`1.SelectedIndex" /> を構成します。
            現在選択されている項目のインデックスを設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiSelectListBoxBuilder`1.Delay(System.Int32)">
            <summary>
                <see cref="P:C1.Web.Mvc.MultiSelectListBox`1.Delay" /> を構成します。
            キーストロークが発生してから検索が実行されてフィルタが更新されるまでの遅延（ミリ秒単位）を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiSelectListBoxBuilder`1.CaseSensitiveSearch(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.MultiSelectListBox`1.CaseSensitiveSearch" />を構成します。検索するときに大文字と小文字を区別するかどうかを決定する値を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.InputDateRange(System.String)">
            <summary>
                <see cref="T:C1.Web.Mvc.InputDateRange" />コントロールを作成し、指定されたセレクターと一致するdom要素にアタッチします。
            </summary>
            <param name="selector">
            セレクタを指定します（オプション）。
            設定されていない場合、デフォルトのdom要素が生成されます。
            </param>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.InputDateRangeBuilder" />。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.CalculatedFieldBuilder">
            <summary>
                <see cref="T:C1.Web.Mvc.CalculatedField" />を構成するビルダーを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CalculatedFieldBuilder.#ctor(C1.Web.Mvc.CalculatedField)">
            <summary>
                <paramref name="obj" />を構成する1つの<see cref="T:C1.Web.Mvc.Fluent.CalculatedFieldBuilder" />インスタンスを作成します。
            </summary>
            <param name="obj">構成される<see cref="T:C1.Web.Mvc.CalculatedField" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CalculatedFieldBuilder.Name(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.CalculatedField.Name" /> を構成します。
            計算フィールドの名前を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CalculatedFieldBuilder.Expression(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.CalculatedField.Expression" /> を構成します。
            フィールド値の計算に使用される式を設定します。 式は、アイテムの元の値と計算された値を含むコンテキスト変数「$」を介して現在の項目を参照する場合があります。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartLegendBuilder.MaxSize(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.ChartLegend.MaxSize" /> を構成します。
            凡例の最大サイズ（左または右の位置の幅と上または下の位置の高さ）を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewService`1.CalculatedFields">
            <summary>
            計算フィールドを取得します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.AutoCompleteBase`1.BeginsWithSearch">
            <summary>
            指定された検索用語で始まる項目を検索するかどうかを決定する値を取得または設定します。このプロパティのデフォルト値はFalseです。これにより、コントロールは指定された検索語を含む項目を検索します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Calendar.RangeMin">
            <summary>
            日付範囲を編集するときに許可される最小日数を設定します。
            </summary>
            <remarks>
            このプロパティのデフォルト値は**0**です。これは、範囲の長さの最小値がないことを意味します。
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.Calendar.RangeMax">
            <summary>
            日付範囲を編集するときに許可される最大長を設定します。
            </summary>
            <remarks>
            このプロパティのデフォルト値は**0**です。これは、範囲の長さの最大長がないことを意味します。
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.Calendar.RangeEnd">
            <summary>
            範囲選択で最後に選択された日付を設定します。
            </summary>
            <remarks>
            日付範囲の選択を有効にするには、SelectionModeプロパティを**DateSelectionMode.Range**に設定します。
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.Calendar.OnClientRangeEndChanged">
            <summary>
            RangeEnd プロパティの値が変化するときに発生します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Calendar.MonthCount">
            <summary>
            カレンダー内に表示する月数を設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Calendar.WeeksBefore">
            <summary>
            カレンダーに現在の月より前に表示する週数を設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Calendar.WeeksAfter">
            <summary>
            カレンダーに現在の月の後に表示する週数を設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Calendar.ShowMonthPicker">
            <summary>
            ユーザーが月カレンダーのヘッダー要素をクリックすると、カレンダーに月のリストを表示するかどうかを決定する値を設定します。
            </summary>
            <remarks>
            このプロパティのデフォルト値はShowMonthPicker.Firstです。
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.ShowPlaceholders">
            <summary>
            グリッドでセルを編集するときに、列ヘッダをプレースホルダーとして使用するかどうかを決定する値を設定します。 このプロパティは、グリッドの組み込みエディターでのみ機能します。 このプロパティはIEでは役に立ちません。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexPieBase`1.ChartsPerLine">
            <summary>
            1行あたりのチャートの最大数を設定します。
            </summary>
            <remarks>
            このプロパティは、複数の円グラフがある場合に使用されます。デフォルトではゼロであり、コントロールはレイアウトを自動的に定義します。
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.FlexPieBase`1.Titles">
            <summary>
            円のタイトルを取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.InputDateBase.PredefinedRanges">
            <summary>
            事前定義された範囲を返す関数を取得または設定します。
            </summary>
            <remarks>
            このプロパティは、SelectionModeプロパティがDateSelectionMode.Rangeに設定されている場合にのみ役立ちます。 null値の事前定義された範囲は、カレンダーをクリックしてユーザーが定義するカスタム範囲を表します。
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.InputDateBase.RepeatButtons">
            <summary>
            カレンダーボタンがリピートボタン(押された状態で繰り返し実行するボタン)として動作するかどうかを決定する値を取得または設定します。
            </summary>
            <remarks>
            このプロパティのデフォルト値は<b>true</b>です。
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.InputDateBase.ShowYearPicker">
            <summary>
            ユーザーが年カレンダーのヘッダー要素をクリックすると、ドロップダウンカレンダーに年のリストを表示するかどうかを決定する値を取得または設定します。
            </summary>
            <remarks>
            このプロパティのデフォルト値は<b>true</b>です。
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.InputDateBase.RangeEnd">
            <summary>
            範囲選択で最後に選択された日付を設定します。
            </summary>
            <remarks>
            選択範囲は、ValueおよびRangeEndプロパティによって定義されます。
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.InputDateBase.RangeMin">
            <summary>
            日付範囲を編集するときに許可される最小日数を設定します。
            </summary>
            <remarks>
            このプロパティのデフォルト値はゼロです。これは、範囲の長さの最小値がないことを意味します。
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.InputDateBase.RangeMax">
            <summary>
            日付範囲を編集するときに許可される最大長を設定します。
            </summary>
            <remarks>
            このプロパティのデフォルト値はゼロです。これは、範囲の長さの最大長がないことを意味します。
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.InputDateBase.OnClientRangeEndChanged">
            <summary>
            RangeEnd プロパティの値が変化するときに発生します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.InputDateBase.WeeksBefore">
            <summary>
            カレンダーに現在の月より前に表示する週数を設定します。
            </summary>
            <remarks>
            このプロパティのデフォルト値は<b>zero</b>です。
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.InputDateBase.WeeksAfter">
            <summary>
            カレンダーに現在の月の後に表示する週数を設定します。
            </summary>
            <remarks>
            このプロパティのデフォルト値は<b>zero</b>です。
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.InputDateBase.MonthCount">
            <summary>
            ドロップダウンカレンダーに表示する月数を設定します。
            </summary>
            <remarks>
            このプロパティのデフォルト値は1です。
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.InputDateBase.AlwaysShowCalendar">
            <summary>
            事前定義された範囲が選択されている場合でも、カレンダーをドロップダウンに表示したままにするかどうかを決定する値を設定します。
            </summary>
            <remarks>
            このプロパティのデフォルト値はfalseです。これにより、事前定義された範囲が選択された場合、カレンダーが非表示になります。
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.InputDateBase.CloseOnSelection">
            <summary>
            ユーザーが選択操作を行ったときにドロップダウンを自動的に閉じるかどうかを決定する値を取得または設定します。
            </summary>
            <remarks>
            このプロパティのデフォルト値はtrueです。
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.InputDateBase.ShowMonthPicker">
            <summary>
            ユーザーが月カレンダーのヘッダー要素をクリックすると、カレンダーに月のリストを表示するかどうかを決定する値を設定します。
            </summary>
            <remarks>
            このプロパティのデフォルト値はShowMonthPicker.Firstです。
            </remarks>
        </member>
        <member name="T:C1.Web.Mvc.InputDateRange">
            <summary>
            コントロールは、InputDateコントロールを拡張し、SelectionModeプロパティをRange、MonthCountプロパティを2、ShowMonthPickerプロパティをOutSideに設定します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.InputDateRange.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            1つの<see cref="T:C1.Web.Mvc.InputDateRange" />インスタンスを作成します。
            </summary>
            <param name="helper">HTML ヘルパー</param>
            <param name="selector">セレクター</param>
        </member>
        <member name="P:C1.Web.Mvc.InputDateRange.MonthCount">
            <summary>
            ドロップダウンカレンダーに表示する月数を設定します。
            </summary>
            <remarks>
            このプロパティのデフォルト値は2です。
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.MultiSelect`1.Delay">
            <summary>
            キーストロークが発生してから検索が実行されてフィルタが更新されるまでの遅延（ミリ秒単位）を設定します。このプロパティは、ShowFilterInputプロパティがtrueに設定されている場合にのみ役立ちます。
            </summary>
            <remarks>
            このプロパティのデフォルト値は500ミリ秒です。
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.MultiSelectListBox`1.SelectedIndex">
            <summary>
            現在選択されている項目のインデックスを取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.MultiSelectListBox`1.Delay">
            <summary>
            キーストロークが発生してから検索が実行されてフィルタが更新されるまでの遅延（ミリ秒単位）を設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.MultiSelectListBox`1.CaseSensitiveSearch">
            <summary>
            検索するときに大文字と小文字を区別するかどうかを決定する値を取得または設定します。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.ShowMonthPicker">
            <summary>
            コントロールに月のナビゲーション要素を表示するかどうかを定義する定数を指定します。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.ShowMonthPicker.None">
            <summary>
            月のナビゲーション要素を表示しません。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.ShowMonthPicker.FirstMonth">
            <summary>
            最初の月に月ナビゲーション要素を表示します。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.ShowMonthPicker.LastMonth">
            <summary>
            最後の月にナビゲーション要素を表示します。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.ShowMonthPicker.FirstAndLastMonths">
            <summary>
            最初と最後の月に月ナビゲーション要素を表示します。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.ShowMonthPicker.AllMonths">
            <summary>
            すべての月に月ナビゲーション要素を表示します。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.ShowMonthPicker.Outside">
            <summary>
            カレンダーの端の横に月ナビゲーションボタンを表示します。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.CalculatedField">
            <summary>
            計算フィールド。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.CalculatedField.Name">
            <summary>
            計算フィールドの名前を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.CalculatedField.Expression">
            <summary>
             フィールド値の計算に使用される式を設定します。 式は、アイテムの元の値と計算された値を含むコンテキスト変数「$」を介して現在の項目を参照する場合があります。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartLegend.MaxSize">
            <summary>
            凡例の最大サイズ（左または右の位置の幅と上または下の位置の高さ）を設定します。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.KeyAction.CycleEditable">
            <summary>
            次の編集可能な列に移動し、次の行に折り返します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ColumnInfo.Format">
            <summary>
            列の書式を取得または設定します。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.DateSelectionMode.Range">
            <summary>
            ユーザーが日の範囲を選択できます。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ICollectionView`1.SearchText">
            <summary>
            検索するテキストを取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ICollectionView`1.CaseSensitive">
            <summary>
            大文字と小文字を区別する検索テキストを取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ICollectionView`1.ColumnInfo">
            <summary>
            グリッドの列情報を取得または設定します。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.FlexMap`1">
            <summary>
            地理データを視覚化するためのコントロール。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.FlexMap`1.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            1つの<see cref="T:C1.Web.Mvc.FlexMap`1" />インスタンスを作成します。
            </summary>
            <param name="helper">HTML ヘルパー</param>
            <param name="selector">セレクタ</param>
        </member>
        <member name="P:C1.Web.Mvc.FlexMap`1.Layers">
            <summary>
            マップレイヤのコレクションを設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexMap`1.Zoom">
            <summary>
            マップのズーム倍率を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexMap`1.Center">
            <summary>
            マップの中心を地理座標で取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridSearch.SearchAllColumns">
            <summary>
            非表示の列を検索に含めるかどうかを決定する値を取得または設定します。
            </summary>
            <remarks>
            このプロパティのデフォルト値は**false**です。
            </remarks>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ColorScaleBuilder">
            <summary>
                <see cref="T:C1.Web.Mvc.ColorScale" />を構成するビルダーを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColorScaleBuilder.Colors(System.String[])">
            <summary>
                <see cref="P:C1.Web.Mvc.ColorScale.Colors" />を構成します。
            変換に使用される色の配列（パレット）を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColorScaleBuilder.Colors(System.Collections.Generic.IEnumerable{System.Drawing.Color})">
            <summary>
                <see cref="P:C1.Web.Mvc.ColorScale.Colors" />を構成します。
            変換に使用される色の配列（パレット）を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColorScaleBuilder.#ctor(C1.Web.Mvc.ColorScale)">
            <summary>
                <paramref name="obj" />を構成する1つの<see cref="T:C1.Web.Mvc.Fluent.ColorScaleBuilder" />インスタンスを作成します。
            </summary>
            <param name="obj">構成される<see cref="T:C1.Web.Mvc.ColorScale" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColorScaleBuilder.Scale(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.ColorScale.Scale" />を構成します。
            スケーリング関数を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColorScaleBuilder.Binding(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.ColorScale.Binding" />を構成します。
            連結プロパティまたは関数を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColorScaleBuilder.ColorUnknown(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.ColorScale.ColorUnknown" />を構成します。
            未定義の値（NaNまたは未定義）の色を取得または設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColorScaleBuilder.Format(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.ColorScale.Format" />を構成します。
            凡例アイテムの書式文字列を取得または設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.FlexMapBuilder`1">
            <summary>
                <see cref="T:C1.Web.Mvc.FlexMap`1" />を構成するビルダーを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexMapBuilder`1.Layers(System.Action{C1.Web.Mvc.Fluent.MapLayerListFactory{`0,C1.Web.Mvc.FlexMap{`0},C1.Web.Mvc.MapLayerBase{`0}}})">
            <summary>
            FlexMapのレイヤを設定します。
            </summary>
            <param name="build">ビルド関数</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexMapBuilder`1.#ctor(C1.Web.Mvc.FlexMap{`0})">
            <summary>
                <paramref name="component" />を構成する1つの<see cref="T:C1.Web.Mvc.Fluent.FlexMapBuilder`1" />インスタンスを作成します。
            </summary>
            <param name="component">構成される<see cref="T:C1.Web.Mvc.FlexMap`1" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexMapBuilder`1.Zoom(System.Single)">
            <summary>
                <see cref="P:C1.Web.Mvc.FlexMap`1.Zoom" />を構成します。
            マップのズーム倍率を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexMapBuilder`1.Center(C1.Web.Mvc.DataPoint)">
            <summary>
                <see cref="P:C1.Web.Mvc.FlexMap`1.Center" />を構成します。
            マップの中心を地理座標で設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.MapLayerListBaseFactory`3">
            <summary>
            さまざまなレイヤを作成するためのファクトリを定義します。
            </summary>
            <typeparam name="T">モデルの種類</typeparam>
            <typeparam name="TOwner">FlexMapから派生したChartMap</typeparam>
            <typeparam name="TMapLayer">MapLayerBaseから派生したMapLayer</typeparam>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MapLayerListBaseFactory`3.#ctor(System.Collections.Generic.IList{C1.Web.Mvc.MapLayerBase{`0}},`1)">
            <summary>
            MapLayerListBaseFactoryクラスの新しいインスタンスを初期化します。
            </summary>
            <param name="list"></param>
            <param name="owner"></param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MapLayerListBaseFactory`3.Add``2(System.Func{`1,``0},System.Func{``0,``1})">
            <summary>
            レイヤを追加します。
            </summary>
            <typeparam name="TControl">レイヤの種類を指定します。</typeparam>
            <typeparam name="TBuilder">レイヤビルダの種類。</typeparam>
            <param name="createControl">指定された所有者のレイヤを作成する関数。</param>
            <param name="createBuilder">レイヤに対するビルダ。</param>
            <returns>レイヤビルダ。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.MapLayerListFactory`3">
            <summary>
            さまざまなレイヤを作成するためのファクトリを定義します。
            </summary>
            <typeparam name="T">モデルの種類</typeparam>
            <typeparam name="TOwner">FlexMapから派生したChartMap</typeparam>
            <typeparam name="TMapLayer">MapLayerBaseから派生したMapLayer</typeparam>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MapLayerListFactory`3.#ctor(System.Collections.Generic.IList{C1.Web.Mvc.MapLayerBase{`0}},`1)">
            <summary>
            MapLayerListFactoryクラスの新しいインスタンスを初期化します。
            </summary>
            <param name="list"></param>
            <param name="owner"></param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MapLayerListFactory`3.AddGeoGridLayer">
            <summary>
            レイヤのリストにGeoGridLayerを追加します。
            </summary>
            <returns>レイヤビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MapLayerListFactory`3.AddGeoMapLayer">
            <summary>
            レイヤのリストにGeoMapLayerを追加します。
            </summary>
            <returns>レイヤビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MapLayerListFactory`3.AddScatterMapLayer">
            <summary>
            レイヤのリストにScatterMapLayerを追加します。
            </summary>
            <returns>レイヤビルダ。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.MapLayerBaseBuilder`3">
            <summary>
                <see cref="T:C1.Web.Mvc.MapLayerBase`1" />を構成するビルダーを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MapLayerBaseBuilder`3.#ctor(`1,C1.Web.Mvc.FlexMap{`0})">
            <summary>
            1つのMapLayerBaseBuilderを作成します。
            </summary>
            <param name="obj">ChartSeries オブジェクト。</param>
            <param name="Owner">この系列を所有するチャート。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MapLayerBaseBuilder`3.ColorScale(System.Action{C1.Web.Mvc.Fluent.ColorScaleBuilder})">
            <summary>
            ColorScaleプロパティを設定します。
            </summary>
            <param name="build">ビルド関数</param>
            <returns>現在のビルダ</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MapLayerBaseBuilder`3.#ctor(`1)">
            <summary>
                <paramref name="obj" />を構成する1つの<see cref="T:C1.Web.Mvc.Fluent.MapLayerBaseBuilder`3" />インスタンスを作成します。
            </summary>
            <param name="obj">構成される<see cref="T:C1.Web.Mvc.MapLayerBase`1" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MapLayerBaseBuilder`3.Style(System.Action{C1.Web.Mvc.Fluent.SVGStyleBuilder})">
            <summary>
                <see cref="P:C1.Web.Mvc.MapLayerBase`1.Style" />を構成します。
            レイヤのスタイルを設定します。
            </summary>
            <param name="build">ビルダ関数。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MapLayerBaseBuilder`3.ItemsSource(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.MapLayerBase`1.ItemsSource" />を構成します。
            レイヤのデータソースを設定します。
            </summary>
            <remarks>
            データソースはGeoJSONオブジェクトである必要があります。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MapLayerBaseBuilder`3.Url(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.MapLayerBase`1.Url" />を構成します。
            データソースのURLを取得または設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MapLayerBaseBuilder`3.OnClientItemsSourceChanged(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.MapLayerBase`1.OnClientItemsSourceChanged" />クライアントイベントを設定します。
             このイベントは、レイヤが新しいアイテムソースに連結された後に発生します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CalendarBuilder.OnClientRangeChanged(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.Calendar.OnClientRangeChanged" />クライアントイベントを設定します。
             このイベントは、rangeEndプロパティの値がnull以外の値（データ範囲が選択されていることを示す）に変更されたときに発生します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CalendarBuilder.HandleWheel(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.Calendar.HandleWheel" />を構成します。
            ユーザーがマウスホイールを使用して現在の表示月を変更できるかどうかを決定する値を設定します。
            </summary>
            <remarks>
            このプロパティのデフォルト値は**true**です。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ComboBoxBaseBuilder`3.HandleWheel(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.ComboBoxBase`1.HandleWheel" />を構成します。
            ユーザーがマウスホイールを使用して現在選択されている項目を変更できるかどうかを決定する値を設定します。
            </summary>
            <remarks>
            このプロパティのデフォルト値は**true**です。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.AnchorCursor(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.FlexGridBase`1.AnchorCursor" />を構成します。
           マウスまたはキーボードで選択範囲を拡張することで、現在の選択範囲の開始（カーソル）または終了を変更するかどうかを決定する値を設定します。
            </summary>
            <remarks>
            このプロパティのデフォルト値はfalseです。これにより、グリッドはカーソルを移動し、選択範囲を固定したままにします。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridGroupPanelBuilder`1.ShowDragGlyphs(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.FlexGridGroupPanel`1.ShowDragGlyphs" />を構成します。
            コントロールがグループマーカーの要素にドラッググリフを 追加するかどうかを決定する値を設定します。
            </summary>
            <remarks>
            このプロパティのデフォルト値はtrueです。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridSearchBuilder.SearchAllColumns(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.FlexGridSearch.SearchAllColumns" />構成します。
            非表示の列を検索に含めるかどうかを決定する値を設定します。
            </summary>
            <remarks>
            このプロパティのデフォルト値は**false**です。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.GaugeBuilder`2.HandleWheel(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.Gauge.HandleWheel" />構成します。
            ユーザーがマウスホイールを使用してゲージ値を編集できるかどうかを決定する値を設定します。
            </summary>
            <remarks>
            このプロパティのデフォルト値は<b>true</b>です。</remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputDateBaseBuilder`2.OnClientRangeChanged(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.InputDateBase.OnClientRangeChanged" />クライアントイベントを設定します。
             このイベントは、rangeEndプロパティの値がnull以外の値（データ範囲が選択されていることを示す）に変更されたときに発生します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputDateBaseBuilder`2.HandleWheel(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.InputDateBase.HandleWheel" />構成します。
            ユーザーがマウスホイールを使用して現在の値を編集できるかどうかを決定する値を設定します。
            </summary>
            <remarks>
            このプロパティのデフォルト値は**true**です。**false**に設定すると、コントロールのドロップダウンのカスタムホイール処理も無効になります。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputDateRangeBuilder.SelectionMode(C1.Web.Mvc.DateSelectionMode)">
            <summary>
                <see cref="P:C1.Web.Mvc.InputDateRange.SelectionMode" />構成します。
           ユーザーが日や月を選択できるか、またはどの値も選択できないかを示す値を設定します。
            </summary>
            <remarks>
            このプロパティの値は「Range」である必要があります。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputMaskBuilder.OverwriteMode(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.InputMask.OverwriteMode" />構成します。
            input要素が上書きモードで入力を処理するかどうかを決定する値を設定します。 **上書きモード**では、入力したすべての文字がカーソル位置に表示されます。 文字がすでにその位置にいる場合、それは置き換えられます。
            </summary>
            <remarks>
            このプロパティのデフォルト値は**false**です。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputNumberBuilder.HandleWheel(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.InputNumber.HandleWheel" />構成します。
            ユーザーがマウスホイールを使用して値を編集できるかどうかを決定する値を設定します。
            </summary>
            <remarks>
            このプロパティのデフォルト値は**true**です。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeViewBuilder.CollapseOnClick(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.TreeView.CollapseOnClick" />構成します。
            ユーザーがノードヘッダーをクリックしたときに展開されたノードを折りたたむかどうかを決定する値を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeViewBuilder.CollapseWhenDisabled(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.TreeView.CollapseWhenDisabled" />構成します。
            ノードが無効になっているときにノードを折りたたむかどうかを決定する値を設定します。
            </summary>
            <remarks>
            このプロパティのデフォルト値は<b>true</b>です。</remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.FlexMap``1(System.String)">
            <summary>
                <see cref="T:C1.Web.Mvc.FlexMap`1" />コントロールを作成し、指定されたセレクターと一致するdom要素にアタッチします。
            </summary>
            <typeparam name="T">データ項目タイプ。</typeparam>
            <param name="selector">
            セレクタを指定します（オプション）。
            設定されていない場合、デフォルトのdom要素が生成されます。
            </param>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.FlexMapBuilder`1" />。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.FlexMap(System.String)">
            <summary>
                <see cref="T:C1.Web.Mvc.FlexMap`1" />コントロールを作成し、指定されたセレクターと一致するdom要素にアタッチします。
            </summary>
            <param name="selector">
            セレクタを指定します（オプション）。
            設定されていない場合、デフォルトのdom要素が生成されます。
            </param>
            <returns>
                <see cref="T:C1.Web.Mvc.Fluent.FlexMapBuilder`1" />。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnBuilder.AllowDragging(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.Column.AllowDragging" />構成します。
            ユーザーがこの行または列をマウスで新しい位置に移動できるかどうかを設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ExtraMapLayerBuilder`3">
            <summary>
                <see cref="T:C1.Web.Mvc.ExtraMapLayer`1" />を構成するビルダーを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ExtraMapLayerBuilder`3.#ctor(`1)">
            <summary>
                <paramref name="obj" />を構成する1つの<see cref="T:C1.Web.Mvc.Fluent.ExtraMapLayerBuilder`3" />インスタンスを作成します。
            </summary>
            <param name="obj">構成される<see cref="T:C1.Web.Mvc.ExtraMapLayer`1" />オブジェクト。</param>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.GeoGridLayerBuilder`1">
            <summary>
                <see cref="T:C1.Web.Mvc.GeoGridLayer`1" />を構成するビルダーを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.GeoGridLayerBuilder`1.#ctor(C1.Web.Mvc.GeoGridLayer{`0})">
            <summary>
                <paramref name="obj" />を構成する1つの<see cref="T:C1.Web.Mvc.Fluent.GeoGridLayerBuilder`1" />インスタンスを作成します。
            </summary>
            <param name="obj">構成される<see cref="T:C1.Web.Mvc.GeoGridLayer`1" />オブジェクト。</param>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.GeoMapLayerBuilder`1">
            <summary>
                <see cref="T:C1.Web.Mvc.GeoMapLayer`1" />を構成するビルダーを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.GeoMapLayerBuilder`1.#ctor(C1.Web.Mvc.GeoMapLayer{`0})">
            <summary>
                <paramref name="obj" />を構成する1つの<see cref="T:C1.Web.Mvc.Fluent.GeoMapLayerBuilder`1" />インスタンスを作成します。
            </summary>
            <param name="obj">構成される<see cref="T:C1.Web.Mvc.GeoMapLayer`1" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.GeoMapLayerBuilder`1.ItemFormatter(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.GeoMapLayer`1.ItemFormatter" />を構成します。
             GeoJSON機能の項目書式設定を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.GeoMapLayerBuilder`1.SymbolSize(System.Int32)">
            <summary>
                <see cref="P:C1.Web.Mvc.GeoMapLayer`1.SymbolSize" />を構成します。
            GeoJSONポイント/複数のポイントをレンダリングするためのシンボルサイズを設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ScatterMapLayerBuilder`1">
            <summary>
                <see cref="T:C1.Web.Mvc.ScatterMapLayer`1" />を構成するビルダーを定義します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ScatterMapLayerBuilder`1.#ctor(C1.Web.Mvc.ScatterMapLayer{`0})">
            <summary>
                <paramref name="obj" />を構成する1つの<see cref="T:C1.Web.Mvc.Fluent.ScatterMapLayerBuilder`1" />インスタンスを作成します。
            </summary>
            <param name="obj">構成される<see cref="T:C1.Web.Mvc.ScatterMapLayer`1" />オブジェクト。</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ScatterMapLayerBuilder`1.SymbolSize(System.Int32)">
            <summary>
                <see cref="P:C1.Web.Mvc.ScatterMapLayer`1.SymbolSize" />を構成します。
            GeoJSONポイント/複数のポイントをレンダリングするためのシンボルサイズを設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ScatterMapLayerBuilder`1.SymbolMinSize(System.Int32)">
            <summary>
                <see cref="P:C1.Web.Mvc.ScatterMapLayer`1.SymbolMinSize" />を構成します。
            バブルプロットの最小シンボルサイズを設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ScatterMapLayerBuilder`1.SymbolMaxSize(System.Int32)">
            <summary>
                <see cref="P:C1.Web.Mvc.ScatterMapLayer`1.SymbolMaxSize" />を構成します。
            バブルプロットの最大シンボルサイズを設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ScatterMapLayerBuilder`1.Binding(System.String)">
            <summary>
                <see cref="P:C1.Web.Mvc.ScatterMapLayer`1.Binding" />を構成します。
            レイヤの連結を設定します。
            </summary>
            <remarks>
            連結には、2つのコンマ区切りのプロパティ名（経度と緯度） 'lon、lat'、または地理座標のペアを含む1つのプロパティ名を含めることができます。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="T:C1.Web.Mvc.ColorScale">
            <summary>
            マップのレイヤのカラースケールを表します。
            </summary>
            <summary>
            カラースケールは、値から色への変換を実行します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.ColorScale.#ctor(System.Web.Mvc.HtmlHelper)">
            <summary>
            1つの<see cref="T:C1.Web.Mvc.ColorScale" />インスタンスを作成します。
            </summary>
            <param name="helper">HtmlHelperインスタンス。</param>
        </member>
        <member name="P:C1.Web.Mvc.ColorScale.Scale">
            <summary>
            スタイル関数を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ColorScale.Binding">
            <summary>
            連結プロパティまたは関数を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ColorScale.ColorUnknown">
            <summary>
            未定義の値（NaNまたは未定義）の色を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ColorScale.Colors">
            <summary>
            変換に使用される色の配列（パレット）を設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ColorScale.Format">
            <summary>
            凡例アイテムの書式文字列を取得または設定します。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.MapLayerBase`1">
            <summary>
            マップ内のマップレイヤを表します。
            </summary>
            <summary>
            マップレイヤの基本クラス。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.MapLayerBase`1.#ctor(System.Web.Mvc.HtmlHelper)">
            <summary>
            1つの<see cref="T:C1.Web.Mvc.MapLayerBase`1" />インスタンスを作成します。
            </summary>
            <param name="helper">HtmlHelperインスタンス。</param>
        </member>
        <member name="M:C1.Web.Mvc.MapLayerBase`1.#ctor(C1.Web.Mvc.FlexMap{`0})">
            <summary>
            1つの<see cref="T:C1.Web.Mvc.MapLayerBase`1" />インスタンスを作成します。
            </summary>
            <param name="owner">このマップレイヤを所有する所有者。</param>
        </member>
        <member name="P:C1.Web.Mvc.MapLayerBase`1.Style">
            <summary>
            レイヤのスタイルを取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.MapLayerBase`1.ItemsSource">
            <summary>
            レイヤのデータソースを取得または設定します。
            </summary>
            <remarks>
            データソースはGeoJSONオブジェクトである必要があります。
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.MapLayerBase`1.Url">
            <summary>
            データソースのURLを取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.MapLayerBase`1.ColorScale">
            <summary>
            レイヤのアイテムの塗りつぶしに使用されるカラースケールを取得または設定します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.MapLayerBase`1.ShouldSerializeColorScale">
            <summary>
            ColorScaleプロパティをシリアル化するかどうかを指定します。
            </summary>
            <returns>
            trueに設定すると、シリアル化されます。
             それ以外の場合は、シリアル化されません。
            </returns>
        </member>
        <member name="P:C1.Web.Mvc.MapLayerBase`1.OnClientItemsSourceChanged">
            <summary>
            レイヤが新しい項目ソースにバインドされた後に発生します。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.ExtraMapLayer`1">
            <summary>
            マップ内のレイヤを表します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.ExtraMapLayer`1.#ctor(C1.Web.Mvc.FlexMap{`0})">
            <summary>
            1つの<see cref="T:C1.Web.Mvc.ExtraMapLayer`1" />インスタンスを作成します。
            </summary>
            <param name="owner">このレイヤを所有する所有者。</param>
        </member>
        <member name="P:C1.Web.Mvc.ExtraMapLayer`1.ExtraMapLayerTypeName">
            <summary>
            このレイヤーがExtraLayerであることを示すクライアント側ラッパーのフラグ。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.GeoGridLayer`1">
            <summary>
            地理データのグリッドを使用してマップレイヤを表します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.GeoGridLayer`1.#ctor(C1.Web.Mvc.FlexMap{`0})">
            <summary>
            1つの<see cref="T:C1.Web.Mvc.GeoGridLayer`1" />インスタンスを作成します。
            </summary>
            <param name="owner">このマップレイヤを所有する所有者。</param>
        </member>
        <member name="P:C1.Web.Mvc.GeoGridLayer`1.ExtraMapLayerTypeName">
            <summary>
            マップレイヤの名前を取得します。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.GeoMapLayer`1">
            <summary>
            地理データを含むマップレイヤを表します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.GeoMapLayer`1.#ctor(C1.Web.Mvc.FlexMap{`0})">
            <summary>
            1つの<see cref="T:C1.Web.Mvc.GeoMapLayer`1" />インスタンスを作成します。
            </summary>
            <param name="owner">このマップレイヤを所有する所有者。</param>
        </member>
        <member name="P:C1.Web.Mvc.GeoMapLayer`1.ExtraMapLayerTypeName">
            <summary>
            マップレイヤの名前を取得します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.GeoMapLayer`1.ItemFormatter">
            <summary>
            GeoJSON機能の項目書式設定を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.GeoMapLayer`1.SymbolSize">
            <summary>
            GeoJSONポイント/複数のポイントをレンダリングするためのシンボルサイズを取得または設定します。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.ScatterMapLayer`1">
            <summary>
            散布図のレイヤを表します。
            </summary>
            <remarks>
            ScatterMapLayerのデータは、地理座標内のポイントのコレクションです。
            </remarks>
        </member>
        <member name="M:C1.Web.Mvc.ScatterMapLayer`1.#ctor(C1.Web.Mvc.FlexMap{`0})">
            <summary>
            1つの<see cref="T:C1.Web.Mvc.ScatterMapLayer`1" />インスタンスを作成します。
            </summary>
            <param name="owner">このマップレイヤを所有する所有者。</param>
        </member>
        <member name="P:C1.Web.Mvc.ScatterMapLayer`1.ExtraMapLayerTypeName">
            <summary>
            マップレイヤの名前を取得します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ScatterMapLayer`1.SymbolSize">
            <summary>
            GeoJSONポイント/複数のポイントをレンダリングするためのシンボルサイズを取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ScatterMapLayer`1.SymbolMinSize">
            <summary>
            バブルプロットの最小シンボルサイズを取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ScatterMapLayer`1.SymbolMaxSize">
            <summary>
            バブルプロットの最大シンボルサイズを取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ScatterMapLayer`1.Binding">
            <summary>
            レイヤの連結を取得または設定します。
            </summary>
            <remarks>
            連結には、2つのコンマ区切りのプロパティ名（経度と緯度） 'lon、lat'、または地理座標のペアを含む1つのプロパティ名を含めることができます。
            </remarks>
        </member>
        <member name="F:C1.Web.Mvc.Chart.Palettes.Qualitative">
            <summary>
            ColorBrewer （https://colorbrewer2.org） の定性的パレット。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.Palettes.Diverging">
            <summary>
            ColorBrewer （https://colorbrewer2.org） からの発散パレット。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.Palettes.SequentialSingle">
            <summary>
            ColorBrewer （https://colorbrewer2.org） からのシーケンシャル単一色合いパレット。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.Palettes.SequentialMulti">
            <summary>
            ColorBrewer （https://colorbrewer2.org） からのシーケンシャル複数の色合いがある色パレット。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Chart.Palettes.IsExtended(System.Collections.Generic.IEnumerable{System.Drawing.Color})">
            <summary>
            パレットがColorBrewer （https://colorbrewer2.org） から拡張されているかどうかを確認します。
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:C1.Web.Mvc.Chart.QualitativePalettes">
            <summary>
            ColorBrewer （https://colorbrewer2.org） の定性的パレット。
            定性的（またはカテゴリ的）パレットは通常、
             特定の順序を持たない独立したデータカテゴリをプロットするために使用されます。
             たとえば、配送方法や製品の種類を表す系列。
             これらのパレットの色は、特徴的であり、データ系列間の違いを明確に示すように選択されています。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.QualitativePalettes.Accent">
            <summary>
            定性的Accentパレット。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.QualitativePalettes.Dark2">
            <summary>
            定性的Dark2パレット。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.QualitativePalettes.Paired">
            <summary>
            定性的Pairedパレット。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.QualitativePalettes.Pastel1">
            <summary>
            定性的Pastel1パレット。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.QualitativePalettes.Pastel2">
            <summary>
            定性的Pastel2パレット。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.QualitativePalettes.Set1">
            <summary>
            定性的Set1パレット。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.QualitativePalettes.Set2">
            <summary>
            定性的Set2パレット。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.QualitativePalettes.Set3">
            <summary>
            定性的Set3パレット。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Chart.QualitativePalettes.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Chart.QualitativePalettes.ListQualitativePalettes">
            <summary>
            サポートされている定性的パレットを一覧表示します。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Chart.DivergingPalettes">
            <summary>
            ColorBrewer （https://colorbrewer2.org） からの発散パレット。

発散パレットは、重要な点からの距離を示すために使用されます。 
            これらの配色は、データに中間点が存在する場合にうまく機能します。
            たとえば、温度に関するデータはゼロより下の青の色合いであり、赤はゼロより上の値を表し、ゼロ付近の温度は中間色になります。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.DivergingPalettes.BrBG">
            <summary>
            発散BrBGパレット。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.DivergingPalettes.PiYG">
            <summary>
            発散PiYGパレット。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.DivergingPalettes.PRGn">
            <summary>
            発散PRGnパレット。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.DivergingPalettes.PuOr">
            <summary>
            発散PuOrパレット。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.DivergingPalettes.RdBu">
            <summary>
            発散RdBuパレット。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.DivergingPalettes.RdGy">
            <summary>
            発散RdGyパレット。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.DivergingPalettes.RdYlBu">
            <summary>
            発散RdYlBuパレット。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.DivergingPalettes.RdYlGn">
            <summary>
            発散RdYlGnパレット。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.DivergingPalettes.Spectral">
            <summary>
            発散Spectralパレット。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Chart.DivergingPalettes.#ctor">
            <summary>
            .コンストラクタ。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Chart.DivergingPalettes.ListDivergingPalettes">
            <summary></summary>
        </member>
        <member name="T:C1.Web.Mvc.Chart.SequentialSinglePalettes">
            <summary>
            ColorBrewer （https://colorbrewer2.org） からのシーケンシャル単一色合いパレット。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.SequentialSinglePalettes.Blues">
            <summary>
            SequentialSingle Bluesパレット。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.SequentialSinglePalettes.Greens">
            <summary>
            SequentialSingle Greensパレット。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.SequentialSinglePalettes.Greys">
            <summary>
            SequentialSingle Greysパレット。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.SequentialSinglePalettes.Oranges">
            <summary>
            SequentialSingle Orangesパレット。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.SequentialSinglePalettes.Purples">
            <summary>
            SequentialSingle Purplesパレット。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.SequentialSinglePalettes.Reds">
            <summary>
            SequentialSingle Redsパレット。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Chart.SequentialSinglePalettes.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Chart.SequentialSinglePalettes.ListSequentialSinglePalettes">
            <summary>
            サポートされているSequentialSingleパレットを一覧表示します。
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Chart.SequentialMultiPalettes">
            <summary>
            ColorBrewer （https://colorbrewer2.org） からのシーケンシャル複数の色合いがある色パレット。

シーケンシャルパレットは、順序付けられた定量的な性質を持つデータに使用されます。 
            たとえば、特定の地域の降水量や道路事故の数。
             明度の変化に加えて、これらの配色は知覚を改善するためにいくつかの色合いも使用します。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.SequentialMultiPalettes.BuGn">
            <summary>
            SequentialMulti BuGnパレット。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.SequentialMultiPalettes.BuPu">
            <summary>
            SequentialMulti BuPuパレット。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.SequentialMultiPalettes.GnBu">
            <summary>
            SequentialMulti GnBuパレット。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.SequentialMultiPalettes.OrRd">
            <summary>
            SequentialMulti OrRdパレット。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.SequentialMultiPalettes.PuBu">
            <summary>
            SequentialMulti PuBuパレット。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.SequentialMultiPalettes.PuBuGn">
            <summary>
            SequentialMulti PuBuGnパレット。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.SequentialMultiPalettes.PuRd">
            <summary>
            SequentialMulti PuRdパレット。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.SequentialMultiPalettes.RdPu">
            <summary>
            SequentialMulti RdPuパレット。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.SequentialMultiPalettes.YlGn">
            <summary>
            SequentialMulti YlGnパレット。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.SequentialMultiPalettes.YlGnBu">
            <summary>
            SequentialMulti YlGnBuパレット。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.SequentialMultiPalettes.YlOrBr">
            <summary>
            SequentialMulti YlOrBrパレット。
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.SequentialMultiPalettes.YlOrRd">
            <summary>
            SequentialMulti YlOrRdパレット。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Chart.SequentialMultiPalettes.#ctor">
            <summary>
            .コンストラクタ。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Chart.SequentialMultiPalettes.ListSequentialMultiPalettes">
            <summary>
            サポートされているSequentialMultiパレットを一覧表示します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Calendar.OnClientRangeChanged">
            <summary>
            このイベントは、rangeEndプロパティの値がnull以外の値（データ範囲が選択されていることを示す）に変更されたときに発生します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Calendar.HandleWheel">
            <summary>
            ユーザーがマウスホイールを使用して現在の表示月を変更できるかどうかを決定する値を取得または設定します。
            </summary>
            <remarks>
            このプロパティのデフォルト値は**true**です。
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.ComboBoxBase`1.HandleWheel">
            <summary>
            ユーザーがマウスホイールを使用して現在選択されている項目を変更できるかどうかを決定する値を取得または設定します。
            </summary>
            <remarks>
            このプロパティのデフォルト値は**true**です。
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.AnchorCursor">
            <summary>
            マウスまたはキーボードで選択範囲を拡張することで、現在の選択範囲の開始（カーソル）または終了を変更するかどうかを決定する値を取得または設定します。
            </summary>
            <remarks>
            このプロパティのデフォルト値はfalseです。これにより、グリッドはカーソルを移動し、選択範囲を固定したままにします。
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridGroupPanel`1.ShowDragGlyphs">
            <summary>
            コントロールがグループマーカーの要素にドラッググリフを 追加するかどうかを決定する値を取得または設定します。
            </summary>
            <remarks>
            このプロパティのデフォルト値はtrueです。
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.Gauge.HandleWheel">
            <summary>
            ユーザーがマウスホイールを使用してゲージ値を編集できるかどうかを決定する値を取得または設定します。
            </summary>
            <remarks>
            このプロパティのデフォルト値は<b>true</b>です。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.InputDateBase.OnClientRangeChanged">
            <summary>
            このイベントは、rangeEndプロパティの値がnull以外の値（データ範囲が選択されていることを示す）に変更されたときに発生します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.InputDateBase.HandleWheel">
            <summary>
            ユーザーがマウスホイールを使用して現在の値を編集できるかどうかを決定する値を取得または設定します。
            </summary>
            <remarks>
            このプロパティのデフォルト値は**true**です。**false**に設定すると、コントロールのドロップダウンのカスタムホイール処理も無効になります。
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.InputDateRange.SelectionMode">
            <summary>
            ユーザーが日や月を選択できるか、またはどの値も選択できないかを示す値を取得または設定します。
            </summary>
            <remarks>
            このプロパティの値は「Range」である必要があります。
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.InputMask.OverwriteMode">
            <summary>
            input要素が上書きモードで入力を処理するかどうかを決定する値を取得または設定します。 **上書きモード**では、入力したすべての文字がカーソル位置に表示されます。 文字がすでにその位置にいる場合、それは置き換えられます。
            </summary>
            <remarks>
            このプロパティのデフォルト値は**false**です。
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.InputNumber.HandleWheel">
            <summary>
            ユーザーがマウスホイールを使用して値を編集できるかどうかを決定する値を取得または設定します。
            </summary>
            <remarks>
            このプロパティのデフォルト値は**true**です。
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.TreeView.CollapseOnClick">
            <summary>
            ユーザーがノードヘッダーをクリックしたときに展開されたノードを折りたたむかどうかを決定する値を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeView.CollapseWhenDisabled">
            <summary>
            ノードが無効になっているときにノードを折りたたむかどうかを決定する値を取得または設定します。
            </summary>
            <remarks>
            このプロパティのデフォルト値は<b>true</b>です。</remarks>
        </member>
        <member name="P:C1.Web.Mvc.Column.AllowDragging">
            <summary>
            ユーザーがこの行または列をマウスで新しい位置に移動できるかどうかを取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ColumnInfo.Visible">
            <summary>
            列の表示/非表示を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ICollectionView`1.SearchAllColumns">
            <summary>
            「すべての列を検索」を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ICollectionView`1.RegexPattern">
            <summary>
            データを検索するための正規表現パターンを取得または設定します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ComboBoxBaseBuilder`3.VirtualizationThreshold(System.Int32)">
            <summary>
                <see cref="P:C1.Web.Mvc.ComboBoxBase`1.VirtualizationThreshold" /> を構成します。
            ComboBoxで仮想化を有効にするために必要な行または列の最小数を設定します
            </summary>
            <remarks>
            このプロパティのデフォルト値は非常に大きい数値です。これは、仮想化が無効になっていることを意味します。 仮想化を有効にするには、その値を0または正の数に設定します。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ListBoxBuilder`1.VirtualizationThreshold(System.Int32)">
            <summary>
                <see cref="P:C1.Web.Mvc.ListBox`1.VirtualizationThreshold" /> を構成します。
            ListBoxで仮想化を有効にするために必要な行または列の最小数を設定します。
            </summary>
            <remarks>
            このプロパティのデフォルト値は非常に大きい数値です。これは、仮想化が無効になっていることを意味します。 仮想化を有効にするには、その値を0または正の数に設定します。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiSelectListBoxBuilder`1.VirtualizationThreshold(System.Int32)">
            <summary>
                <see cref="P:C1.Web.Mvc.MultiSelectListBox`1.VirtualizationThreshold" /> を構成します。
            MultiSelectListBoxで仮想化を有効にするために必要な行または列の最小数を設定します。
            </summary>
            <remarks>
            このプロパティのデフォルト値は非常に大きい数値です。これは、仮想化が無効になっていることを意味します。 仮想化を有効にするには、その値を0または正の数に設定します。
            </remarks>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="P:C1.Web.Mvc.ComboBoxBase`1.VirtualizationThreshold">
            <summary>
            ComboBoxで仮想化を有効にするために必要な行または列の最小数を設定します。
            </summary>
            <remarks>
            このプロパティのデフォルト値は非常に大きい数値です。これは、仮想化が無効になっていることを意味します。 仮想化を有効にするには、その値を0または正の数に設定します。
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.ListBox`1.VirtualizationThreshold">
            <summary>
            ListBoxで仮想化を有効にするために必要な行または列の最小数を設定します。
            </summary>
            <remarks>
            このプロパティのデフォルト値は非常に大きい数値です。これは、仮想化が無効になっていることを意味します。 仮想化を有効にするには、その値を0または正の数に設定します。
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.MultiSelectListBox`1.VirtualizationThreshold">
            <summary>
            MultiSelectListBoxで仮想化を有効にするために必要な行または列の最小数を設定します。
            </summary>
            <remarks>
            このプロパティのデフォルト値は非常に大きい数値です。これは、仮想化が無効になっていることを意味します。 仮想化を有効にするには、その値を0または正の数に設定します。
            </remarks>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputColorBuilder.ShowColorString(System.Boolean)">
            <summary>
                <see cref="P:C1.Web.Mvc.InputColor.ShowColorString" />を構成します。
            ColorPicker に現在の色の文字列表現を表示するかどうかを示す値を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilder`2.TabOrder(System.Int32)">
            <summary>
                <see cref="P:C1.Web.Mvc.Control.TabOrder" />.
            コントロールに関連付けられたtabindex属性の値を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="P:C1.Web.Mvc.Control.TabOrder">
            <summary>
            コントロールに関連付けられたtabindex属性の値を取得または設定します。
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.InputColor.ShowColorString">
            <summary>
            ColorPickerが現在の色の文字列表現を表示するかどうかを示す値を取得または設定します。
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AccordionBuilder.Panes(System.Action{C1.Web.Mvc.Fluent.ListItemFactory{C1.Web.Mvc.AccordionPane,C1.Web.Mvc.Fluent.AccordionPaneBuilder}})">
            <summary>
            Panesプロパティを設定します。
            </summary>
            <param name="build">構築アクション</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AccordionPaneBuilder.IsCollapsed(System.Boolean)">
            <summary>
            <see cref="P:C1.Web.Mvc.AccordionPane.IsCollapsed" />を構成します。このAccordionPaneを展開するか折りたたむかを決定する値を設定します。
            </summary>
            <param name="value">値。</param>
            <returns>現在のビルダ。</returns>
        </member>
        <member name="P:C1.Web.Mvc.AccordionPane.IsCollapsed">
            <summary>
            このAccordionPaneが展開されているか、折りたたまれているかを示す値を取得または設定します。
            </summary>
        </member>
    </members>
</doc>